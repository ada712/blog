(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{516:function(t,v,_){"use strict";_.r(v);var e=_(2),n=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"commit-规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#commit-规范"}},[t._v("#")]),t._v(" COMMIT 规范")]),t._v(" "),v("ul",[v("li",[t._v("1.账户统一使用公司邮箱，直接定位到具体人员")]),t._v(" "),v("li",[t._v("2.诉求触发代码开发:story、bug、生产问题")])]),t._v(" "),v("p",[t._v("即如果要更新代码，必须在 AIO 中有以上三类工作项\n增加 commit 提交规范格式:type(story、bug、生产问题编号): 描述\n示例:fix(s26-1234;b24-235):这里是功能描述")]),t._v(" "),v("ul",[v("li",[t._v("1)type:必填，类型关键字有这些:")])]),t._v(" "),v("p",[v("em",[t._v("feat")]),t._v(":新功能\n"),v("em",[t._v("update")]),t._v(":功能(更新)\n"),v("em",[t._v("fix")]),t._v(": bug 修复\n"),v("em",[t._v("docs")]),t._v(":文档发生修改\n"),v("em",[t._v("style")]),t._v(":不影响代码功能的变动(如删除空格，格式化，缺少分号等)\n"),v("em",[t._v("refactor")]),t._v(":代码重构(不包括 bug 修复、功能新增)\n"),v("em",[t._v("pref")]),t._v(":性能优化\n"),v("em",[t._v("test")]),t._v(":添加或修改测试用例\n"),v("em",[t._v("build")]),t._v(":添加或修改构建配置、第三方依赖(如 webpack、 qulp、\nnpm)\n"),v("em",[t._v("ci")]),t._v(":添加或修改 C| 配置、脚本(如 Travis，Jenkins，GitLab Cl)\n"),v("em",[t._v("chore")]),t._v(":除上述之外的修改\n"),v("em",[t._v("revert")]),t._v(":回滚某个更早之前的提交")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("2)story、buq、生产问题编号:必填\n内容为 AI0 上的 story 编号，如多个 story 则使用英文逗号分隔")])]),t._v(" "),v("li",[v("p",[t._v("3)描述:必填，代码改动影响的范围/模块，功能描述")])])])])}),[],!1,null,null,null);v.default=n.exports}}]);