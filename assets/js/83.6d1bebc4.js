(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{565:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"四、原型与继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、原型与继承"}},[t._v("#")]),t._v(" 四、原型与继承")]),t._v(" "),s("h2",{attrs:{id:"_4-1-说说面向对象的特性与特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-说说面向对象的特性与特点"}},[t._v("#")]),t._v(" 4.1 说说面向对象的特性与特点")]),t._v(" "),s("ul",[s("li",[t._v("封装性")]),t._v(" "),s("li",[t._v("继承性")]),t._v(" "),s("li",[t._v("多态性")])]),t._v(" "),s("p",[t._v("面向对象编程具有灵活、代码可复用、容易维护和开发的有点、更适合多人合作的大型软件项目")]),t._v(" "),s("h2",{attrs:{id:"_4-2-说说你对工厂模式的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-说说你对工厂模式的理解"}},[t._v("#")]),t._v(" 4.2 说说你对工厂模式的理解")]),t._v(" "),s("p",[t._v("工厂模式是用来创建对象的一种最常用的设计模式，不暴露创建对象的具体逻辑，而是将将逻辑封装在一个函数中，那么这个函数就可以被视为一个工厂")]),t._v(" "),s("p",[t._v("其就像工厂一样重复的产生类似的产品，工厂模式只需要我们传入正确的参数，就能生产类似的产品")]),t._v(" "),s("h2",{attrs:{id:"_4-3-创建对象有哪几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-创建对象有哪几种方式"}},[t._v("#")]),t._v(" 4.3 创建对象有哪几种方式？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("字面量的形式直接创建对象")])]),t._v(" "),s("li",[s("p",[t._v("函数方法")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[s("strong",[t._v("工厂模式")]),t._v("，工厂模式的主要工作原理是用函数来封装创建对象的细节，从而通过调用函数来达到复用的目的。")]),t._v(" "),s("li",[s("strong",[t._v("构造函数模式")])]),t._v(" "),s("li",[s("strong",[t._v("原型模式")])]),t._v(" "),s("li",[s("strong",[t._v("构造函数模式+原型模式")]),t._v("，这是创建自定义类型的最常见方式。")]),t._v(" "),s("li",[s("strong",[t._v("动态原型模式")])]),t._v(" "),s("li",[s("strong",[t._v("寄生构造函数模式")])])])]),t._v(" "),s("li",[s("p",[t._v("class 创建")])])]),t._v(" "),s("h2",{attrs:{id:"_4-4-js-宿主对象和原生对象的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-js-宿主对象和原生对象的区别"}},[t._v("#")]),t._v(" 4.4 JS 宿主对象和原生对象的区别")]),t._v(" "),s("p",[s("code",[t._v("原生对象")])]),t._v(" "),s("p",[t._v("“"),s("code",[t._v("独立于宿主环境的 ECMAScript 实现提供的对象")]),t._v("”")]),t._v(" "),s("p",[t._v("包含：Object、Function、Array、String、Boolean、Number、Date、RegExp、Error、EvalError、RangeError、ReferenceError、SyntaxError、TypeError、URIError")]),t._v(" "),s("p",[s("code",[t._v("内置对象")])]),t._v(" "),s("p",[t._v("开发者不必明确实例化内置对象，它已被内部实例化了")]),t._v(" "),s("p",[t._v("同样是“独立于宿主环境”。而 ECMA-262 只定义了两个内置对象，即 Global 和 Math")]),t._v(" "),s("p",[s("code",[t._v("宿主对象")])]),t._v(" "),s("p",[t._v("BOM 和 DOM 都是宿主对象。因为其对于不同的“宿主”环境所展示的内容不同。其实说白了就是，ECMAScript 官方未定义的对象都属于宿主对象，因为其未定义的对象大多数是自己通过 ECMAScript 程序创建的对象")]),t._v(" "),s("h2",{attrs:{id:"_4-5-javascript-内置的常用对象有哪些-并列举该对象常用的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-javascript-内置的常用对象有哪些-并列举该对象常用的方法"}},[t._v("#")]),t._v(" 4.5 JavaScript 内置的常用对象有哪些？并列举该对象常用的方法？")]),t._v(" "),s("p",[s("strong",[t._v("Number 数值对象，数值常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Number.toFixed( ) 采用定点计数法格式化数字")]),t._v(" "),s("li",[t._v("Number.toString( ) 将—个数字转换成字符串")]),t._v(" "),s("li",[t._v("Number.valueOf( ) 返回原始数值")])]),t._v(" "),s("p",[s("strong",[t._v("String 字符串对象，字符串常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Length 获取字符串的长度")]),t._v(" "),s("li",[t._v("split()将一个字符串切割数组")]),t._v(" "),s("li",[t._v("concat() 连接字符串")]),t._v(" "),s("li",[t._v("indexOf()返回一个子字符串在原始字符串中的索引值。如果没有找到，则返回固定值 -1")]),t._v(" "),s("li",[t._v("lastIndexOf() 从后向前检索一个字符串")]),t._v(" "),s("li",[t._v("slice() 抽取一个子串")])]),t._v(" "),s("p",[s("strong",[t._v("Boolean 布尔对象，布尔常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Boolean.toString() 将布尔值转换成字符串")]),t._v(" "),s("li",[t._v("Boolean.valueOf() Boolean 对象的原始值的布尔值")])]),t._v(" "),s("p",[s("strong",[t._v("Array 数组对象，数组常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("join() 将一个数组转成字符串。返回一个字符串")]),t._v(" "),s("li",[t._v("reverse() 将数组中各元素颠倒顺序")]),t._v(" "),s("li",[t._v("delete 运算符只能删除数组元素的值，而所占空间还在，总长度没变(arr.length)")]),t._v(" "),s("li",[t._v("shift()删除数组中第一个元素，返回删除的那个值，并将长度减 1")]),t._v(" "),s("li",[t._v("pop()删除数组中最后一个元素，返回删除的那个值，并将长度减 1")]),t._v(" "),s("li",[t._v("unshift() 往数组前面添加一个或多个数组元素，长度会改变")]),t._v(" "),s("li",[t._v("push() 往数组结尾添加一个或多个数组元素，长度会改变")]),t._v(" "),s("li",[t._v("concat() 连接数组")]),t._v(" "),s("li",[t._v("slice() 切割数组，返回数组的一部分")]),t._v(" "),s("li",[t._v("splice()插入、删除或替换数组的元素")]),t._v(" "),s("li",[t._v("toLocaleString() 把数组转换成局部字符串")]),t._v(" "),s("li",[t._v("toString()将数组转换成一个字符串")]),t._v(" "),s("li",[t._v("forEach()遍历所有元素")]),t._v(" "),s("li",[t._v("every()判断所有元素是否都符合条件")]),t._v(" "),s("li",[t._v("sort()对数组元素进行排序")]),t._v(" "),s("li",[t._v("map()对元素重新组装，生成新数组")]),t._v(" "),s("li",[t._v("filter()过滤符合条件的元素")]),t._v(" "),s("li",[t._v("find() 查找 返回满足提供的测试函数的第一个元素的值。否则返回 undefined。")]),t._v(" "),s("li",[t._v("some() 判断是否有一个满足条件 ，返回布尔值")]),t._v(" "),s("li",[t._v("fill() 填充数组")]),t._v(" "),s("li",[t._v("flat() 数组扁平化")])]),t._v(" "),s("p",[s("strong",[t._v("Function 函数对象，函数常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Function.arguments 传递给函数的参数")]),t._v(" "),s("li",[t._v("Function.apply() 将函数作为一个对象的方法调用")]),t._v(" "),s("li",[t._v("Function.call() 将函数作为对象的方法调用")]),t._v(" "),s("li",[t._v("Function.caller 调用当前函数的函数")]),t._v(" "),s("li",[t._v("Function.length 已声明的参数的个数")]),t._v(" "),s("li",[t._v("Function.prototype 对象类的原型")]),t._v(" "),s("li",[t._v("Function.toString() 把函数转换成字符串")])]),t._v(" "),s("p",[s("strong",[t._v("Object 基础对象，对象常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Object 含有所有 JavaScript 对象的特性的超类")]),t._v(" "),s("li",[t._v("Object.constructor 对象的构造函数")]),t._v(" "),s("li",[t._v("Object.hasOwnProperty( ) 检查属性是否被继承")]),t._v(" "),s("li",[t._v("Object.isPrototypeOf( ) 一个对象是否是另一个对象的原型")]),t._v(" "),s("li",[t._v("Object.propertyIsEnumerable( ) 是否可以通过 for/in 循环看到属性")]),t._v(" "),s("li",[t._v("Object.toLocaleString( ) 返回对象的本地字符串表示")]),t._v(" "),s("li",[t._v("Object.toString( ) 定义一个对象的字符串表示")]),t._v(" "),s("li",[t._v("Object.valueOf( ) 指定对象的原始值")])]),t._v(" "),s("p",[s("strong",[t._v("Date 日期时间对象，日期常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Date.getFullYear() 返回 Date 对象的年份字段")]),t._v(" "),s("li",[t._v("Date.getMonth() 返回 Date 对象的月份字段")]),t._v(" "),s("li",[t._v("Date.getDate() 返回一个月中的某一天")]),t._v(" "),s("li",[t._v("Date.getDay() 返回一周中的某一天")]),t._v(" "),s("li",[t._v("Date.getHours() 返回 Date 对象的小时字段")]),t._v(" "),s("li",[t._v("Date.getMinutes() 返回 Date 对象的分钟字段")]),t._v(" "),s("li",[t._v("Date.getSeconds() 返回 Date 对象的秒字段")]),t._v(" "),s("li",[t._v("Date.getMilliseconds() 返回 Date 对象的毫秒字段")]),t._v(" "),s("li",[t._v("Date.getTime() 返回 Date 对象的毫秒表示")])]),t._v(" "),s("p",[s("strong",[t._v("Math 数学对象，数学常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("Math 对象是一个"),s("code",[t._v("静态对象")])]),t._v(" "),s("li",[t._v("Math.PI 圆周率")]),t._v(" "),s("li",[t._v("Math.abs() 绝对值")]),t._v(" "),s("li",[t._v("Math.ceil() 向上取整(整数加 1，小数去掉)")]),t._v(" "),s("li",[t._v("Math.floor() 向下取整(直接去掉小数)")]),t._v(" "),s("li",[t._v("Math.round() 四舍五入")]),t._v(" "),s("li",[t._v("Math.pow(x，y) 求 x 的 y 次方")]),t._v(" "),s("li",[t._v("Math.sqrt() 求平方根")])]),t._v(" "),s("p",[s("strong",[t._v("RegExp 正则表达式对象，正则常用方法")])]),t._v(" "),s("ul",[s("li",[t._v("RegExp.exec() 检索字符串中指定的值。返回找到的值，并确定其位置。")]),t._v(" "),s("li",[t._v("RegExp.test( ) 检索字符串中指定的值。返回 true 或 false。")]),t._v(" "),s("li",[t._v("RegExp.toString( ) 把正则表达式转换成字符串")]),t._v(" "),s("li",[t._v('RegExp.globa 判断是否设置了 "g" 修饰符')]),t._v(" "),s("li",[t._v('RegExp.ignoreCase 判断是否设置了 "i" 修饰符')]),t._v(" "),s("li",[t._v("RegExp.lastIndex 用于规定下次匹配的起始位置")]),t._v(" "),s("li",[t._v("RegExp.source 返回正则表达式的匹配模式")])]),t._v(" "),s("p",[s("strong",[t._v("Error 异常对象")])]),t._v(" "),s("ul",[s("li",[t._v("Error.message 设置或返回一个错误信息(字符串)")]),t._v(" "),s("li",[t._v("Error.name 设置或返回一个错误名")]),t._v(" "),s("li",[t._v("Error.toString( ) 把 Error 对象转换成字符串")])]),t._v(" "),s("h2",{attrs:{id:"_4-6-说一下-hasownproperty、instanceof-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-说一下-hasownproperty、instanceof-方法"}},[t._v("#")]),t._v(" 4.6 说一下 hasOwnProperty、instanceof 方法")]),t._v(" "),s("p",[s("strong",[t._v("hasOwnProperty()")]),t._v(" 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）。")]),t._v(" "),s("p",[s("strong",[t._v("instanceof")]),t._v(" "),s("strong",[t._v("运算符")]),t._v("用于检测构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性是否出现在某个实例对象的原型链上。")]),t._v(" "),s("h2",{attrs:{id:"_4-7-什么是原型对象-说说对它的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-什么是原型对象-说说对它的理解"}},[t._v("#")]),t._v(" 4.7 什么是原型对象，说说对它的理解")]),t._v(" "),s("p",[s("strong",[t._v("构造函数的内部的 prototype 属性指向的对象，就是构造函数的原型对象。")])]),t._v(" "),s("p",[t._v("原型对象包含了可以由该构造函数的所有实例共享的属性和方法。当使用构造函数新建一个实例对象后，在这个对象的内部将包含一个指针(*"),s("strong",[t._v("*proto**")]),t._v(")，这个指针指向构造函数的 原型对象，在 ES5 中这个指针被称为对象的原型。")]),t._v(" "),s("h2",{attrs:{id:"_4-8-什么是原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-什么是原型链"}},[t._v("#")]),t._v(" 4.8 什么是原型链")]),t._v(" "),s("p",[s("strong",[t._v("原型链是一种查找规则")])]),t._v(" "),s("p",[t._v("当访问一个对象的属性时，如果这个对象内部不存在这个属性，那么它就会去它的原型对象里找这个属性，这个原型对象又会有自己的原型，于是就这样一直找下去，这种链式查找过程称之为原型链")]),t._v(" "),s("h2",{attrs:{id:"_4-9-原型链的终点是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-原型链的终点是什么"}},[t._v("#")]),t._v(" 4.9 原型链的终点是什么？")]),t._v(" "),s("p",[t._v("原型链的尽头是 null。也就是**Object.prototype.**proto****")]),t._v(" "),s("h2",{attrs:{id:"_4-10-基于-js-原型链-实现继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-基于-js-原型链-实现继承"}},[t._v("#")]),t._v(" 4.10 基于 JS 原型链 实现继承")]),t._v(" "),s("h3",{attrs:{id:"_1-原型链继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-原型链继承"}},[t._v("#")]),t._v(" 1.原型链继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：子类构造函数的原型为父类构造函数的实例对象")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1、子类构造函数无法向父类构造函数传参。")])]),t._v(" "),s("li",[s("p",[t._v("2、所有的子类实例共享着一个原型对象，一旦原型对象的属性发生改变，所有子类的实例对象都会收影响")])]),t._v(" "),s("li",[s("p",[t._v("3、如果要给子类的原型上添加方法，必须放在 Son.prototype = new Father()语句后面")])])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型链继承,将子函数的原型绑定到父函数的实例上,子函数可以通过原型链查找到复函数的原型,实现继承")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将Son原型的构造函数指回Son, 否则Son实例的constructor会指向Father")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showAge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无法向父构造函数里传参")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类构造函数的实例继承了父类构造函数原型的属性,所以可以访问到父类构造函数原型里的showName方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类构造函数的实例继承了父类构造函数的属性,但是无法传参赋值,所以是this.name是undefined")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\n")])]),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h3",{attrs:{id:"_2-借用构造函数继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-借用构造函数继承"}},[t._v("#")]),t._v(" 2.借用构造函数继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：用 .call() 和 .apply()方法,在子类构造函数中,调用父类构造函数")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("：1、只继承了父类构造函数的属性，没有继承父类原型的属性。")]),t._v(" "),s("p",[t._v("2、无法实现函数复用，如果父类构造函数里面有一个方法，会导致每一个子类实例上面都有相同的方法。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在Son中借用了Father函数,只继承了父类构造函数的属性，没有继承父类原型的属性。 // 相当于 this.name = name")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以给父构造函数传参")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '刘逍'")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("showName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h3",{attrs:{id:"_3-组合继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-组合继承"}},[t._v("#")]),t._v(" 3.组合继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：原型链继承+借用构造函数继承")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("：1、使用组合继承时，父类构造函数会被调用两次，子类实例对象与子类的原型上会有相同的方法与属性，浪费内存。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello,world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//借用构造函数继承")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型链继承")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Son实例的原型上,会有同样的属性,父类构造函数相当于调用了两次 // 将Son原型的构造函数指回Son, 否则Son实例的constructor会指向Father")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showAge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以向父构造函数里传参 // 也继承了父函数原型上的方法")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '刘逍'")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h3",{attrs:{id:"_4-原型式继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-原型式继承"}},[t._v("#")]),t._v(" 4.原型式继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：创建一个函数，将要继承的对象通过参数传递给这个函数，最终返回一个对象，它的隐式原型指向传入的对象。")]),t._v(" ("),s("strong",[s("em",[t._v("Object.create()方法的底层就是原型式继承")])]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("：只能继承父类函数原型对象上的属性和方法，无法给父类构造函数传参")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个构造函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将这个构造函数的原型指向传入的对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("construct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// construct属性指回子类构造函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回子类构造函数的实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined  继承了原型上的方法,但是没有继承构造函数里的name属性")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"_5-寄生式继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-寄生式继承"}},[t._v("#")]),t._v(" 5.寄生式继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：在原型式继承的函数里，给继承的对象上添加属性和方法，增强这个对象")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("：只能继承父类函数原型对象上的属性和方法，无法给父类构造函数传参")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("construct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给F函数的原型添加属性和方法,增强对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showAge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h3",{attrs:{id:"_6-寄生组合继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-寄生组合继承"}},[t._v("#")]),t._v(" 6.寄生组合继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：原型式继承 + 构造函数继承")])]),t._v(" "),s("p",[s("strong",[t._v("Js 最佳的继承方式，只调用了一次父类构造函数")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello,world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object.create方法返回一个对象，它的隐式原型指向传入的对象。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型上已经没有name属性了,所以这里会报错")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h3",{attrs:{id:"_7-混入继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-混入继承"}},[t._v("#")]),t._v(" 7.混入继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：利用 Object.assign 的方法多个父类函数的原型拷贝给子类原型")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Mather")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Mather"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showColor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用两个父类函数")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Mather")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mather")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将Mather父类函数的原型拷贝给子类函数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// red")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("h3",{attrs:{id:"_8-class-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-class-继承"}},[t._v("#")]),t._v(" 8. class 继承")]),t._v(" "),s("p",[s("strong",[t._v("关键：class 里的 extends 和 super 关键字，继承效果与寄生组合继承一样")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类通过extends继承父类")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用父类里的constructor函数,等同于Father.call(this,name)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '刘逍'")]),t._v("\nson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h2",{attrs:{id:"五、异步与事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、异步与事件循环"}},[t._v("#")]),t._v(" 五、异步与事件循环")]),t._v(" "),s("h2",{attrs:{id:"_5-1-异步编程的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-异步编程的实现方式"}},[t._v("#")]),t._v(" 5.1. 异步编程的实现方式?")]),t._v(" "),s("p",[t._v("JavaScript 中的异步机制可以分为以下几种：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("回调函数")]),t._v(" 的方式，使用回调函数的方式有一个缺点是，多个回调函数嵌套的时候会造成回调函数地狱，上下两层的回调函数间的代码耦合度太高，不利于代码的可维护。")]),t._v(" "),s("li",[s("strong",[t._v("Promise")]),t._v(" 的方式，使用 Promise 的方式可以将嵌套的回调函数作为链式调用。但是使用这种方法，有时会造成多个 then 的链式调用，可能会造成代码的语义不够明确。")]),t._v(" "),s("li",[s("strong",[t._v("generator")]),t._v(" 的方式，它可以在函数的执行过程中，将函数的执行权转移出去，在函数外部还可以将执行权转移回来。当遇到异步函数执行的时候，将函数执行权转移出去，当异步函数执行完毕时再将执行权给转移回来。因此在 generator 内部对于异步操作的方式，可以以同步的顺序来书写。使用这种方式需要考虑的问题是何时将函数的控制权转移回来，因此需要有一个自动执行 generator 的机制，比如说 co 模块等方式来实现 generator 的自动执行。")]),t._v(" "),s("li",[s("strong",[t._v("async 函数")]),t._v(" 的方式，async 函数是 generator 和 promise 实现的一个自动执行的语法糖，它内部自带执行器，当函数内部执行到一个 await 语句的时候，如果语句返回一个 promise 对象，那么函数将会等待 promise 对象的状态变为 resolve 后再继续向下执行。因此可以将异步逻辑，转化为同步的顺序来书写，并且这个函数可以自动执行。")])]),t._v(" "),s("h2",{attrs:{id:"_5-2-并发与并行的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-并发与并行的区别"}},[t._v("#")]),t._v(" 5.2 并发与并行的区别？")]),t._v(" "),s("ul",[s("li",[t._v("并发是宏观概念，我分别有任务 A 和任务 B，在一段时间内通过任务间的切换完成了这两个任务，这种情况就可以称之为并发。")]),t._v(" "),s("li",[t._v("并行是微观概念，假设 CPU 中存在两个核心，那么我就可以同时完成任务 A、B。同时完成多个任务的情况就可以称之为并行。")])]),t._v(" "),s("h2",{attrs:{id:"_5-3-settimeout、setinterval、requestanimationframe-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-settimeout、setinterval、requestanimationframe-的区别"}},[t._v("#")]),t._v(" 5.3 setTimeout、setInterval、requestAnimationFrame 的区别")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("setTimeout")])])]),t._v(" "),s("p",[t._v("执行该语句时，是立即把当前定时器代码推入事件队列，当定时器在事件列表中满足设置的时间值时将传入的函数加入任务队列，之后的执行就交给任务队列负责。但是如果此时任务队列不为空，则需等待，所以执行定时器内代码的时间可能会大于设置的时间。")]),t._v(" "),s("p",[t._v("返回值"),s("code",[t._v("timeoutID")]),t._v("是一个正整数，表示定时器的编号。这个值可以传递给"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/clearTimeout",title:"https://developer.mozilla.org/zh-CN/docs/Web/API/clearTimeout",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("clearTimeout()")]),s("OutboundLink")],1),t._v("来取消该定时器。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("setInterval")])])]),t._v(" "),s("p",[t._v("重复调用一个函数或执行一个代码片段，每次都精确的隔一段时间推入一个事件（但是，事件的执行时间不一定就不准确，还有可能是这个事件还没执行完毕，下一个事件就来了）。它返回一个 "),s("code",[t._v("interval ID")]),t._v("，该 ID 唯一地标识时间间隔，因此你可以稍后通过调用 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/clearInterval",title:"https://developer.mozilla.org/zh-CN/docs/Web/API/clearInterval",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("clearInterval()")]),s("OutboundLink")],1),t._v(" 来移除定时器。")]),t._v(" "),s("p",[s("strong",[t._v("技术上，"),s("code",[t._v("clearTimeout()")]),t._v(" 和 "),s("code",[t._v("clearInterval()")]),t._v("可以互换。但是，为了避免混淆，不要混用取消定时函数。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("requestAnimationFrame")])])]),t._v(" "),s("p",[t._v("是 JS 实现动画的一种方式，它告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行")]),t._v(" "),s("h2",{attrs:{id:"_5-4-什么是回调地狱-回调地狱会带来什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-什么是回调地狱-回调地狱会带来什么问题"}},[t._v("#")]),t._v(" 5.4. 什么是回调地狱？回调地狱会带来什么问题？")]),t._v(" "),s("p",[t._v("回调函数的层层嵌套，就叫做回调地狱。回调地狱会造成代码可复用性不强，可阅读性差，可维护性(迭代性差)，扩展性差等等问题。")]),t._v(" "),s("h2",{attrs:{id:"promise-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-语法"}},[t._v("#")]),t._v(" Promise 语法")]),t._v(" "),s("h2",{attrs:{id:"_5-5-promise-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-promise-是什么"}},[t._v("#")]),t._v(" 5.5. Promise 是什么")]),t._v(" "),s("p",[t._v("Promise 是异步编程的一种解决方案，它是一个对象，可以获取异步操作的消息，他的出现大大改善了异步编程的困境，避免了地狱回调，它比传统的解决方案回调函数和事件更合理和更强大。")]),t._v(" "),s("p",[s("strong",[t._v("promise 本身只是一个容器,真正异步的是它的两个回调 resolve()和 reject()")])]),t._v(" "),s("p",[s("strong",[t._v("promise 本质 不是控制 异步代码的执行顺序（无法控制） ， 而是控制异步代码结果处理的顺序")])]),t._v(" "),s("h2",{attrs:{id:"_5-6-promise-实例有哪些状态-怎么改变状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-promise-实例有哪些状态-怎么改变状态"}},[t._v("#")]),t._v(" 5.6 promise 实例有哪些状态，怎么改变状态")]),t._v(" "),s("p",[t._v("（1）Promise 的实例有"),s("strong",[t._v("三个状态")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("Pending（进行中）")]),t._v(" "),s("li",[t._v("Resolved（已完成）")]),t._v(" "),s("li",[t._v("Rejected（已拒绝）")])]),t._v(" "),s("p",[t._v("当把一件事情交给 promise 时，它的状态就是 Pending，任务完成了状态就变成了 Resolved、没有完成失败了就变成了 Rejected。")]),t._v(" "),s("p",[s("strong",[t._v("如何改变 promise 的状态")])]),t._v(" "),s("ul",[s("li",[t._v("resolve(value): 如果当前是 pending 就会变为 resolved")]),t._v(" "),s("li",[t._v("reject(error): 如果当前是 pending 就会变为 rejected")]),t._v(" "),s("li",[t._v("抛出异常: 如果当前是 pending 就会变为 rejected")])]),t._v(" "),s("p",[t._v("注意：一旦从进行状态变成为其他状态就永远不能更改状态了。")]),t._v(" "),s("h2",{attrs:{id:"_5-7-创建-promise-实例有哪些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-创建-promise-实例有哪些方法"}},[t._v("#")]),t._v(" 5.7 创建 Promise 实例有哪些方法")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("new Promise((resolve,reject)=>{")]),t._v(" ... "),s("strong",[t._v("})")])])]),t._v(" "),s("p",[s("strong",[t._v("一般情况下都会使用")]),s("code",[t._v("new Promise()")]),s("strong",[t._v("来创建 promise 对象，但是也可以使用")]),s("code",[t._v("promise.resolve")]),s("strong",[t._v("和")]),s("code",[t._v("promise.reject")]),s("strong",[t._v("这两个方法：")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Promise.resolve")])])]),t._v(" "),s("p",[s("code",[t._v("Promise.resolve(value)")]),t._v("的返回值也是一个 promise 对象，可以对返回值进行.then 调用，代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印出11")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("Promise.reject")])])]),t._v(" "),s("p",[s("code",[t._v("Promise.reject")]),t._v(" 也是"),s("code",[t._v("new Promise")]),t._v("的快捷形式，也创建一个 promise 对象。代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("“出错了！！”"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_5-8-promise-有哪些实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-promise-有哪些实例方法"}},[t._v("#")]),t._v(" 5.8 Promise 有哪些实例方法")]),t._v(" "),s("p",[s("strong",[t._v("then")])]),t._v(" "),s("p",[s("code",[t._v("then")]),t._v("方法可以接受两个回调函数作为参数。第一个回调函数是 Promise 对象的状态变为"),s("code",[t._v("resolved")]),t._v("时调用，第二个回调函数是 Promise 对象的状态变为"),s("code",[t._v("rejected")]),t._v("时调用。其中第二个参数可以省略。 "),s("code",[t._v("then")]),t._v("方法返回的是一个新的 Promise 实例（不是原来那个 Promise 实例）。因此可以采用链式写法，即"),s("code",[t._v("then")]),t._v("方法后面再调用另一个 then 方法。")]),t._v(" "),s("p",[s("strong",[t._v("catch")])]),t._v(" "),s("p",[t._v("该方法相当于"),s("code",[t._v("then")]),t._v("方法的第二个参数，指向"),s("code",[t._v("reject")]),t._v("的回调函数。不过"),s("code",[t._v("catch")]),t._v("方法还有一个作用，就是在执行"),s("code",[t._v("resolve")]),t._v("回调函数时，如果出现错误，抛出异常，不会停止运行，而是进入"),s("code",[t._v("catch")]),t._v("方法中。")]),t._v(" "),s("p",[s("strong",[t._v("finally")])]),t._v(" "),s("p",[s("code",[t._v("finally")]),t._v("方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。")]),t._v(" "),s("p",[t._v("下面是一个例子，服务器使用 Promise 处理请求，然后使用"),s("code",[t._v("finally")]),t._v("方法关掉服务器。")]),t._v(" "),s("div",{staticClass:"language-scss line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("server."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server.stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("code",[t._v("finally")]),t._v("方法的回调函数不接受任何参数，这意味着没有办法知道，前面的 Promise 状态到底是"),s("code",[t._v("fulfilled")]),t._v("还是"),s("code",[t._v("rejected")]),t._v("。这表明，"),s("code",[t._v("finally")]),t._v("方法里面的操作，应该是与状态无关的，不依赖于 Promise 的执行结果。")]),t._v(" "),s("h2",{attrs:{id:"_5-9-promise-有哪些静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-promise-有哪些静态方法"}},[t._v("#")]),t._v(" 5.9 Promise 有哪些静态方法")]),t._v(" "),s("p",[s("strong",[t._v("all")])]),t._v(" "),s("p",[s("code",[t._v("all")]),t._v("方法可以完成并发任务， 它接收一个数组，数组的每一项都是一个"),s("code",[t._v("promise")]),t._v("对象，返回一个"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Promise")]),s("OutboundLink")],1),t._v("实例。当数组中所有的"),s("code",[t._v("promise")]),t._v("的状态都达到"),s("code",[t._v("resolved")]),t._v("的时候，"),s("code",[t._v("all")]),t._v("方法的状态就会变成"),s("code",[t._v("resolved")]),t._v("，如果有一个状态变成了"),s("code",[t._v("rejected")]),t._v("，那么"),s("code",[t._v("all")]),t._v("方法的状态就会变成"),s("code",[t._v("rejected")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("race")])]),t._v(" "),s("p",[s("code",[t._v("race")]),t._v("方法和"),s("code",[t._v("all")]),t._v("一样，接受的参数是一个每项都是"),s("code",[t._v("promise")]),t._v("的数组，但是与"),s("code",[t._v("all")]),t._v("不同的是，当最先执行完的事件执行完之后，就直接返回该"),s("code",[t._v("promise")]),t._v("对象的值。如果第一个"),s("code",[t._v("promise")]),t._v("对象状态变成"),s("code",[t._v("resolved")]),t._v("，那自身的状态变成了"),s("code",[t._v("resolved")]),t._v("；反之第一个"),s("code",[t._v("promise")]),t._v("变成"),s("code",[t._v("rejected")]),t._v("，那自身状态就会变成"),s("code",[t._v("rejected")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("any")])]),t._v(" "),s("p",[t._v("它接收一个数组，数组的每一项都是一个"),s("code",[t._v("promise")]),t._v("对象，该方法会返回一个新的 "),s("code",[t._v("promise")]),t._v("，数组内的任意一个 "),s("code",[t._v("promise")]),t._v(" 变成了"),s("code",[t._v("resolved")]),t._v("状态，那么由该方法所返回的 "),s("code",[t._v("promise")]),t._v(" 就会变成"),s("code",[t._v("resolved")]),t._v("状态。如果数组内的 "),s("code",[t._v("promise")]),t._v(" 状态都是"),s("code",[t._v("rejected")]),t._v("，那么该方法所返回的 "),s("code",[t._v("promise")]),t._v(" 就会变成"),s("code",[t._v("rejected")]),t._v("状态，")]),t._v(" "),s("p",[s("strong",[t._v("resolve、reject")])]),t._v(" "),s("p",[t._v("用来生成对应状态的 Promise 实例")]),t._v(" "),s("h2",{attrs:{id:"_5-10-promise-all、promise-race、promise-any-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-10-promise-all、promise-race、promise-any-的区别"}},[t._v("#")]),t._v(" 5.10 Promise.all、Promise.race、Promise.any 的区别")]),t._v(" "),s("p",[s("strong",[t._v("all：")]),t._v(" 成功的时候返回的是"),s("strong",[t._v("一个结果数组")]),t._v("，而失败的时候则返回"),s("strong",[t._v("最先被 reject 失败状态的值")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("race：")]),t._v(" 哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。")]),t._v(" "),s("p",[s("strong",[t._v("any：")]),t._v(" 返回最快的成功结果，如果全部失败就返回失败结果。")]),t._v(" "),s("h2",{attrs:{id:"_5-11-一个-promise-指定多个回调函数-都会调用吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-11-一个-promise-指定多个回调函数-都会调用吗"}},[t._v("#")]),t._v(" 5.11 一个 promise 指定多个回调函数, 都会调用吗?")]),t._v(" "),s("p",[t._v("都会调用，成功状态放在 then 的第一个参数里调用")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一个'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第二个'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("失败状态放在 then 的第二个参数里调用")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一个'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第二个'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"_5-12-改变-promise-状态和指定回调函数谁先谁后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-12-改变-promise-状态和指定回调函数谁先谁后"}},[t._v("#")]),t._v(" 5.12 改变 promise 状态和指定回调函数谁先谁后?")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("都有可能, 正常情况下是先指定回调再改变状态, 但也可以先改状态再指定回调")])]),t._v(" "),s("li",[s("p",[t._v("如何先改状态再指定回调?")]),t._v(" "),s("ul",[s("li",[t._v("在执行器中直接调用 resolve()/reject()")]),t._v(" "),s("li",[t._v("延迟更长时间才调用 then()")])])]),t._v(" "),s("li",[s("p",[t._v("什么时候才能得到数据?")]),t._v(" "),s("ul",[s("li",[t._v("如果先指定的回调, 那当状态发生改变时, 回调函数就会调用, 得到数据")]),t._v(" "),s("li",[t._v("如果先改变的状态, 那当指定回调时, 回调函数就会调用, 得到数据")])])])]),t._v(" "),s("h2",{attrs:{id:"_5-13-promise-then-返回的新-promise-的结果状态由什么决定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-13-promise-then-返回的新-promise-的结果状态由什么决定"}},[t._v("#")]),t._v(" 5.13 promise.then()返回的新 promise 的结果状态由什么决定?")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[s("p",[t._v("简单表达: 由 then()指定的回调函数执行的结果决定")])]),t._v(" "),s("li",[s("p",[t._v("详细表达:")]),t._v(" "),s("ul",[s("li",[t._v("如果抛出异常, 新 promise 变为 rejected, 参数为抛出的异常")]),t._v(" "),s("li",[t._v("如果返回的是非 promise 的任意值, 新 promise 变为 resolved, value 为返回的值")]),t._v(" "),s("li",[t._v("如果返回的是另一个新 promise, 此 promise 的结果就会成为新 promise 的结果")])])])]),t._v(" "),s("h2",{attrs:{id:"_5-14-promise-如何串连多个操作任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-14-promise-如何串连多个操作任务"}},[t._v("#")]),t._v(" 5.14 promise 如何串连多个操作任务?")]),t._v(" "),s("ul",[s("li",[t._v("promise 的 then()返回一个新的 promise, 可以开成 then()的链式调用")]),t._v(" "),s("li",[t._v("通过 then 的链式调用串连多个同步/异步任务")])]),t._v(" "),s("h2",{attrs:{id:"_5-15-promise-异常传透是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-15-promise-异常传透是什么"}},[t._v("#")]),t._v(" 5.15 promise 异常传透是什么?")]),t._v(" "),s("p",[t._v("Promise 对象的错误具有“冒泡”性质，会一直向后传递，直到被捕获为止。也就是说，错误总是会被下一个"),s("code",[t._v("catch")]),t._v("语句捕获。")]),t._v(" "),s("ul",[s("li",[t._v("当使用 promise 的 then 链式调用时, 可以在最后指定失败的回调,")]),t._v(" "),s("li",[t._v("前面任何操作出了异常, 都会传到最后失败的回调中处理")])]),t._v(" "),s("h2",{attrs:{id:"_5-16-如何中断-promise-链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-16-如何中断-promise-链"}},[t._v("#")]),t._v(" 5.16 如何中断 promise 链?")]),t._v(" "),s("ul",[s("li",[t._v("当使用 promise 的 then 链式调用时, 在中间中断, 不再调用后面的回调函数。 在回调函数中返回一个 pendding 状态的 promise 对象")])]),t._v(" "),s("h2",{attrs:{id:"_5-17-promise-有什么缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-17-promise-有什么缺点"}},[t._v("#")]),t._v(" 5.17 promise 有什么缺点")]),t._v(" "),s("p",[s("strong",[t._v("代码层面")])]),t._v(" "),s("ul",[s("li",[t._v("无法取消 Promise，一旦新建它就会立即执行，无法中途取消。")]),t._v(" "),s("li",[t._v("如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部。")]),t._v(" "),s("li",[t._v("当处于 pending 状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）。")])]),t._v(" "),s("p",[s("strong",[t._v("语法层面")])]),t._v(" "),s("ul",[s("li",[t._v("Promise 虽然摆脱了回调地狱，但是 then 的链式调⽤也会带来额外的阅读负担")]),t._v(" "),s("li",[t._v("Promise 传递中间值⾮常麻烦")]),t._v(" "),s("li",[t._v("Promise 的调试很差，由于没有代码块，你不能在⼀个返回表达式的箭头函数中设置断点，如果你在⼀个.then 代码块中使⽤调试器的步进(step-over)功能，调试器并不会进⼊后续的.then 代码块，因为调试器只能跟踪同步代码的每⼀步。")])]),t._v(" "),s("h2",{attrs:{id:"async-await-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await-语法"}},[t._v("#")]),t._v(" async/await 语法")]),t._v(" "),s("h2",{attrs:{id:"_5-18-async-函数是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-18-async-函数是什么"}},[t._v("#")]),t._v(" 5.18 async 函数是什么")]),t._v(" "),s("ul",[s("li",[t._v("一句话概括： 它就是 Generator 函数的语法糖，也就是处理异步操作的另一种"),s("code",[t._v("高级写法")])])]),t._v(" "),s("h2",{attrs:{id:"_5-19-async-函数的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-19-async-函数的实现原理"}},[t._v("#")]),t._v(" 5.19 async 函数的实现原理")]),t._v(" "),s("p",[t._v("async 函数的实现原理，就是将 Generator 函数和自动执行器，包装在一个函数里。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// spawn函数就是自动执行器")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"_5-20-async-函数的返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-20-async-函数的返回值"}},[t._v("#")]),t._v(" 5.20 async 函数的返回值")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数返回一个 Promise 对象。")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数内部"),s("code",[t._v("return")]),t._v("语句返回的值，会成为"),s("code",[t._v("then")]),t._v("方法回调函数的参数。")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数内部抛出错误，会导致返回的 Promise 对象变为"),s("code",[t._v("reject")]),t._v("状态。抛出的错误对象会被"),s("code",[t._v("catch")]),t._v("方法回调函数接收到。")]),t._v(" "),s("h2",{attrs:{id:"_5-21-await-到底在等待什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-21-await-到底在等待什么"}},[t._v("#")]),t._v(" 5.21 await 到底在等待什么?")]),t._v(" "),s("p",[t._v("await 等待的是一个表达式，这个表达式的计算结果是 Promise 对象或者其它值（换句话说，就是没有特殊限定）。await 不仅仅用于等 Promise 对象，它可以等任意表达式的结果，所以，await 后面实际是可以接普通函数调用或者直接量的。")]),t._v(" "),s("p",[t._v("await 表达式的运算结果取决于它等的是什么。")]),t._v(" "),s("ul",[s("li",[t._v("如果它等到的不是一个 Promise 对象，那 await 表达式的运算结果就是它等到的东西。")]),t._v(" "),s("li",[t._v("如果它等到的是一个 Promise 对象，await 就忙起来了，它会阻塞后面的代码，等着 Promise 对象 resolve，然后得到 resolve 的值，作为 await 表达式的运算结果。")])]),t._v(" "),s("h2",{attrs:{id:"_5-22-什么是顶层-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-22-什么是顶层-await"}},[t._v("#")]),t._v(" 5.22 什么是顶层 await？")]),t._v(" "),s("p",[t._v("从 ES2022 开始，允许在模块的顶层独立使用"),s("code",[t._v("await")]),t._v("命令，使得上面那行代码不会报错了。它的主要目的是使用"),s("code",[t._v("await")]),s("strong",[t._v("解决模块异步加载的问题。")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AsyncFun "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AsyncFun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"_5-23-如何用-await-让程序停顿指定的时间-休眠效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-23-如何用-await-让程序停顿指定的时间-休眠效果"}},[t._v("#")]),t._v(" 5.23 如何用 await 让程序停顿指定的时间(休眠效果)")]),t._v(" "),s("p",[t._v("JavaScript 一直没有休眠的语法，但是借助"),s("code",[t._v("await")]),t._v("命令就可以让程序停顿指定的时间")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("one2FiveInAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("one2FiveInAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"_5-24-await-的使用注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-24-await-的使用注意点"}},[t._v("#")]),t._v(" 5.24 await 的使用注意点")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[s("code",[t._v("await")]),t._v("命令后面的"),s("code",[t._v("Promise")]),t._v("对象，运行结果可能是"),s("code",[t._v("rejected")]),t._v("，所以最好把"),s("code",[t._v("await")]),t._v("命令放在"),s("code",[t._v("try...catch")]),t._v("代码块中。")]),t._v(" "),s("li",[t._v("多个"),s("code",[t._v("await")]),t._v("命令后面的异步操作，如果不存在继发关系，最好让它们同时触发。")]),t._v(" "),s("li",[s("code",[t._v("await")]),t._v("命令只能用在"),s("code",[t._v("async")]),t._v("函数之中，如果用在普通函数，就会报错。")]),t._v(" "),s("li",[t._v("async 函数可以保留运行堆栈。")])]),t._v(" "),s("h2",{attrs:{id:"_5-25-async-语法怎么捕获异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-25-async-语法怎么捕获异常"}},[t._v("#")]),t._v(" 5.25 async 语法怎么捕获异常")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数内部的异常可以通过 "),s("code",[t._v(".catch()")]),t._v("或者 "),s("code",[t._v("try")]),t._v("/"),s("code",[t._v("catch")]),t._v("来捕获,区别是")]),t._v(" "),s("ul",[s("li",[t._v("try/catch 能捕获所有异常,try 语句抛出错误后会执行 catch 语句，try 语句内后面的内容不会执行")]),t._v(" "),s("li",[t._v("catch（）只能捕获异步方法中 reject 错误，并且 catch 语句之后的语句会继续执行")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("函数错误捕获，以登录功能为例\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录失败'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .catch（）能捕获到错误信息")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录成功'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  但是成功信息也会执行")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录失败'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录成功'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// try抛出错误之后，就不会执行这条语句")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  catch语句能捕获到错误信息")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("h2",{attrs:{id:"_5-26-async-await-对比-promise-的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-26-async-await-对比-promise-的优势"}},[t._v("#")]),t._v(" 5.26 async/await 对比 Promise 的优势")]),t._v(" "),s("ul",[s("li",[t._v("代码读起来更加同步，Promise 虽然摆脱了回调地狱，但是 then 的链式调⽤也会带来额外的阅读负担")]),t._v(" "),s("li",[t._v("Promise 传递中间值⾮常麻烦，⽽ async/await ⼏乎是同步的写法，⾮常优雅")]),t._v(" "),s("li",[t._v("错误处理友好，async/await 可以⽤成熟的 try/catch，Promise 的错误捕获⾮常冗余")]),t._v(" "),s("li",[t._v("调试友好，Promise 的调试很差，由于没有代码块，你不能在⼀个返回表达式的箭头函数中设置断点，如果你在⼀个.then 代码块中使⽤调试器的步进(step-over)功能，调试器并不会进⼊后续的.then 代码块，因为调试器只能跟踪同步代码的每⼀步。")])]),t._v(" "),s("h2",{attrs:{id:"事件循环-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环-event-loop"}},[t._v("#")]),t._v(" 事件循环 Event Loop")]),t._v(" "),s("h2",{attrs:{id:"_5-27-js-的执行机制-同步任务、异步任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-27-js-的执行机制-同步任务、异步任务"}},[t._v("#")]),t._v(" 5.27 JS 的执行机制(同步任务、异步任务)")]),t._v(" "),s("p",[t._v("JS 是一门单线程语言，单线程就意味着，所有的任务需要排队，前一个任务结束，才会执行下一个任务。这样所导致的问题是：如果 JS 执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的觉。为了解决这个问题，JS 中出现了同步和异步。")]),t._v(" "),s("p",[s("strong",[t._v("同步任务")]),t._v("：即主线程上的任务，按照顺序由上⾄下依次执⾏，当前⼀个任务执⾏完毕后，才能执⾏下⼀个任务。")]),t._v(" "),s("p",[s("strong",[t._v("异步任务")]),t._v("：不进⼊主线程，⽽是进⼊任务队列的任务，执行完毕之后会产生一个回调函数,并且通知主线程。当主线程上的任务执行完后，就会调取最早通知自己的回调函数，使其进入主线程中执行。")]),t._v(" "),s("h2",{attrs:{id:"_5-28-什么是-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-28-什么是-event-loop"}},[t._v("#")]),t._v(" 5.28 什么是 Event Loop")]),t._v(" "),s("ul",[s("li",[t._v("事件循环 Event Loop 又叫事件队列，两者是一个概念")])]),t._v(" "),s("p",[t._v("事件循环指的是 js 代码所在运行环境（浏览器、nodejs）编译器的一种解析执行规则。事件循环不属于 js 代码本身的范畴，而是属于 js 编译器的范畴，在 js 中讨论事件循环是没有意义的。换句话说，js 代码可以理解为是一个人在公司中具体做的事情， 而 事件循环 相当于是公司的一种规章制度。 两者不是一个层面的概念。")]),t._v(" "),s("h2",{attrs:{id:"_5-29-宏任务与微任务的概念与区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-29-宏任务与微任务的概念与区别"}},[t._v("#")]),t._v(" 5.29 宏任务与微任务的概念与区别")]),t._v(" "),s("p",[t._v("为了协调任务有条不紊地在主线程上执行，页面进程引入了 "),s("strong",[t._v("消息队列")]),t._v(" 和 "),s("strong",[t._v("事件循环机制")]),t._v("，渲染进程内部也会维护多个消息队列，比如延迟执行队列和普通的消息队列。然后主线程采用一个 "),s("code",[t._v("for")]),t._v(" 循环，不断地从这些任务队列中取出任务并执行任务。这些消息队列中的任务就称为 "),s("strong",[t._v("宏任务")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("微任务")]),t._v("是一个需要异步执行的回调函数，执行时机是在主函数执行结束之后、当前宏任务结束之前。当 JS 执行一段脚本（一个宏任务）的时候，V8 会为其创建一个全局执行上下文，在创建全局执行上下文的同时，V8 引擎也会在内部创建一个 "),s("strong",[t._v("微任务队列")]),t._v("。也就是说 "),s("strong",[t._v("每个宏任务都关联了一个微任务队列")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_5-30-常见的宏任务与微任务分别有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-30-常见的宏任务与微任务分别有哪些"}},[t._v("#")]),t._v(" 5.30 常见的宏任务与微任务分别有哪些")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("任务（代码）")]),t._v(" "),s("th",[t._v("宏/微 任务")]),t._v(" "),s("th",[t._v("环境")])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td",[t._v("宏任务")]),t._v(" "),s("td",[t._v("浏览器")])]),t._v(" "),s("tr",[s("td",[t._v("事件")]),t._v(" "),s("td",[t._v("宏任务")]),t._v(" "),s("td",[t._v("浏览器")])]),t._v(" "),s("tr",[s("td",[t._v("网络请求（Ajax）")]),t._v(" "),s("td",[t._v("宏任务")]),t._v(" "),s("td",[t._v("浏览器")])]),t._v(" "),s("tr",[s("td",[t._v("setTimeout() 定时器")]),t._v(" "),s("td",[t._v("宏任务")]),t._v(" "),s("td",[t._v("浏览器/Node")])]),t._v(" "),s("tr",[s("td",[t._v("fs.readFile() 读取文件")]),t._v(" "),s("td",[t._v("宏任务")]),t._v(" "),s("td",[t._v("Node")])]),t._v(" "),s("tr",[s("td",[t._v("Promise.then()")]),t._v(" "),s("td",[t._v("微任务")]),t._v(" "),s("td",[t._v("浏览器/Node")])]),t._v(" "),s("tr",[s("td",[t._v("async/await")]),t._v(" "),s("td",[t._v("微任务")]),t._v(" "),s("td",[t._v("浏览器/Node")])])])]),t._v(" "),s("h2",{attrs:{id:"_5-31-事件循环-event-loop-执行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-31-事件循环-event-loop-执行机制"}},[t._v("#")]),t._v(" 5.31 事件循环 Event Loop 执行机制")]),t._v(" "),s("p",[t._v("1.进入到 script 标签,就进入到了第一次事件循环.")]),t._v(" "),s("p",[t._v("2.遇到同步代码，立即执行")]),t._v(" "),s("p",[t._v("3.遇到宏任务,放入到宏任务队列里.")]),t._v(" "),s("p",[t._v("4.遇到微任务,放入到微任务队列里.")]),t._v(" "),s("p",[t._v("5.执行完所有同步代码")]),t._v(" "),s("p",[t._v("6.执行微任务代码")]),t._v(" "),s("p",[t._v("7.微任务代码执行完毕，本次队列清空")]),t._v(" "),s("p",[t._v("8.寻找下一个宏任务，重复步骤 1")]),t._v(" "),s("h2",{attrs:{id:"_5-32-为什么-js-是单线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-32-为什么-js-是单线程"}},[t._v("#")]),t._v(" 5.32 为什么 Js 是单线程？")]),t._v(" "),s("p",[t._v("Js 是单线程，但是浏览器是多线程。单线程是为了避免 UI 操作混乱，所有和 UI 操作相关的开发语言都应该是单线程。")]),t._v(" "),s("h2",{attrs:{id:"_5-33-代码题易考点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-33-代码题易考点"}},[t._v("#")]),t._v(" 5.33 代码题易考点")]),t._v(" "),s("ol",[s("li",[t._v("promise 本身是一个同步的代码，只有它后面调用的 then()方法里面的回调才是微任务")]),t._v(" "),s("li",[t._v("then 方法需要 Promise 里的 resolve 传值才会执行")]),t._v(" "),s("li",[t._v("await 右边的表达式还是会立即执行,表达式之后的代码才是微任务, await 微任务可以转换成等价的 promise 微任务分析")]),t._v(" "),s("li",[t._v("script 标签本身是一个"),s("code",[t._v("宏任务")]),t._v("， 当页面出现多个 script 标签的时候，浏览器会把 script 标签作为宏任务来解析")])]),t._v(" "),s("h2",{attrs:{id:"六、-es6-es2022-新语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、-es6-es2022-新语法"}},[t._v("#")]),t._v(" 六、 ES6-ES2022 新语法")]),t._v(" "),s("h2",{attrs:{id:"_6-1-es6-es2015"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-es6-es2015"}},[t._v("#")]),t._v(" 6.1 ES6(ES2015)")]),t._v(" "),s("h3",{attrs:{id:"_1-说说-let-和-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-说说-let-和-const"}},[t._v("#")]),t._v(" 1. 说说 let 和 const")]),t._v(" "),s("p",[s("strong",[t._v("let:")])]),t._v(" "),s("ul",[s("li",[t._v("声明变量")]),t._v(" "),s("li",[t._v("没有变量提升")]),t._v(" "),s("li",[t._v("不可重复声明")]),t._v(" "),s("li",[t._v("具有块级作用域")]),t._v(" "),s("li",[t._v("声明变量后可以在使用时赋值")])]),t._v(" "),s("p",[s("strong",[t._v("const:")])]),t._v(" "),s("ul",[s("li",[t._v("只读常量")]),t._v(" "),s("li",[t._v("没有变量提升")]),t._v(" "),s("li",[t._v("不可重复声明")]),t._v(" "),s("li",[t._v("具有块级作用域")]),t._v(" "),s("li",[t._v("声明变量后必须立马赋值")])]),t._v(" "),s("h3",{attrs:{id:"_2-let、const、var-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-let、const、var-的区别"}},[t._v("#")]),t._v(" 2. let、const、var 的区别")]),t._v(" "),s("p",[s("strong",[t._v("（1）块级作用域：")]),t._v(" 块作用域由 "),s("code",[t._v("{ }")]),t._v("包括，let 和 const 具有块级作用域，var 不存在块级作用域。块级作用域解决了 ES5 中的两个问题：")]),t._v(" "),s("ul",[s("li",[t._v("内层变量可能覆盖外层变量")]),t._v(" "),s("li",[t._v("用来计数的循环变量泄露为全局变量")])]),t._v(" "),s("p",[s("strong",[t._v("（2）变量提升：")]),t._v(" var 存在变量提升，let 和 const 不存在变量提升，即在变量只能在声明之后使用，否在会报错。")]),t._v(" "),s("p",[s("strong",[t._v("（3）给全局添加属性：")]),t._v(" 浏览器的全局对象是 window，Node 的全局对象是 global。var 声明的变量为全局变量，并且会将该变量添加为全局对象的属性，但是 let 和 const 不会。")]),t._v(" "),s("p",[s("strong",[t._v("（4）重复声明：")]),t._v(" var 声明变量时，可以重复声明变量，后声明的同名变量会覆盖之前声明的遍历。const 和 let 不允许重复声明变量。")]),t._v(" "),s("p",[s("strong",[t._v("（5）暂时性死区：")]),t._v(" 在使用 let、const 命令声明变量之前，该变量都是不可用的。这在语法上，称为"),s("strong",[t._v("暂时性死区")]),t._v("。使用 var 声明的变量不存在暂时性死区。")]),t._v(" "),s("p",[s("strong",[t._v("（6）初始值设置：")]),t._v(" 在变量声明时，var 和 let 可以不用设置初始值。而 const 声明变量必须设置初始值。")]),t._v(" "),s("p",[s("strong",[t._v("（7）指针指向：")]),t._v(" let 和 const 都是 ES6 新增的用于创建变量的语法。 let 创建的变量是可以更改指针指向（可以重新赋值）。但 const 声明的变量是不允许改变指针的指向。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("区别")])]),t._v(" "),s("th",[s("strong",[t._v("var")])]),t._v(" "),s("th",[s("strong",[t._v("let")])]),t._v(" "),s("th",[s("strong",[t._v("const")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("是否有块级作用域")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("✔️")])]),t._v(" "),s("tr",[s("td",[t._v("是否存在变量提升")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")])]),t._v(" "),s("tr",[s("td",[t._v("是否添加全局属性")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")])]),t._v(" "),s("tr",[s("td",[t._v("能否重复声明变量")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")])]),t._v(" "),s("tr",[s("td",[t._v("是否存在暂时性死区")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("✔️")])]),t._v(" "),s("tr",[s("td",[t._v("是否必须设置初始值")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("✔️")])]),t._v(" "),s("tr",[s("td",[t._v("能否改变指针指向")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("✔️")]),t._v(" "),s("td",[t._v("×")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-解构赋值"}},[t._v("#")]),t._v(" 3. 解构赋值")]),t._v(" "),s("p",[s("strong",[t._v("对象解构")])]),t._v(" "),s("ul",[s("li",[t._v("形式："),s("code",[t._v("const { x, y } = { x: 1, y: 2 }")])]),t._v(" "),s("li",[t._v("默认："),s("code",[t._v("const { x, y = 2 } = { x: 1 }")])]),t._v(" "),s("li",[t._v("改名："),s("code",[t._v("const { x, y: z } = { x: 1, y: 2 }")])])]),t._v(" "),s("p",[s("strong",[t._v("数组解构")])]),t._v(" "),s("ul",[s("li",[t._v("规则：数据结构具有"),s("code",[t._v("Iterator接口")]),t._v("可采用数组形式的解构赋值")]),t._v(" "),s("li",[t._v("形式："),s("code",[t._v("const [x, y] = [1, 2]")])]),t._v(" "),s("li",[t._v("默认："),s("code",[t._v("const [x, y = 2] = [1]")])])]),t._v(" "),s("p",[s("strong",[t._v("函数参数解构")])]),t._v(" "),s("ul",[s("li",[t._v("数组解构："),s("code",[t._v("function Func([x = 0, y = 1]) {}")])]),t._v(" "),s("li",[t._v("对象解构："),s("code",[t._v("function Func({ x = 0, y = 1 } = {}) {}")])])]),t._v(" "),s("p",[s("strong",[t._v("应用场景:")])]),t._v(" "),s("ul",[s("li",[t._v("交换变量值："),s("code",[t._v("[x, y] = [y, x]")])]),t._v(" "),s("li",[t._v("返回函数多个值："),s("code",[t._v("const [x, y, z] = Func()")])]),t._v(" "),s("li",[t._v("定义函数参数："),s("code",[t._v("Func([1, 2])")])]),t._v(" "),s("li",[t._v("提取 JSON 数据："),s("code",[t._v("const { name, version } = packageJson")])]),t._v(" "),s("li",[t._v("定义函数参数默认值："),s("code",[t._v("function Func({ x = 1, y = 2 } = {}) {}")])]),t._v(" "),s("li",[t._v("遍历 Map 结构："),s("code",[t._v("for (let [k, v] of Map) {}")])]),t._v(" "),s("li",[t._v("输入模块指定属性和方法："),s("code",[t._v('const { readFile, writeFile } = require("fs")')])])]),t._v(" "),s("p",[s("strong",[t._v("注意点")])]),t._v(" "),s("ul",[s("li",[t._v("匹配模式：只要等号两边的模式相同，左边的变量就会被赋予对应的值")]),t._v(" "),s("li",[t._v("解构赋值规则：只要等号右边的值不是对象或数组，就先将其转为对象")]),t._v(" "),s("li",[t._v("解构默认值生效条件：属性值严格等于"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[t._v("解构遵循匹配模式")]),t._v(" "),s("li",[t._v("解构不成功时变量的值等于"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[s("code",[t._v("undefined")]),t._v("和"),s("code",[t._v("null")]),t._v("无法转为对象，因此无法进行解构")])]),t._v(" "),s("h3",{attrs:{id:"_4-字符串的新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串的新增方法"}},[t._v("#")]),t._v(" 4. 字符串的新增方法")]),t._v(" "),s("p",[s("strong",[t._v("includes")])]),t._v(" "),s("p",[t._v("返回布尔值，表示是否找到了参数字符串。")]),t._v(" "),s("p",[s("strong",[t._v("startsWith")])]),t._v(" "),s("p",[t._v("返回布尔值，表示参数字符串是否在原字符串的头部。")]),t._v(" "),s("p",[s("strong",[t._v("endsWith")])]),t._v(" "),s("p",[t._v("返回布尔值，表示参数字符串是否在原字符串的尾部。")]),t._v(" "),s("p",[s("strong",[t._v("repeat")])]),t._v(" "),s("p",[s("code",[t._v("repeat")]),t._v("方法返回一个新字符串，表示将原字符串重复"),s("code",[t._v("n")]),t._v("次")]),t._v(" "),s("h3",{attrs:{id:"_5-展开运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-展开运算符"}},[t._v("#")]),t._v(" 5. 展开运算符")]),t._v(" "),s("p",[s("strong",[t._v("（2）数组扩展运算符")])]),t._v(" "),s("p",[t._v("数组的扩展运算符可以将一个数组转为用逗号分隔的参数序列，且每次只能展开一层数组。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newArr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'two'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'three'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'one'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 合并数组")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数组中的每一项作为参数使用")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("** (3) rest(剩余)参数**")]),t._v(" "),s("p",[t._v("扩展运算符被用在函数形参上时，"),s("strong",[t._v("它还可以把一个分离的参数序列整合成一个数组")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutiple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutiple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 24")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"_6-数组新增的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组新增的方法"}},[t._v("#")]),t._v(" 6. 数组新增的方法")]),t._v(" "),s("p",[s("strong",[t._v("Array.from()")])]),t._v(" "),s("p",[t._v("将类数组或者可迭代对象创建为一个新的数组，不改变原数组并返回这个新数组")]),t._v(" "),s("p",[s("strong",[t._v("Array.of()")])]),t._v(" "),s("p",[s("strong",[t._v("创建一个具有可变数量参数的新数组实例")]),t._v("，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1]")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [true, 1, '刘逍']")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("findIndex")])]),t._v(" "),s("p",[t._v("根据给定的回调函数，找到匹配的第一个元素的索引，找不到返回-1")]),t._v(" "),s("p",[s("strong",[t._v("find")])]),t._v(" "),s("p",[t._v("根据给定的回调函数，找到匹配的第一个元素，找不到返回 undefined")]),t._v(" "),s("p",[s("strong",[t._v("fill")])]),t._v(" "),s("p",[t._v("将给定值填充数组，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将给定值填充索引1-3")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, '逍', '逍', 4 ]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("keys")])]),t._v(" "),s("p",[t._v("返回一个可迭代的对象，其内容为数组的 key，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconst keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("const i of keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历结果 0 1 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("values")])]),t._v(" "),s("p",[t._v("返回一个可迭代的对象，其内容为数组的 valu*，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconst values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("const i of values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历结果 1 true 逍")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("entries")])]),t._v(" "),s("p",[t._v("返回一个可迭代的对象，其内容是一个数组，索引 0 为原数组的元素，1 为原数组该位置的值，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const arr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("[1, true, '逍']")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const iterator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("arr.entries()")]),t._v("\nconsole.log(Array.from(iterator)) // [ [ 0, 1 ], [ 1, true ], [ 2, '逍' ] ]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"_7-对象新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-对象新增方法"}},[t._v("#")]),t._v(" 7. 对象新增方法")]),t._v(" "),s("p",[s("strong",[t._v("Object.is() (用于解决 NaN ≠= NaN，+0 === -0 的问题)")])]),t._v(" "),s("p",[t._v("用于比较两个值是否相等，用于解决 NaN ≠= NaN，+0 === -0 的问题，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n​\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("Object.assign()")])]),t._v(" "),s("p",[t._v("将"),s("strong",[t._v("所有可枚举属性的值从一个或多个源对象复制到目标对象，并返回目标对象")]),t._v("，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("const person = Object.assign(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 18 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(")\nconsole.log(person) //")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 18 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("Object.getPrototypeOf()")])]),t._v(" "),s("p",[t._v("获取原型对象；")]),t._v(" "),s("p",[s("strong",[t._v("Object.setPrototypeOf()")])]),t._v(" "),s("p",[t._v("设置原型对象。")]),t._v(" "),s("h3",{attrs:{id:"_8-class-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-class-类"}},[t._v("#")]),t._v(" 8.class 类")]),t._v(" "),s("p",[t._v("JS 里的类就是构造函数的语法糖")]),t._v(" "),s("p",[s("strong",[t._v("基本用法")])]),t._v(" "),s("ol",[s("li",[t._v("类里面有个 constructor 函数,可以接收传递过来的参数,同时返回实例对象")]),t._v(" "),s("li",[t._v("constructor 函数只要 new 生成实例时,就会自动调用这个函数,如果我们不写这个函数,类也会自动生成这个函数")]),t._v(" "),s("li",[t._v("公共属性放在 constructor 中，公共方法直接在类里面写函数声明,会自动添加至原型对象中")]),t._v(" "),s("li",[t._v("class 类没有变量提升,所以必须先定义类,才能通过类实例化对象")]),t._v(" "),s("li",[t._v("super()调用父类里的 constructor 方法,可以向里面传参,就等于 Father.call(this,x,y)，super 必须在子类的 this 前面调用")]),t._v(" "),s("li",[t._v("class 里面的方法的 this 指向的是调用者,如果调用者不是类的实例,就需要改变 this 的指向")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问器")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setter'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("p",[s("strong",[t._v("关键词")])]),t._v(" "),s("p",[s("strong",[t._v("constructor")])]),t._v(" "),s("p",[s("code",[t._v("constructor()")]),t._v("方法是类的默认方法，通过"),s("code",[t._v("new")]),t._v("命令生成对象实例时，自动调用该方法。一个类必须有"),s("code",[t._v("constructor()")]),t._v("方法，如果没有显式定义，一个空的"),s("code",[t._v("constructor()")]),t._v("方法会被默认添加。")]),t._v(" "),s("p",[s("strong",[t._v("super")])]),t._v(" "),s("p",[s("code",[t._v("super")]),t._v("这个关键字，既可以当作函数使用，也可以当作对象使用。")]),t._v(" "),s("p",[s("code",[t._v("super")]),t._v("作为函数调用时，代表父类的构造函数。子类的构造函数必须执行一次"),s("code",[t._v("super")]),t._v("函数。"),s("code",[t._v("super")]),t._v("虽然代表了父类"),s("code",[t._v("A")]),t._v("的构造函数，"),s("strong",[t._v("但是返回的是子类"),s("code",[t._v("B")]),t._v("的实例")])]),t._v(" "),s("p",[s("code",[t._v("super")]),t._v("作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。")]),t._v(" "),s("p",[s("strong",[t._v("getter、setter")])]),t._v(" "),s("p",[t._v("在“类”的内部可以使用"),s("code",[t._v("get")]),t._v("和"),s("code",[t._v("set")]),t._v("关键字，对某个属性设置存值函数和取值函数，拦截该属性的存取行为。")]),t._v(" "),s("p",[s("strong",[t._v("static")])]),t._v(" "),s("p",[t._v("如果在一个方法前，加上"),s("code",[t._v("static")]),t._v("关键字，就表示该方法不会被实例继承，而是直接通过类来调用，这就称为“静态方法”。")]),t._v(" "),s("p",[s("strong",[t._v("# 私有属性")])]),t._v(" "),s("p",[s("code",[t._v("ES2022")]),t._v("正式为"),s("code",[t._v("class")]),t._v("添加了私有属性，方法是在属性名之前使用"),s("code",[t._v("#")]),t._v("表示。私有属性只能在类的内部使用（"),s("code",[t._v("this.#count")]),t._v("）。如果在类的外部使用，就会报错。")]),t._v(" "),s("h3",{attrs:{id:"_9-模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-模块化"}},[t._v("#")]),t._v(" 9. 模块化")]),t._v(" "),s("p",[t._v("ES6"),s("strong",[t._v("中允许我们使用 export 导出模块，使用 import 引入模块")])]),t._v(" "),s("h3",{attrs:{id:"_10-symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-symbol"}},[t._v("#")]),t._v(" 10. Symbol")]),t._v(" "),s("p",[t._v("ES6 引入了一种新的原始数据类型"),s("code",[t._v("Symbol")]),t._v("，表示独一无二的值。它属于 JavaScript 语言的原生数据类型之一")]),t._v(" "),s("p",[t._v("Symbol 值通过"),s("code",[t._v("Symbol()")]),t._v("函数生成。这就是说，对象的属性名现在可以有两种类型，一种是原来就有的字符串，另一种就是新增的 Symbol 类型。凡是属性名属于 Symbol 类型，就都是独一无二的，可以保证不会与其他属性名产生冲突。")]),t._v(" "),s("h3",{attrs:{id:"_11-iterator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-iterator"}},[t._v("#")]),t._v(" 11. Iterator")]),t._v(" "),s("p",[t._v("Iterator 即迭代器，它是一种接口，为各种不同的数据结构提供了统一的访问机制，换句话说，只要有任何数据结构部署了迭代接口，就可以使用统一的方式的来遍历它。")]),t._v(" "),s("p",[t._v("实现可迭代接口的数据结构，一般都自身实现或继承了以"),s("code",[t._v("Symbol.iterator")]),t._v("属性的，就属于可迭代对象。"),s("code",[t._v("Symbol.iterator")]),t._v("属性本身是一个函数，就是当前数据结构默认的遍历器生成函数。")]),t._v(" "),s("p",[t._v("一个包含"),s("code",[t._v("next()")]),t._v("方法的对象，才可以称为一个迭代对象。"),s("code",[t._v("next()")]),t._v("对象的会有返回一个对象，对象中包含两个值，如下所示：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("value")]),t._v("：迭代器返回的任何"),s("code",[t._v("JavaScript")]),t._v("值。"),s("code",[t._v("done")]),t._v("为"),s("code",[t._v("true")]),t._v("时可省略。")]),t._v(" "),s("li",[s("code",[t._v("done")]),t._v("：一个布尔值，为"),s("code",[t._v("false")]),t._v("时表示迭代未停止，为"),s("code",[t._v("true")]),t._v("时立即停止迭代器，且可以省略"),s("code",[t._v("value")]),t._v("的值。")])]),t._v(" "),s("p",[t._v("Iterator 的作用有三个：")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("为各种数据结构，提供一个统一的、简便的访问接口；")]),t._v(" "),s("li",[t._v("使得数据结构的成员能够按某种次序排列；")]),t._v(" "),s("li",[t._v("ES6 创造了一种新的遍历命令"),s("code",[t._v("for...of")]),t._v("循环，Iterator 接口主要供"),s("code",[t._v("for...of")]),t._v("消费。")])]),t._v(" "),s("h3",{attrs:{id:"_12-for-of-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-for-of-循环"}},[t._v("#")]),t._v(" 12. for...of..循环")]),t._v(" "),s("p",[s("code",[t._v("for...of")]),t._v("循环，作为遍历所有数据结构的统一的方法。")]),t._v(" "),s("p",[t._v("一个数据结构只要部署了"),s("code",[t._v("Symbol.iterator")]),t._v("属性，就被视为具有 iterator 接口，就可以用"),s("code",[t._v("for...of")]),t._v("循环遍历它的成员。也就是说，"),s("code",[t._v("for...of")]),t._v("循环内部调用的是数据结构的"),s("code",[t._v("Symbol.iterator")]),t._v("方法。")]),t._v(" "),s("p",[s("code",[t._v("for...of")]),t._v("循环可以使用的范围包括数组、Set 和 Map 结构、某些类似数组的对象（比如"),s("code",[t._v("arguments")]),t._v("对象、DOM NodeList 对象）、后文的 Generator 对象，以及字符串。")]),t._v(" "),s("h3",{attrs:{id:"_13-generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-generator"}},[t._v("#")]),t._v(" 13. Generator")]),t._v(" "),s("p",[t._v("Generator 是 ES2015 中提供的一种异步编程解决方案，定义 Generator 函数在"),s("code",[t._v("function")]),t._v("关键字和函数名中间使用"),s("code",[t._v("*")]),t._v("星号，函数内部使用"),s("code",[t._v("yield")]),t._v("关键字定义不同的状态。")]),t._v(" "),s("p",[t._v("async 的底层就是 Generator 函数")]),t._v(" "),s("h3",{attrs:{id:"_14-proxy-和-reffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-proxy-和-reffect"}},[t._v("#")]),t._v(" 14. Proxy 和 Reffect")]),t._v(" "),s("p",[t._v("Proxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。")]),t._v(" "),s("p",[t._v("Proxy 对象用于创建一个代理对象，从而实现基本操作的拦截和自定义，基本操作包含 13 种，如下表所示：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("拦截 ⽅法")]),t._v(" "),s("th",[t._v("触发⽅式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("get(target, propKey, receiver)")])]),t._v(" "),s("td",[t._v("读取某个属性")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("set(target, propKey, value, receiver)")])]),t._v(" "),s("td",[t._v("写⼊某个属性")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("has(target, propKey)")])]),t._v(" "),s("td",[s("code",[t._v("in")]),t._v("操作符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("deleteProperty(target, propKey)")])]),t._v(" "),s("td",[s("code",[t._v("delete")]),t._v("操作符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("getPrototypeOf(target)")])]),t._v(" "),s("td",[s("code",[t._v("Object.getPropertypeOf()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("setPrototypeOf(target, proto)")])]),t._v(" "),s("td",[s("code",[t._v("Object.setPrototypeOf()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("isExtensible(target)")])]),t._v(" "),s("td",[s("code",[t._v("Object.isExtensible()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("preventExtensions(target)")])]),t._v(" "),s("td",[s("code",[t._v("Object.preventExtensions()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("getOwnPropertyDescriptor(target, propKey)")])]),t._v(" "),s("td",[s("code",[t._v("Object.getOwnPropertyDescriptor()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("defineProperty(target, propKey, propDesc)")])]),t._v(" "),s("td",[s("code",[t._v("Object.defineProperty()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("ownKeys(target)")])]),t._v(" "),s("td",[s("code",[t._v("Object.keys()")]),t._v(" 、"),s("code",[t._v("Object.getOwnPropertyNames()")]),t._v("、"),s("code",[t._v("Object.getOwnPropertySymbols()")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("apply(target, thisArg, args)")])]),t._v(" "),s("td",[t._v("调⽤⼀个函数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("construct(target, args)")])]),t._v(" "),s("td",[t._v("⽤ new 调⽤⼀个函数")])])])]),t._v(" "),s("p",[t._v("Vue3 就是基于"),s("code",[t._v("Proxy")]),t._v("进行编写的")]),t._v(" "),s("p",[s("strong",[t._v("Reflect")]),t._v("是 ECMAScript2015 提供的一个对象，它提供了一些拦截 JavaScript 操作的静态方法，这些方法与 Proxy 中的"),s("code",[t._v("handlers")]),t._v("中的方法一致。")]),t._v(" "),s("p",[t._v("Reflect 并不是一个构造函数，也就是说它不能够被实例化。")]),t._v(" "),s("p",[s("code",[t._v("Proxy")]),t._v("对象中的每一个拦截操作（例如："),s("code",[t._v("get")]),t._v("、"),s("code",[t._v("delete")]),t._v("等）,内部都对应的调用了"),s("code",[t._v("Reflect")]),t._v("的方法。它提供的静态方法与 Proxy 中的"),s("code",[t._v("handlers")]),t._v("中的方法名称都一致")]),t._v(" "),s("h3",{attrs:{id:"_15-set、map、weakset、weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-set、map、weakset、weakmap"}},[t._v("#")]),t._v(" 15. Set、Map、WeakSet、WeakMap")]),t._v(" "),s("p",[s("code",[t._v("Set")]),t._v("、"),s("code",[t._v("Map")]),t._v("、"),s("code",[t._v("WeakSet")]),t._v("、"),s("code",[t._v("WeakMap")]),t._v("是 ES2015 中新增的几个对象：")]),t._v(" "),s("p",[s("strong",[t._v("set")]),t._v("类似于数组，但是成员的值都是唯一的，没有重复的值。")]),t._v(" "),s("p",[s("code",[t._v("Set")]),t._v("本身是一个构造函数，用来生成 Set 数据结构。")]),t._v(" "),s("p",[s("code",[t._v("Set")]),t._v("和"),s("code",[t._v("WeakSet")]),t._v("与数组类似，准确的它他们是集合，这两者的区别就是"),s("code",[t._v("Set")]),t._v("可以存储任何数据类型，而"),s("code",[t._v("WeakSet")]),t._v("只能存储对象的引用，而且是弱引用；")]),t._v(" "),s("p",[s("code",[t._v("Set")]),t._v("对象在实际开发中最常见的就是实现数据去重，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconst set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set对象可以使用 ... 展开 所有项")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2, 3, 4, 5 ]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("map")]),t._v("类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了“字符串—值”的对应，Map 结构提供了“值—值”的对应，是一种更完善的 Hash 结构实现。如果你需要“键值对”的数据结构，Map 比 Object 更合适。")]),t._v(" "),s("p",[s("code",[t._v("Map")]),t._v("和"),s("code",[t._v("WeakMap")]),t._v("与对象类似，存储方式是键值对形式的，这两者的区别"),s("code",[t._v("Map")]),t._v("的键值对都是可以是任意的而"),s("code",[t._v("WeakMap")]),t._v("键必须是对象的引用而值可以是任意类型的。")]),t._v(" "),s("h2",{attrs:{id:"_6-2-es2016"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-es2016"}},[t._v("#")]),t._v(" 6.2 ES2016")]),t._v(" "),s("h3",{attrs:{id:"_1-指数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-指数运算符"}},[t._v("#")]),t._v(" 1. 指数运算符")]),t._v(" "),s("p",[t._v("ES2016 中新增指数"),s("code",[t._v("**")]),t._v("，也叫幂运算符，与 Math.pow()有着一样的功能，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-array-prototype-includes-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-array-prototype-includes-方法"}},[t._v("#")]),t._v(" 2. Array.prototype.includes()方法")]),t._v(" "),s("p",[t._v("在 ES2016 中在数组原型上增加了"),s("code",[t._v("includes()")]),t._v("方法，该方法用于判断一个数组中是否包含指定的值，返回一个布尔值，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NaN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NaN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NaN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("值得注意的是使用"),s("code",[t._v("includes()")]),t._v("时"),s("code",[t._v("NaN")]),t._v("与"),s("code",[t._v("NaN")]),t._v("、"),s("code",[t._v("+0")]),t._v("与"),s("code",[t._v("-0")]),t._v("是相等的。")]),t._v(" "),s("h2",{attrs:{id:"_6-3-es2017"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-es2017"}},[t._v("#")]),t._v(" 6.3 ES2017")]),t._v(" "),s("h3",{attrs:{id:"_1-对象新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象新增方法"}},[t._v("#")]),t._v(" 1. 对象新增方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object.values()")]),t._v("：返回一个给定对象自身的所有可枚举属性值的数组；")]),t._v(" "),s("li",[s("code",[t._v("Object.entries()")]),t._v("：返回一个给定对象自身可枚举属性的键值对数组；")]),t._v(" "),s("li",[s("code",[t._v("Object.getOwnPropertyDescriptors()")]),t._v("：返回给定对象所有自有属性的属性描述符。")])]),t._v(" "),s("h3",{attrs:{id:"_2-字符串新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串新增方法"}},[t._v("#")]),t._v(" 2. 字符串新增方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("padStart()")]),t._v("：在字符串开头填充空格；")]),t._v(" "),s("li",[s("code",[t._v("padEnd()")]),t._v("：在字符串结尾填充空格；")])]),t._v(" "),s("h2",{attrs:{id:"_6-4-es2018"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-es2018"}},[t._v("#")]),t._v(" 6.4 ES2018")]),t._v(" "),s("h3",{attrs:{id:"_1-异步迭代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-异步迭代"}},[t._v("#")]),t._v(" 1. 异步迭代")]),t._v(" "),s("p",[t._v("在 ES2018 中新增了"),s("code",[t._v("for await...of")]),t._v("语句，该用于可以遍历异步可迭代对象")]),t._v(" "),s("h3",{attrs:{id:"_2-对象扩展运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象扩展运算符"}},[t._v("#")]),t._v(" 2."),s("strong",[t._v("对象扩展运算符")])]),t._v(" "),s("p",[t._v("对象的扩展运算符(...)用于取出参数对象中的所有可遍历属性，拷贝到当前对象之中。")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("let bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{ a: 1, b: 2 };")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("let baz")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{ ...bar }; // { a: 1, b: 2 }")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("上述方法实际上等价于:")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("let bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{ a: 1, b: 2 };")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("let baz")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Object.assign({}, bar); // { a: 1, b: 2 }")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("code",[t._v("Object.assign")]),t._v("方法用于对象的合并，将源对象"),s("code",[t._v("（source）")]),t._v("的所有可枚举属性，复制到目标对象"),s("code",[t._v("（target）")]),t._v("。"),s("code",[t._v("Object.assign")]),t._v("方法的第一个参数是目标对象，后面的参数都是源对象。("),s("strong",[t._v("如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性")]),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"_3-promise-prototype-finally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-promise-prototype-finally"}},[t._v("#")]),t._v(" 3. Promise.prototype.finally")]),t._v(" "),s("p",[s("code",[t._v("finally()")]),t._v("方法会返回一个"),s("code",[t._v("Promise")]),t._v("对象，当 promise 的状态变更，不管是变成"),s("code",[t._v("rejected")]),t._v("或者"),s("code",[t._v("fulfilled")]),t._v("，最终都会执行"),s("code",[t._v("finally()")]),t._v("的回调。")]),t._v(" "),s("h2",{attrs:{id:"_6-5-es2019"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-es2019"}},[t._v("#")]),t._v(" 6.5 ES2019")]),t._v(" "),s("h3",{attrs:{id:"_1-try-catch-语句中的catch允许不使用参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-try-catch-语句中的catch允许不使用参数"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("try...catch")]),t._v("：语句中的"),s("code",[t._v("catch")]),t._v("允许不使用参数")]),t._v(" "),s("h3",{attrs:{id:"_2-trimstart、trimleft、trimend、trimright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-trimstart、trimleft、trimend、trimright"}},[t._v("#")]),t._v(" 2. trimStart、trimLeft、trimEnd、trimRight")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("String.prototype.trimStart")]),t._v("：用于去除字符串左边的空格；")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.trimLeft")]),t._v("：它是"),s("code",[t._v("trimStart")]),t._v("的别名")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.trimEnd")]),t._v("：用于去除字符串右边的空格；")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.trimRight")]),t._v("：它是"),s("code",[t._v("trimEnd")]),t._v("的别名")])]),t._v(" "),s("h3",{attrs:{id:"_3-object-fromentries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-object-fromentries"}},[t._v("#")]),t._v(" 3. Object.fromEntries")]),t._v(" "),s("p",[s("code",[t._v("Object.fromEntries()")]),t._v("方法把键值对列表转换为一个对象，是"),s("code",[t._v("Object.entries()")]),t._v("方法的反操作")]),t._v(" "),s("h2",{attrs:{id:"_6-6-es2020"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-es2020"}},[t._v("#")]),t._v(" 6.6 ES2020")]),t._v(" "),s("h3",{attrs:{id:"_1-动态导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-动态导入"}},[t._v("#")]),t._v(" 1. 动态导入")]),t._v(" "),s("p",[t._v("动态导入，也就是我们需要该模块的时候才会进行加载，这可以减少开销和页面加载时间，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("'"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("modules"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something with the module.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("动态导入使用"),s("code",[t._v("import()")]),t._v("方法，它返回一个 Promise。")]),t._v(" "),s("p",[t._v("在 ES2020 中，还为"),s("code",[t._v("import")]),t._v("增加一个"),s("code",[t._v("meta")]),t._v("对象，该对象给 JavaScript 模块暴露了特定上下文的元数据属性的对象。")]),t._v(" "),s("h3",{attrs:{id:"_2-bigint-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-bigint-数据类型"}},[t._v("#")]),t._v(" 2. BigInt 数据类型")]),t._v(" "),s("p",[t._v("BigInt 的出现时解决 JavaScript 中允许的最大数字是"),s("code",[t._v("2**53-1")]),t._v("的问题，"),s("code",[t._v("BigInt")]),t._v(" 可以表示任意大的整数。")]),t._v(" "),s("h3",{attrs:{id:"_3-空值合并运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-空值合并运算符"}},[t._v("#")]),t._v(" 3. 空值合并运算符 ??")]),t._v(" "),s("p",[t._v("该运算符与逻辑或运算符类似。其计算规则为，只要左运算元为"),s("code",[t._v("null")]),t._v("或者"),s("code",[t._v("undefined")]),t._v("，则返回右运算元，否则返回左运算元。而逻辑或运算符只有左运算元转换为"),s("code",[t._v("boolean")]),t._v("类型后为"),s("code",[t._v("false")]),t._v("，就返回右运算元。")]),t._v(" "),s("h3",{attrs:{id:"_4-可选链操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-可选链操作符"}},[t._v("#")]),t._v(" 4. 可选链操作符 ?.")]),t._v(" "),s("p",[s("code",[t._v("?.")]),t._v(" 操作符的功能类似于 "),s("code",[t._v(".")]),t._v(" 链式操作符，不同之处在于，在引用为空 ("),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Nullish",title:"https://developer.mozilla.org/zh-CN/docs/Glossary/Nullish",target:"_blank",rel:"noopener noreferrer"}},[t._v("nullish"),s("OutboundLink")],1),t._v(" ) ("),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("null")]),s("OutboundLink")],1),t._v(" 或者 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("undefined")]),s("OutboundLink")],1),t._v(") 的情况下不会引起错误，该表达式短路返回值是 "),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("p",[t._v("当我们访问某个属性时，只要有一处不存在，就会返回"),s("code",[t._v("undefind")]),t._v("，不会报错。")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("var A =")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n// console."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A.a.b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 报错\n​\nconsole."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A.a?.b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // undefined\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("可选链操作符也可用于对象下方法的调用，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果存在 obj.fun() 这个方法，下面则会直接调用，如果不存在则会返回undefined")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_6-7-es2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-es2021"}},[t._v("#")]),t._v(" 6.7 ES2021")]),t._v(" "),s("h3",{attrs:{id:"_1-string-prototype-replaceall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-prototype-replaceall"}},[t._v("#")]),t._v(" 1. String.prototype.replaceAll")]),t._v(" "),s("p",[s("code",[t._v("replaceAll()")]),t._v("方法返回一个新字符串，新字符串的内容是经过替换的，实例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'刘逍'")]),t._v("\nconst newStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'小'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刘小")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_2-数值分隔符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数值分隔符"}},[t._v("#")]),t._v(" 2. 数值分隔符 _")]),t._v(" "),s("p",[t._v("严格意义上讲数值分隔符("),s("code",[t._v("_")]),t._v(")并不属于一个运算符，其作用就是使数字更加利于阅读，例如下面的代码")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("_0000_0000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100000000")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3-promise-any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-promise-any"}},[t._v("#")]),t._v(" 3. Promise.any()")]),t._v(" "),s("p",[t._v("ES2021 中新增的"),s("code",[t._v("Promise.any()")]),t._v("方法，它接受的参数和与"),s("code",[t._v("promise.all()")]),t._v("是一致的，唯一不同的是，"),s("code",[t._v("Promise.any()")]),t._v("方法接受的可迭代对象中没有一个 promise 成功（即所有的 promises 都失败/拒绝），就返回一个失败的 promise 和 AggregateError 类型的实例。")]),t._v(" "),s("h3",{attrs:{id:"_4-逻辑赋值操作符-、-、"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-逻辑赋值操作符-、-、"}},[t._v("#")]),t._v(" 4. 逻辑赋值操作符 &&= 、||= 、？？=")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("const "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("f1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nf1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 等同于 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v("\nf2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 等同于 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v("\nf3 ??"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 等同于 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" ?? "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'逍'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_6-8-es2022"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-es2022"}},[t._v("#")]),t._v(" 6.8 ES2022")]),t._v(" "),s("h3",{attrs:{id:"_1-class-的扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-class-的扩展"}},[t._v("#")]),t._v(" 1. class 的扩展")]),t._v(" "),s("p",[t._v("在 ES2022 中允许我们并不在"),s("code",[t._v("constructor")]),t._v("中定义类的成员，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 两者是一致的 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("ES2022 中允许我们使用"),s("code",[t._v("#")]),t._v("开头命名的变量作为类的私有成员")]),t._v(" "),s("h3",{attrs:{id:"_2-await-在顶层使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-await-在顶层使用"}},[t._v("#")]),t._v(" 2. await 在顶层使用")]),t._v(" "),s("p",[t._v("在 ES2022 中新增了允许在顶层使用"),s("code",[t._v("await")]),t._v("，在顶层可以不适用"),s("code",[t._v("async")]),t._v("函数进行包裹，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AsyncFun "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AsyncFun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_3-object-hasown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-object-hasown"}},[t._v("#")]),t._v(" 3. Object.hasOwn()")]),t._v(" "),s("p",[s("code",[t._v("Object.hasOwn()")]),t._v("方法用于判断某个对象上是否具有某个属性，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'刘逍'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"_4-array-prototype-at"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-array-prototype-at"}},[t._v("#")]),t._v(" 4. Array.prototype.at()")]),t._v(" "),s("p",[t._v("ES2022 中新增的"),s("code",[t._v("at()")]),t._v("方法，它的作用是获取数组中的某个成员，它的参数是数组的索引，与直接使用索引的方式不同，它允许我们传递负值，等同于从后面倒数，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[t._v("const arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 arr[arr.length - 1]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"七、-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、-dom"}},[t._v("#")]),t._v(" 七、 DOM")]),t._v(" "),s("h2",{attrs:{id:"_7-1-说一下-dom-事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-说一下-dom-事件流"}},[t._v("#")]),t._v(" 7.1 说一下 DOM 事件流")]),t._v(" "),s("p",[t._v("⼜称为事件传播，是⻚⾯中接收事件的顺序。DOM2 级事件规定的事件流包括了 3 个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("事件捕获阶段（capture phase）")]),t._v(" "),s("li",[t._v("处于⽬标阶段（target phase）")]),t._v(" "),s("li",[t._v("事件冒泡阶段（bubbling phase）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/152eeaa11c2c4ca9a93de8a484295bcd~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-26-46.jpg"}})]),t._v(" "),s("p",[t._v("如上图所示，事件流的触发顺序是：")]),t._v(" "),s("ol",[s("li",[t._v("事件捕获阶段，为截获事件提供了机会")]),t._v(" "),s("li",[t._v("实际的⽬标元素接收到事件")]),t._v(" "),s("li",[t._v("事件冒泡阶段，可在这个阶段对事件做出响应")])]),t._v(" "),s("h2",{attrs:{id:"_7-2-什么是事件冒泡-event-bubbling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-什么是事件冒泡-event-bubbling"}},[t._v("#")]),t._v(" 7.2 什么是事件冒泡（Event Bubbling）")]),t._v(" "),s("p",[t._v("事件开始由最具体的元素（⽂档中嵌套层次最深的那个节点）接收到后，开始逐级向上传播到较为不具体的节点。")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Document"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("按钮"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("如果点击了上面页面代码中的 "),s("code",[t._v("<button>")]),t._v(" 按钮，那么该 "),s("code",[t._v("click")]),t._v(" 点击事件会沿着 DOM 树向上逐级传播，在途经的每个节点上都会发生，具体顺序如下：")]),t._v(" "),s("ol",[s("li",[t._v("button 元素")]),t._v(" "),s("li",[t._v("body 元素")]),t._v(" "),s("li",[t._v("html 元素")]),t._v(" "),s("li",[t._v("document 对象")])]),t._v(" "),s("h2",{attrs:{id:"_7-3-什么是事件捕获-event-capturing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-什么是事件捕获-event-capturing"}},[t._v("#")]),t._v(" 7.3 什么是事件捕获（Event Capturing）")]),t._v(" "),s("p",[t._v("事件开始由较为不具体的节点接收后，然后开始逐级向下传播到最具体的元素上。")]),t._v(" "),s("p",[t._v("事件捕获的最大作用在于：事件在到达预定⽬标之前就可以捕获到它。")]),t._v(" "),s("p",[t._v("如果仍以上面那段 HTML 代码为例，当点击按钮后，在事件捕获的过程中，document 对象会首先接收到这个 "),s("code",[t._v("click")]),t._v(" 事件，然后再沿着 DOM 树依次向下，直到 "),s("code",[t._v("<button>")]),t._v("。具体顺序如下：")]),t._v(" "),s("ol",[s("li",[t._v("document 对象")]),t._v(" "),s("li",[t._v("html 元素")]),t._v(" "),s("li",[t._v("body 元素")]),t._v(" "),s("li",[t._v("button 元素")])]),t._v(" "),s("h2",{attrs:{id:"_7-4-什么是事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-什么是事件委托"}},[t._v("#")]),t._v(" 7.4 什么是事件委托")]),t._v(" "),s("p",[t._v("事件委托，就是利用了事件冒泡的机制，在较上层位置的元素上添加一个事件监听函数，来管理该元素及其所有子孙元素上的某一类的所有事件。")]),t._v(" "),s("p",[t._v("适用场景：在绑定大量事件的时候，可以选择事件委托")]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("ul",[s("li",[t._v("事件委托可以减少事件注册数量，节省内存占⽤!")]),t._v(" "),s("li",[t._v("当新增⼦元素时，⽆需再次做事件绑定，因此非常适合动态添加元素 (vue 解析模板时, 会对新创建的元素, 额外进行绑定的)")])]),t._v(" "),s("h2",{attrs:{id:"_7-5-什么是-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-什么是-dom"}},[t._v("#")]),t._v(" 7.5 什么是 DOM")]),t._v(" "),s("p",[t._v("DOM 就是文档对象模型 ，是用来呈现以及与任意 "),s("code",[t._v("HTML")]),t._v(" 和或"),s("code",[t._v("XML")]),t._v(" 文档交互的 API")]),t._v(" "),s("p",[t._v("它提供了对文档的结构化的表述，并定义了一种方式可以使从程序中对该结构进行访问，从而改变文档的结构，样式和内容")]),t._v(" "),s("h2",{attrs:{id:"_7-6-dom-的常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-dom-的常用操作"}},[t._v("#")]),t._v(" 7.6 DOM 的常用操作")]),t._v(" "),s("h3",{attrs:{id:"_1-创建节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建节点"}},[t._v("#")]),t._v(" (1)创建节点")]),t._v(" "),s("p",[s("strong",[t._v("createElement")])]),t._v(" "),s("p",[t._v("创建新元素，接受一个参数，即要创建元素的标签名")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const divEl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('document.createElement("div");')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("createTextNode")])]),t._v(" "),s("p",[t._v("创建一个文本节点")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const textEl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('document.createTextNode("content");')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("createDocumentFragment")])]),t._v(" "),s("p",[t._v("用来创建一个文档碎片，它表示一种轻量级的文档，主要是用来存储临时节点，然后把文档碎片的内容一次性添加到"),s("code",[t._v("DOM")]),t._v("中")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const fragment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.createDocumentFragment();")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("当请求把一个"),s("code",[t._v("DocumentFragment")]),t._v(" 节点插入文档树时，插入的不是 "),s("code",[t._v("DocumentFragment")]),t._v("自身，而是它的所有子孙节点")]),t._v(" "),s("p",[s("strong",[t._v("createAttribute")])]),t._v(" "),s("p",[t._v("创建属性节点，可以是自定义属性")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const dataAttribute")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.createAttribute('custom');")]),t._v("\nconsle.log(dataAttribute);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"_2-获取节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取节点"}},[t._v("#")]),t._v(" (2)获取节点")]),t._v(" "),s("p",[s("strong",[t._v("querySelector")])]),t._v(" "),s("p",[t._v("传入任何有效的"),s("code",[t._v("css")]),t._v(" 选择器，即可选中单个 "),s("code",[t._v("DOM")]),t._v("元素（首个）：")]),t._v(" "),s("div",{staticClass:"language-dart line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.element'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#element'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name=\"username\"]'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div + p > span'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("如果页面上没有指定的元素时，返回 "),s("code",[t._v("null")])]),t._v(" "),s("p",[s("strong",[t._v("querySelectorAll")])]),t._v(" "),s("p",[t._v("返回一个包含节点子树内所有与之相匹配的"),s("code",[t._v("Element")]),t._v("节点列表，如果没有相匹配的，则返回一个空节点列表")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const notLive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('document.querySelectorAll("p");')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("需要注意的是，该方法返回的是一个 "),s("code",[t._v("NodeList")]),t._v("的静态实例，它是一个静态的“快照”，而非“实时”的查询")]),t._v(" "),s("p",[t._v("关于获取"),s("code",[t._v("DOM")]),t._v("元素的方法还有如下，就不一一述说")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id属性值'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n返回拥有指定id的对象的引用"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'class属性值'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n返回拥有指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("的对象集合"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'标签名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n返回拥有指定标签名的对象集合"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name属性值'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n返回拥有指定名称的对象结合"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CSS选择器'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n仅返回第一个匹配的元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CSS选择器'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n返回所有匹配的元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n获取页面中的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("标签"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n获取页面中的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BODY")]),t._v("标签"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n获取页面中的所有元素节点的对象集合型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("h3",{attrs:{id:"_3-更新节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新节点"}},[t._v("#")]),t._v(" (3)更新节点")]),t._v(" "),s("p",[s("strong",[t._v("innerHTML")])]),t._v(" "),s("p",[t._v("不但可以修改一个"),s("code",[t._v("DOM")]),t._v("节点的文本内容，还可以直接通过"),s("code",[t._v("HTML")]),t._v("片段修改"),s("code",[t._v("DOM")]),t._v("节点内部的子树")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("// 获取<p id="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),t._v(">...</p >\nvar p = document."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("设置文本为abc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\np.innerHTML = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // <p id="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),t._v(">ABC</p >\n// "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("设置HTML")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\np.innerHTML = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC <span style=\"color:red\">RED</span> XYZ'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// <p>...</p >的内部结构已修改\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("innerText、textContent")])]),t._v(" "),s("p",[t._v("自动对字符串进行"),s("code",[t._v("HTML")]),t._v("编码，保证无法设置任何"),s("code",[t._v("HTML")]),t._v("标签")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("// 获取<p id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('"p-id">...</p >')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("var p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.getElementById('p-id');")]),t._v("\n// 设置文本:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("p.innerText")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'<script>alert(\"Hi\")<\/script>';")]),t._v("\n// HTML被自动编码，无法设置一个<script>节点:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("// <p id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('"p-id">&lt;script&gt;alert("Hi")&lt;/script&gt;</p >')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("两者的区别在于读取属性时，"),s("code",[t._v("innerText")]),t._v("不返回隐藏元素的文本，而"),s("code",[t._v("textContent")]),t._v("返回所有文本")]),t._v(" "),s("p",[s("strong",[t._v("style")])]),t._v(" "),s("p",[s("code",[t._v("DOM")]),t._v("节点的"),s("code",[t._v("style")]),t._v("属性对应所有的"),s("code",[t._v("CSS")]),t._v("，可以直接获取或设置。遇到"),s("code",[t._v("-")]),t._v("需要转化为驼峰命名")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("// 获取<p id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('"p-id">...</p >')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.getElementById('p-id');")]),t._v("\n// 设置CSS:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("p.style.color")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'#ff0000';")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("p.style.fontSize")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'20px'; // 驼峰命名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("p.style.paddingTop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'2em';")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"_4-添加节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-添加节点"}},[t._v("#")]),t._v(" (4)添加节点")]),t._v(" "),s("p",[s("strong",[t._v("innerHTML")])]),t._v(" "),s("p",[t._v("如果这个 DOM 节点是空的，例如，"),s("code",[t._v("<div></div>")]),t._v("，那么，直接使用"),s("code",[t._v("innerHTML = '<span>child</span>'")]),t._v("就可以修改"),s("code",[t._v("DOM")]),t._v("节点的内容，相当于添加了新的"),s("code",[t._v("DOM")]),t._v("节点")]),t._v(" "),s("p",[t._v("如果这个 DOM 节点不是空的，那就不能这么做，因为"),s("code",[t._v("innerHTML")]),t._v("会直接替换掉原来的所有子节点")]),t._v(" "),s("p",[s("strong",[t._v("appendChild")])]),t._v(" "),s("p",[t._v("把一个子节点添加到父节点的最后一个子节点")]),t._v(" "),s("p",[t._v("如果是获取"),s("code",[t._v("DOM")]),t._v("元素后再进行添加操作，这个"),s("code",[t._v("js")]),t._v("节点是已经存在当前文档树中，因此这个节点首先会从原先的位置删除，再插入到新的位置")]),t._v(" "),s("p",[t._v("如果动态添加新的节点，则先创建一个新的节点，然后插入到指定的位置")]),t._v(" "),s("p",[s("strong",[t._v("insertBefore")])]),t._v(" "),s("p",[t._v("把子节点插入到指定的位置，使用方法如下：")]),t._v(" "),s("div",{staticClass:"language-scss line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("parentElement."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" referenceElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("子节点会插入到"),s("code",[t._v("referenceElement")]),t._v("之前")]),t._v(" "),s("p",[s("strong",[t._v("setAttribute")])]),t._v(" "),s("p",[t._v("添加一个属性节点，如果元素中已有该属性改变属性值")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" div "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'class'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个参数属性名，第二个参数属性值。")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"_5-删除节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-删除节点"}},[t._v("#")]),t._v(" (5)删除节点")]),t._v(" "),s("p",[s("strong",[t._v("removeChild")])]),t._v(" "),s("p",[t._v("删除一个节点，首先要获得该节点本身以及它的父节点，然后，调用父节点的"),s("code",[t._v("removeChild")]),t._v("把自己删掉")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("// 拿到待删除节点:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const self")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.getElementById('to-be-removed');")]),t._v("\n// 拿到父节点:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("self.parentElement;")]),t._v("\n// 删除:\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const removed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("parent.removeChild(self);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("removed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("== self; // true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("删除后的节点虽然不在文档树中了，但其实它还在内存中，可以随时再次被添加到别的位置")]),t._v(" "),s("h2",{attrs:{id:"_7-7-什么是-dom-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-什么是-dom-树"}},[t._v("#")]),t._v(" 7.7 什么是 DOM 树")]),t._v(" "),s("p",[t._v("以 HTMLDocument 为根节点，其余节点为子节点，组织成一个树的数据结构的表示就是 DOM 树。")]),t._v(" "),s("p",[t._v("DOM 树直接体现了标签与标签之间的关系")]),t._v(" "),s("h2",{attrs:{id:"_7-8-什么是-dom-对象-什么是-document-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-8-什么是-dom-对象-什么是-document-对象"}},[t._v("#")]),t._v(" 7.8 什么是 DOM 对象，什么是 document 对象")]),t._v(" "),s("p",[t._v("DOM 对象是浏览器根据 html 标签生成的 Js 对象")]),t._v(" "),s("p",[t._v("docement 对象是 DOM 里提供的一个对象，它提供的属性和方法都是用来访问和操作网页内容的")]),t._v(" "),s("h2",{attrs:{id:"_7-9-l0-和-l2-注册事件的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-9-l0-和-l2-注册事件的区别"}},[t._v("#")]),t._v(" 7.9 L0 和 L2 注册事件的区别")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4328d62ad5e54a66b4aed311f2c2d954~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-46-17.jpg"}})]),t._v(" "),s("h2",{attrs:{id:"_7-10-怎么解绑事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-10-怎么解绑事件"}},[t._v("#")]),t._v(" 7.10 怎么解绑事件")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9c245425aef478b907f84c84f331c70~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-47-08.jpg"}})]),t._v(" "),s("h2",{attrs:{id:"_7-11-addeventlistener-的第三个参数有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-11-addeventlistener-的第三个参数有什么用"}},[t._v("#")]),t._v(" 7.11 addEventListener 的第三个参数有什么用")]),t._v(" "),s("p",[t._v("addEventListener 有三个参数：")]),t._v(" "),s("div",{staticClass:"language-vbnet line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-vbnet"}},[s("code",[t._v(" element.addEventListener"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useCapture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("event")]),t._v(" "),s("td",[t._v("必须。字符串，指定事件名。 "),s("strong",[t._v("注意:")]),t._v(' 不要使用 "on" 前缀。 例如，使用 "click" ,而不是使用 "onclick"。 '),s("strong",[t._v("提示：")]),t._v(" 所有 HTML DOM 事件，可以查看我们完整的 "),s("a",{attrs:{href:"http://www.runoob.com/jsref/dom-obj-event.html",title:"https://link.juejin.cn?target=http%3A%2F%2Fwww.runoob.com%2Fjsref%2Fdom-obj-event.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML DOM Event 对象参考手册"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("tr",[s("td",[t._v("function")]),t._v(" "),s("td",[t._v('必须。指定要事件触发时执行的函数。 当事件对象会作为第一个参数传入函数。 事件对象的类型取决于特定的事件。例如， "click" 事件属于 MouseEvent(鼠标事件) 对象。')])]),t._v(" "),s("tr",[s("td",[t._v("useCapture")]),t._v(" "),s("td",[t._v("可选。布尔值，指定事件是否在捕获或冒泡阶段执行。 可能值:true - 事件句柄在捕获阶段执行（即在事件捕获阶段调用处理函数）false- false- 默认。事件句柄在冒泡阶段执行（即表示在事件冒泡的阶段调用事件处理函数）")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-12-常用-dom-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-12-常用-dom-事件"}},[t._v("#")]),t._v(" 7.12 常用 DOM 事件")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("鼠标事件")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("鼠标单击 click")])]),t._v(" "),s("li",[s("p",[t._v("鼠标双击 dblclick")])]),t._v(" "),s("li",[s("p",[t._v("鼠标移入/移出")]),t._v(" "),s("ul",[s("li",[t._v("mouseover/mouseout : 支持冒泡")]),t._v(" "),s("li",[t._v("mouseenter/mouseleave： 不支持冒泡")])])]),t._v(" "),s("li",[s("p",[t._v("鼠标移动 mousemove")])]),t._v(" "),s("li",[s("p",[t._v("鼠标按下 mousedown")])]),t._v(" "),s("li",[s("p",[t._v("鼠标松开 mouseup")])])])]),t._v(" "),s("li",[s("p",[t._v("键盘事件")]),t._v(" "),s("ul",[s("li",[t._v("input : 键盘输入")]),t._v(" "),s("li",[t._v("keydwon : 键盘按下")]),t._v(" "),s("li",[t._v("focus: 成为焦点")]),t._v(" "),s("li",[t._v("blur: 失去焦点")])])]),t._v(" "),s("li",[s("p",[t._v("页面事件")]),t._v(" "),s("ul",[s("li",[t._v("scroll ： 页面滚动")]),t._v(" "),s("li",[t._v("resize：页面大小变化")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-13-怎么阻止事件冒泡、阻止默认事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-13-怎么阻止事件冒泡、阻止默认事件"}},[t._v("#")]),t._v(" 7.13 怎么阻止事件冒泡、阻止默认事件？")]),t._v(" "),s("p",[s("strong",[t._v("阻止事件冒泡")])]),t._v(" "),s("p",[t._v("e.stopPropagation**()")]),t._v(" "),s("p",[s("strong",[t._v("阻止默认事件,3 种方式")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//谷歌及IE8以上")]),t._v("\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("returnValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//IE8及以下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无兼容问题（但不能用于节点直接onclick绑定函数）")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"_7-14-dom-的类型有哪几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-14-dom-的类型有哪几种"}},[t._v("#")]),t._v(" 7.14 DOM 的类型有哪几种？")]),t._v(" "),s("p",[t._v("12 种")]),t._v(" "),s("div",{staticClass:"language-scss line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("元素节点            　　Node.ELEMENT_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n属性节点            　　Node.ATTRIBUTE_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文本节点            　　Node.TEXT_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCDATA节点             Node.CDATA_SECTION_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n实体引用名称节点    　　 Node.ENTRY_REFERENCE_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n实体名称节点        　　Node.ENTITY_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n处理指令节点        　　Node.PROCESSING_INSTRUCTION_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n注释节点            　 Node.COMMENT_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档节点            　 Node.DOCUMENT_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档类型节点        　　Node.DOCUMENT_TYPE_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档片段节点        　　Node.DOCUMENT_FRAGMENT_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDTD声明节点            Node.NOTATION_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("12"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"_7-15-dom-种获取坐标的属性有哪些-它们有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-15-dom-种获取坐标的属性有哪些-它们有什么不同"}},[t._v("#")]),t._v(" 7.15 DOM 种获取坐标的属性有哪些，它们有什么不同？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("兼容性")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("offsetX")]),t._v(" "),s("td",[t._v("以当前的目标元素左上角为原点，定位 x 轴坐标")]),t._v(" "),s("td",[t._v("除 Mozilla 外都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("offsetY")]),t._v(" "),s("td",[t._v("以当前的目标元素左上角为原点，定位 y 轴坐标")]),t._v(" "),s("td",[t._v("除 Mozilla 外都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("clientX")]),t._v(" "),s("td",[t._v("以浏览器可视窗口左上角为原点，定位 x 轴坐标")]),t._v(" "),s("td",[t._v("都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("clientY")]),t._v(" "),s("td",[t._v("以浏览器可视窗口左上角为原点，定位 y 轴坐标")]),t._v(" "),s("td",[t._v("都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("pageX")]),t._v(" "),s("td",[t._v("以 doument 对象左上角为原点，定位 x 轴坐标")]),t._v(" "),s("td",[t._v("除 IE 外都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("pageY")]),t._v(" "),s("td",[t._v("以 doument 对象左上角为原点，定位 y 轴坐标")]),t._v(" "),s("td",[t._v("除 IE 外都兼容")])]),t._v(" "),s("tr",[s("td",[t._v("screenX")]),t._v(" "),s("td",[t._v("以计算机屏幕左上顶角为原点，定位 x 轴坐标(多屏幕会影响)")]),t._v(" "),s("td",[t._v("全兼容")])]),t._v(" "),s("tr",[s("td",[t._v("screenY")]),t._v(" "),s("td",[t._v("以计算机屏幕左上顶角为原点，定位 y 轴坐标")]),t._v(" "),s("td",[t._v("全兼容")])]),t._v(" "),s("tr",[s("td",[t._v("layerX")]),t._v(" "),s("td",[t._v("最近的绝对定位的父元素（如果没有，则为 document 对象）左上顶角为元素，定位 x 轴坐标")]),t._v(" "),s("td",[t._v("Mozilla 和 Safari")])]),t._v(" "),s("tr",[s("td",[t._v("layerY")]),t._v(" "),s("td",[t._v("最近的绝对定位的父元素（如果没有，则为 document 对象）左上顶角为元素，定位 y 轴坐标")]),t._v(" "),s("td",[t._v("Mozilla 和 Safari")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-16-dom-种元素视图尺寸的属性有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-16-dom-种元素视图尺寸的属性有哪些"}},[t._v("#")]),t._v(" 7.16 DOM 种元素视图尺寸的属性有哪些？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("offsetLeft")]),t._v(" "),s("td",[t._v("获取当前元素到定位父节点的 left 方向的距离")])]),t._v(" "),s("tr",[s("td",[t._v("offsetTop")]),t._v(" "),s("td",[t._v("获取当前元素到定位父节点的 top 方向的距离")])]),t._v(" "),s("tr",[s("td",[t._v("offsetWidth")]),t._v(" "),s("td",[t._v("获取当前元素 width + 左右 padding + 左右 border-width")])]),t._v(" "),s("tr",[s("td",[t._v("offsetHeight")]),t._v(" "),s("td",[t._v("获取当前元素 height + 上下 padding + 上下 border-width")])]),t._v(" "),s("tr",[s("td",[t._v("clientWidth")]),t._v(" "),s("td",[t._v("获取当前元素 width + 左右 padding")])]),t._v(" "),s("tr",[s("td",[t._v("clientHeight")]),t._v(" "),s("td",[t._v("获取当前元素 height + 上下 padding")])]),t._v(" "),s("tr",[s("td",[t._v("scrollWidth")]),t._v(" "),s("td",[t._v("当前元素内容真实的宽度，内容不超出盒子宽度时为盒子的 clientWidth")])]),t._v(" "),s("tr",[s("td",[t._v("scrollHeight")]),t._v(" "),s("td",[t._v("当前元素内容真实的高度，内容不超出盒子高度时为盒子的 clientHeight")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-17-如何判断元素是否在可视区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-17-如何判断元素是否在可视区域"}},[t._v("#")]),t._v(" 7.17 如何判断元素是否在可视区域")]),t._v(" "),s("h3",{attrs:{id:"getboundingclientrect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getboundingclientrect"}},[t._v("#")]),t._v(" getBoundingClientRect")]),t._v(" "),s("p",[s("code",[t._v("Element.getBoundingClientRect()")]),t._v(" 方法返回元素的大小及其相对于视口的位置。返回的是一个对象，对象里有这 8 个属性："),s("code",[t._v("left，right，top，bottom，width，height，x，y")])]),t._v(" "),s("h2",{attrs:{id:"_7-18-intersectionobserver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-18-intersectionobserver"}},[t._v("#")]),t._v(" 7.18 IntersectionObserver")]),t._v(" "),s("p",[s("code",[t._v("IntersectionObserver")]),s("strong",[t._v("接口")]),t._v(" 提供了一种异步观察目标元素与其祖先元素或顶级文档视窗("),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport",title:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2FViewport",target:"_blank",rel:"noopener noreferrer"}},[t._v("viewport"),s("OutboundLink")],1),t._v(")交叉状态的方法。祖先元素与视窗("),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport",title:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2FViewport",target:"_blank",rel:"noopener noreferrer"}},[t._v("viewport"),s("OutboundLink")],1),t._v(")被称为"),s("strong",[t._v("根(root)")])]),t._v(" "),s("p",[t._v("通俗点说就是："),s("code",[t._v("IntersectionObserver")]),t._v("是用来监听"),s("strong",[t._v("某个元素与视口")]),t._v("的"),s("code",[t._v("交叉状态")]),t._v("的。")]),t._v(" "),s("h2",{attrs:{id:"_7-19-如何遍历输出页面中的所有元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-19-如何遍历输出页面中的所有元素"}},[t._v("#")]),t._v(" 7.19 如何遍历输出页面中的所有元素")]),t._v(" "),s("h3",{attrs:{id:"createnodeiterator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#createnodeiterator"}},[t._v("#")]),t._v(" createNodeIterator")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("createNodeIterator")]),t._v("对页面中所有元素进行遍历输出呢？")]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const body")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.getElementsByTagName('body')[0]")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("   const it")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("document.createNodeIterator(body)")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("   let root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("it.nextNode()")]),t._v("\n    while(root) {\n        console.log(root)\n "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("       root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("it.nextNode()")]),t._v("\n    }\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"_7-20-什么是-bom-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-20-什么是-bom-对象"}},[t._v("#")]),t._v(" 7.20 什么是 BOM 对象")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d02d3f7e82ce497eb64f8bb03a02a9cd~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-53-44.jpg"}})]),t._v(" "),s("h3",{attrs:{id:"_1-location-对象的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-location-对象的常用方法"}},[t._v("#")]),t._v(" (1) location 对象的常用方法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/afee995fe98e42b983727698a8d4e1ff~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-54-33.jpg"}})]),t._v(" "),s("h3",{attrs:{id:"_2-navigator-对象-获取浏览器平台和版本数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-navigator-对象-获取浏览器平台和版本数据"}},[t._v("#")]),t._v(" (2) navigator 对象 (获取浏览器平台和版本数据)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0121daea446e484b87746930d3545777~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-55-25.jpg"}})]),t._v(" "),s("h3",{attrs:{id:"_3-histroy-对象-管理浏览器历史记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-histroy-对象-管理浏览器历史记录"}},[t._v("#")]),t._v(" (3) histroy 对象 （管理浏览器历史记录）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/886d847bf7984663b41d1acb8329c509~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-22_18-57-03.jpg"}})]),t._v(" "),s("h2",{attrs:{id:"八、其他类型问题补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、其他类型问题补充"}},[t._v("#")]),t._v(" 八、其他类型问题补充")]),t._v(" "),s("h2",{attrs:{id:"_8-1-简单说说你对观察者模式的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-简单说说你对观察者模式的理解"}},[t._v("#")]),t._v(" 8.1 简单说说你对观察者模式的理解")]),t._v(" "),s("p",[t._v("观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新")]),t._v(" "),s("p",[t._v("观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/455aea9a384646bebf4521ebbbd07d34~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image",alt:""}})]),t._v(" "),s("p",[t._v("例如生活中，我们可以用报纸期刊的订阅来形象的说明，当你订阅了一份报纸，每天都会有一份最新的报纸送到你手上，有多少人订阅报纸，报社就会发多少份报纸")]),t._v(" "),s("p",[t._v("报社和订报纸的客户就形成了一对多的依赖关系")]),t._v(" "),s("h2",{attrs:{id:"_8-2-简单说说你对发布订阅模式的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-简单说说你对发布订阅模式的理解"}},[t._v("#")]),t._v(" 8.2 简单说说你对发布订阅模式的理解")]),t._v(" "),s("p",[t._v("发布-订阅是一种消息范式，消息的发送者（称为发布者）不会将消息直接发送给特定的接收者（称为订阅者）。而是将发布的消息分为不同的类别，无需了解哪些订阅者（如果有的话）可能存在")]),t._v(" "),s("p",[t._v("同样的，订阅者可以表达对一个或多个类别的兴趣，只接收感兴趣的消息，无需了解哪些发布者存在")]),t._v(" "),s("h2",{attrs:{id:"_8-3-观察者模式与发布订阅的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-观察者模式与发布订阅的区别"}},[t._v("#")]),t._v(" 8.3 观察者模式与发布订阅的区别")]),t._v(" "),s("ul",[s("li",[t._v("在观察者模式中，观察者是知道 Subject 的，Subject 一直保持对观察者进行记录。然而，在发布订阅模式中，发布者和订阅者不知道对方的存在。它们只有通过消息代理进行通信。")]),t._v(" "),s("li",[t._v("在发布订阅模式中，组件是松散耦合的，正好和观察者模式相反。")]),t._v(" "),s("li",[t._v("观察者模式大多数时候是同步的，比如当事件触发，Subject 就会去调用观察者的方法。而发布-订阅模式大多数时候是异步的（使用消息队列）")])]),t._v(" "),s("h2",{attrs:{id:"_8-4-说说你对正则表达式的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-说说你对正则表达式的理解"}},[t._v("#")]),t._v(" 8.4 说说你对正则表达式的理解")]),t._v(" "),s("p",[t._v("正则表达式是一种用来匹配字符串的强有力的武器")]),t._v(" "),s("p",[t._v("它的设计思想是用一种描述性的语言定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("JavaScript")]),t._v("中，正则表达式也是对象，构建正则表达式有两种方式：")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("字面量创建，其由包含在斜杠之间的模式组成")])]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const re")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/\\d+/g;")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"0"}},[s("li",[t._v("调用"),s("code",[t._v("RegExp")]),t._v("对象的构造函数")])]),t._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const re")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('new RegExp("\\d+","g");')]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const rul")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token inner-value"}},[t._v("\\d+")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("const re1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('new RegExp(rul,"g");')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("使用构建函数创建，第一个参数可以是一个变量，遇到特殊字符``需要使用"),s("code",[t._v("\\")]),t._v("进行转义")]),t._v(" "),s("h2",{attrs:{id:"_8-5-如何判断当前的-js-代码是否在浏览器环境中运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-如何判断当前的-js-代码是否在浏览器环境中运行"}},[t._v("#")]),t._v(" 8.5 如何判断当前的 Js 代码是否在浏览器环境中运行")]),t._v(" "),s("p",[t._v("如果 Javascript 在浏览器环境中运行，则会有一个全局对象："),s("code",[t._v("window")]),t._v("。因此，可以通过以下方式判断环境：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("self ！"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在web worker或者sevice worker下是无法获取到windows全局变量， 所以需要通过self变量判断")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);