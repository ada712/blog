(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{568:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue-router-路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-路由"}},[t._v("#")]),t._v(" Vue-Router 路由")]),t._v(" "),s("h2",{attrs:{id:"_1-对前端路由的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-对前端路由的理解"}},[t._v("#")]),t._v(" 1. 对前端路由的理解")]),t._v(" "),s("p",[t._v("在前端技术早期，一个 url 对应一个页面，如果要从 A 页面切换到 B 页面，那么必然伴随着页面的刷新。这个体验并不好，不过在最初也是无奈之举——用户只有在刷新页面的情况下，才可以重新去请求数据。")]),t._v(" "),s("p",[t._v("后来，改变发生了——Ajax 出现了，它允许人们在不刷新页面的情况下发起请求；与之共生的，还有“不刷新页面即可更新页面内容”这种需求。在这样的背景下，出现了 "),s("strong",[t._v("SPA（单页面应用")]),t._v("）。")]),t._v(" "),s("p",[t._v("SPA极大地提升了用户体验，它允许页面在不刷新的情况下更新页面内容，使内容的切换更加流畅。但是在 SPA 诞生之初，人们并没有考虑到“定位”这个问题——在内容切换前后，页面的 URL 都是一样的，这就带来了两个问题：")]),t._v(" "),s("ul",[s("li",[t._v("SPA 其实并不知道当前的页面“进展到了哪一步”。可能在一个站点下经过了反复的“前进”才终于唤出了某一块内容，但是此时只要刷新一下页面，一切就会被清零，必须重复之前的操作、才可以重新对内容进行定位——SPA 并不会“记住”你的操作。")]),t._v(" "),s("li",[t._v("由于有且仅有一个 URL 给页面做映射，这对 SEO 也不够友好，搜索引擎无法收集全面的信息")])]),t._v(" "),s("p",[s("strong",[t._v("为了解决这个问题，前端路由出现了")]),t._v("。")]),t._v(" "),s("p",[t._v("前端路由可以帮助我们在仅有一个页面的情况下，“记住”用户当前走到了哪一步——为 SPA 中的各个视图匹配一个唯一标识。这意味着用户前进、后退触发的新内容，都会映射到不同的 URL 上去。此时即便他刷新页面，因为当前的 URL 可以标识出他所处的位置，因此内容也不会丢失。")]),t._v(" "),s("p",[t._v("那么如何实现这个目的呢？首先要解决两个问题：")]),t._v(" "),s("ul",[s("li",[t._v("当用户刷新页面时，浏览器会默认根据当前 URL 对资源进行重新定位（发送请求）。这个动作对 SPA 是不必要的，因为我们的 SPA 作为单页面，无论如何也只会有一个资源与之对应。此时若走正常的请求-刷新流程，反而会使用户的前进后退操作无法被记录。")]),t._v(" "),s("li",[t._v("单页面应用对服务端来说，就是一个URL、一套资源，那么如何做到用“不同的URL”来映射不同的视图内容呢？")])]),t._v(" "),s("p",[t._v("从这两个问题来看，服务端已经完全救不了这个场景了。所以要靠咱们前端自力更生，不然怎么叫“前端路由”呢？作为前端，可以提供这样的解决思路：")]),t._v(" "),s("ul",[s("li",[t._v("拦截用户的刷新操作，避免服务端盲目响应、返回不符合预期的资源内容。把刷新这个动作完全放到前端逻辑里消化掉。")]),t._v(" "),s("li",[t._v("感知 URL 的变化。这里不是说要改造 URL、凭空制造出 N 个 URL 来。而是说 URL 还是那个 URL，只不过我们可以给它做一些微小的处理——这些处理并不会影响 URL 本身的性质，不会影响服务器对它的识别，只有我们前端感知的到。一旦我们感知到了，我们就根据这些变化、用 JS 去给它生成不同的内容。")])]),t._v(" "),s("h2",{attrs:{id:"_2-vuerouter是什么-有那些组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vuerouter是什么-有那些组件"}},[t._v("#")]),t._v(" 2. VueRouter是什么, 有那些组件")]),t._v(" "),s("ul",[s("li",[t._v("Vue Router 是官方的路由管理器。它和 Vue.js 的核心深度集成，路径和组件的映射关系, 让构建单页面应用变得易如反掌。")]),t._v(" "),s("li",[t._v("router-link 实质上最终会渲染成a链接")]),t._v(" "),s("li",[t._v("router-view 子级路由显示")]),t._v(" "),s("li",[t._v("keep-alive 包裹组件缓存")])]),t._v(" "),s("h2",{attrs:{id:"_3-route-和-router-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-route-和-router-的区别"}},[t._v("#")]),t._v(" 3. "),s("code",[t._v("$route")]),t._v(" 和"),s("code",[t._v("$router")]),t._v(" 的区别")]),t._v(" "),s("ul",[s("li",[t._v("$route 是“路由信息对象”，包括 path，params，hash，query，fullPath，matched，name 等路由信息参数")]),t._v(" "),s("li",[t._v("$router 是“路由实例”对象包括了路由的跳转方法，钩子函数等。")])]),t._v(" "),s("h2",{attrs:{id:"_4-路由开发的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-路由开发的优缺点"}},[t._v("#")]),t._v(" 4. 路由开发的优缺点")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("整体不刷新页面，用户体验更好")]),t._v(" "),s("li",[t._v("数据传递容易, 开发效率高")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("开发成本高(需要学习专门知识)")]),t._v(" "),s("li",[t._v("首次加载会比较慢一点。不利于seo")])]),t._v(" "),s("h2",{attrs:{id:"_5-vuerouter的使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vuerouter的使用方式"}},[t._v("#")]),t._v(" 5. VueRouter的使用方式")]),t._v(" "),s("ol",[s("li",[t._v("使用Vue.use( )将VueRouter插入")]),t._v(" "),s("li",[t._v("创建路由规则")]),t._v(" "),s("li",[t._v("创建路由对象")]),t._v(" "),s("li",[t._v("将路由对象挂到 Vue 实例上")]),t._v(" "),s("li",[t._v("设置路由挂载点")])]),t._v(" "),s("h2",{attrs:{id:"_6-vue-router-路由模式有几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue-router-路由模式有几种"}},[t._v("#")]),t._v(" 6. vue-router 路由模式有几种？")]),t._v(" "),s("p",[s("strong",[t._v("hash模式、history模式、Abstract模式")])]),t._v(" "),s("h3",{attrs:{id:"前端路由原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由原理"}},[t._v("#")]),t._v(" 前端路由原理")]),t._v(" "),s("p",[t._v("前端路由的核心，就在于改变视图的同时不会向后端发出请求；而是加载路由对应的组件")]),t._v(" "),s("p",[t._v("vue-router就是将组件映射到路由, 然后渲染出来的。并实现了三种模式")]),t._v(" "),s("p",[t._v("Hash模式、History模式以及Abstract模式。默认Hash模式")]),t._v(" "),s("p",[s("strong",[t._v("hash模式")])]),t._v(" "),s("p",[t._v("是指 url 尾巴后的 # 号以及后面的字符。hash 虽然出现在url中，但不会被包括在http请求中，对后端完全没有影响，因此改变hash不会被重新加载页面。")]),t._v(" "),s("p",[s("strong",[t._v("history 模式")])]),t._v(" "),s("p",[t._v("URL 就像正常的 url, 不过这种模式要玩好，还需要后台配置支持。因为我们的应用是个单页客户端应用，如果后台没有正确的配置，当用户在浏览器直接访问 "),s("code",[t._v("http://oursite.com/user/id")]),t._v(" 就会返回 404，这就不好看了")]),t._v(" "),s("p",[s("strong",[t._v("Abstract模式")])]),t._v(" "),s("p",[t._v("支持所有javascript运行模式。vue-router 自身会对环境做校验，如果发现没有浏览器的 API，路由会自动强制进入 abstract 模式。在移动端原生环境中也是使用 abstract 模式。")]),t._v(" "),s("p",[s("strong",[t._v("修改路由模式:")]),t._v(" 在实例化路由对象时, 传入mode选项和值修改")]),t._v(" "),s("h3",{attrs:{id:"hash模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" Hash模式")]),t._v(" "),s("p",[s("strong",[t._v("原理")]),t._v(" "),s("strong",[t._v("基于浏览器的hashchange事件")]),t._v("，地址变化时，通过window.location.hash 获取地址上的hash值；并通过构造Router类，配置routes对象设置hash值与对应的组件内容。")]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("hash值会出现在URL中, 但是不会被包含在Http请求中, 因此hash值改变不会重新加载页面")])]),t._v(" "),s("li",[s("strong",[t._v("hash改变会触发hashchange事件, 能控制浏览器的前进后退")])]),t._v(" "),s("li",[s("strong",[t._v("兼容性好")])])]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("ol",[s("li",[t._v("地址栏中携带#，不美观")]),t._v(" "),s("li",[t._v("只可修改 # 后面的部分，因此只能设置与当前 URL 同文档的 URL")]),t._v(" "),s("li",[t._v("hash有体积限制，故只可添加短字符串")]),t._v(" "),s("li",[s("strong",[t._v("设置的新值必须与原来不一样才会触发hashchange事件")]),t._v("，并将记录添加到栈中")]),t._v(" "),s("li",[s("strong",[t._v("每次URL的改变不属于一次http请求，所以不利于SEO优化")])])]),t._v(" "),s("h3",{attrs:{id:"history模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" History模式")]),t._v(" "),s("p",[s("strong",[t._v("原理")])]),t._v(" "),s("p",[s("strong",[t._v("基于HTML5新增的pushState()和replaceState()两个api，以及浏览器的popstate事件")]),t._v("，地址变化时，通过window.location.pathname找到对应的组件。并通过构造Router类，配置routes对象设置pathname值与对应的组件内容。")]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("ol",[s("li",[t._v("没有#，更加美观")]),t._v(" "),s("li",[t._v("pushState() 设置的新 URL 可以是与当前 URL 同源的任意 URL")]),t._v(" "),s("li",[t._v("pushState() 设置的新 URL 可以与当前 URL 一模一样，这样也会把记录添加到栈中")]),t._v(" "),s("li",[t._v("pushState() 通过 stateObject 参数可以添加任意类型的数据到记录中")]),t._v(" "),s("li",[t._v("pushState() 可额外设置 title 属性供后续使用")]),t._v(" "),s("li",[t._v("浏览器的进后退能触发浏览器的popstate事件，获取window.location.pathname来控制页面的变化")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("ol",[s("li",[t._v("URL的改变属于http请求，借助history.pushState实现页面的无刷新跳转，因此会重新请求服务器。所以"),s("strong",[t._v("前端的 URL 必须和实际向后端发起请求的 URL 一致")]),t._v("。如果用户输入的URL回车或者浏览器刷新或者分享出去某个页面路径，用户点击后，URL与后端配置的页面请求URL不一致，则匹配不到任何静态资源，就会返回404页面。所以需要后台配置支持，覆盖所有情况的候选资源，如果 URL 匹配不到任何静态资源，则应该返回app 依赖的页面或者应用首页。")]),t._v(" "),s("li",[s("strong",[t._v("兼容性差")]),t._v("，特定浏览器支持")])]),t._v(" "),s("h3",{attrs:{id:"为什么history模式下路由跳转会报404"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么history模式下路由跳转会报404"}},[t._v("#")]),t._v(" 为什么history模式下路由跳转会报404")]),t._v(" "),s("ol",[s("li",[t._v("URL的改变属于http请求，借助history.pushState实现页面的无刷新跳转，因此会重新请求服务器")]),t._v(" "),s("li",[t._v("所以前端的 URL 必须和实际向后端发起请求的 URL 一致")])]),t._v(" "),s("h2",{attrs:{id:"_7-路由跳转有那些方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-路由跳转有那些方式"}},[t._v("#")]),t._v(" 7. 路由跳转有那些方式")]),t._v(" "),s("p",[t._v("1、this.$router.push()跳转到指定的url，并在history中添加记录，点击回退返回到上一个页面")]),t._v(" "),s("p",[t._v("2、this.$router.replace()跳转到指定的url，但是history中不会添加记录，点击回退到上上个页面")]),t._v(" "),s("p",[t._v("3、this.$router.go(n)向前或者后跳转n个页面，n可以是正数也可以是负数")]),t._v(" "),s("h3",{attrs:{id:"编程式导航使用的方法以及常用的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程式导航使用的方法以及常用的方法"}},[t._v("#")]),t._v(" 编程式导航使用的方法以及常用的方法")]),t._v(" "),s("ul",[s("li",[t._v("路由跳转 ： this.$router.push()")]),t._v(" "),s("li",[t._v("路由替换 : this.$router.replace()")]),t._v(" "),s("li",[t._v("后退： this.$router.back()")]),t._v(" "),s("li",[t._v("前进 ：this.$router.forward()")])]),t._v(" "),s("h2",{attrs:{id:"_8-vue-router跳转和location-href有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-vue-router跳转和location-href有什么区别"}},[t._v("#")]),t._v(" 8. Vue-router跳转和location.href有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("location.href= /url")]),t._v("来跳转，简单方便，但是刷新了页面；")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("history.pushState( /url )")]),t._v(" ，无刷新页面，静态跳转；")]),t._v(" "),s("li",[t._v("引进 router ，然后使用 "),s("code",[t._v("router.push( /url )")]),t._v(" 来跳转，使用了 "),s("code",[t._v("diff")]),t._v(" 算法，实现了按需加载，减少了 dom 的消耗。其实使用 router 跳转和使用 "),s("code",[t._v("history.pushState()")]),t._v(" 没什么差别的，因为vue-router就是用了 "),s("code",[t._v("history.pushState()")]),t._v(" ，尤其是在history模式下。")])]),t._v(" "),s("h2",{attrs:{id:"_9-如何获取页面的hash变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何获取页面的hash变化"}},[t._v("#")]),t._v(" 9. 如何获取页面的hash变化")]),t._v(" "),s("p",[s("strong",[t._v("（1）监听$route的变化")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d5a3474579e498f81c52466ad40ee60~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"111.png"}})]),t._v(" "),s("p",[s("strong",[t._v("（2）window.location.hash读取#值")])]),t._v(" "),s("p",[t._v("window.location.hash 的值可读可写，读取来判断状态是否改变，写入时可以在不重载网页的前提下，添加一条历史访问记录。")]),t._v(" "),s("h2",{attrs:{id:"_10-路由的传参方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-路由的传参方式"}},[t._v("#")]),t._v(" 10. 路由的传参方式")]),t._v(" "),s("h3",{attrs:{id:"声明式导航传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式导航传参"}},[t._v("#")]),t._v(" 声明式导航传参")]),t._v(" "),s("p",[t._v("在 router-link 上的 to 属性传值,")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("/path?参数名=值")]),t._v(" "),s("ul",[s("li",[t._v("接收传递过来的值: $route.query.参数名")])])]),t._v(" "),s("li",[s("p",[t._v("/path/值/值 –> 需要路由对象提前配置 path: “/path/参数名”")]),t._v(" "),s("ul",[s("li",[t._v("接收传递过来的值: $route.params.参数名")])])])]),t._v(" "),s("h3",{attrs:{id:"编程式导航传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程式导航传参"}},[t._v("#")]),t._v(" 编程式导航传参")]),t._v(" "),s("p",[t._v("this.$router.push( ) 可以不参数,根据传的值自动匹配是path还是name")]),t._v(" "),s("p",[t._v("因为使用path会自动忽略params ,所以会出现两种组合")]),t._v(" "),s("p",[s("strong",[t._v("(1) name+params 方式传参")])]),t._v(" "),s("p",[t._v("A页面传参")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 'xxx'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转的路由")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("params")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" id   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送的参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("B页面接收传参：")]),t._v(" "),s("p",[t._v("this.$route.params.id")]),t._v(" "),s("p",[s("strong",[t._v("(2) path+query 方式传参")])]),t._v(" "),s("p",[t._v("A页面传参")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转的路由")]),t._v("\n    query"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送的参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("B页面接参：")]),t._v(" "),s("p",[t._v("this.$route.query.id")]),t._v(" "),s("p",[s("strong",[t._v("params 和query 方式传参的区别")])]),t._v(" "),s("ol",[s("li",[t._v("写法上不同")]),t._v(" "),s("li",[t._v("地址栏不同")]),t._v(" "),s("li",[t._v("刷新方式不同")])]),t._v(" "),s("h2",{attrs:{id:"_11-params和query的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-params和query的区别"}},[t._v("#")]),t._v(" 11. params和query的区别")]),t._v(" "),s("p",[s("strong",[t._v("用法")]),t._v("：query要用path来引入，params要用name来引入，接收参数都是类似的，分别是 "),s("code",[t._v("this.$route.query.name")]),t._v(" 和 "),s("code",[t._v("this.$route.params.name")]),t._v(" 。")]),t._v(" "),s("p",[s("strong",[t._v("url地址显示")]),t._v("：query更加类似于ajax中get传参，params则类似于post，说的再简单一点，前者在浏览器地址栏中显示参数，后者则不显示")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：query刷新不会丢失query里面的数据 params刷新会丢失 params里面的数据。")]),t._v(" "),s("h2",{attrs:{id:"_12-路由配置项常用的属性及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-路由配置项常用的属性及作用"}},[t._v("#")]),t._v(" 12. 路由配置项常用的属性及作用")]),t._v(" "),s("p",[t._v("路由配置参数：")]),t._v(" "),s("p",[t._v("path : 跳转路径 ​ component : 路径相对于的组件 ​ name:命名路由 ​ children:子路由的配置参数(路由嵌套) ​ props:路由解耦 ​ redirect : 重定向路由")]),t._v(" "),s("h2",{attrs:{id:"_13-路由重定向和404"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-路由重定向和404"}},[t._v("#")]),t._v(" 13. 路由重定向和404")]),t._v(" "),s("p",[s("strong",[t._v("路由重定向")])]),t._v(" "),s("ol",[s("li",[t._v("匹配path后, 强制切换到另一个目标path上")]),t._v(" "),s("li",[t._v("redirect 是设置要重定向到哪个路由路径")]),t._v(" "),s("li",[t._v('网页默认打开, 匹配路由"/", 强制切换到"/find"上')]),t._v(" "),s("li",[t._v("redirect配置项, 值为要强制切换的路由路径")]),t._v(" "),s("li",[t._v("强制重定向后, 还会重新来数组里匹配一次规则")])]),t._v(" "),s("p",[s("strong",[t._v("404页面")])]),t._v(" "),s("ol",[s("li",[t._v("如果路由hash值, 没有和数组里规则匹配")]),t._v(" "),s("li",[t._v("path: ' * ' (任意路径)")]),t._v(" "),s("li",[t._v("默认给一个404页面")]),t._v(" "),s("li",[t._v("如果路由未命中任何规则, 给出一个兜底的404页面")])]),t._v(" "),s("h2",{attrs:{id:"_14-vue-router-导航守卫有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue-router-导航守卫有哪些"}},[t._v("#")]),t._v(" 14. Vue-router 导航守卫有哪些")]),t._v(" "),s("ul",[s("li",[t._v("全局守卫："),s("strong",[t._v("beforeEach")]),t._v("、beforeResolve、"),s("strong",[t._v("afterEach")])]),t._v(" "),s("li",[t._v("路由独享的守卫：beforeEnter")]),t._v(" "),s("li",[t._v("组件内的守卫：beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave")])]),t._v(" "),s("h2",{attrs:{id:"_15-vue-router-路由钩子在生命周期的体现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-vue-router-路由钩子在生命周期的体现"}},[t._v("#")]),t._v(" 15. Vue-router 路由钩子在生命周期的体现")]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"vue-router导航守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router导航守卫"}},[t._v("#")]),t._v(" Vue-Router导航守卫")])])]),t._v(" "),s("p",[t._v("有的时候，需要通过路由来进行一些操作，比如最常见的登录权限验证，当用户满足条件时，才让其进入导航，否则就取消跳转，并跳到登录页面让其登录。 为此有很多种方法可以植入路由的导航过程：全局的，单个路由独享的，或者组件级的")]),t._v(" "),s("p",[s("strong",[t._v("1. 全局路由钩子")])]),t._v(" "),s("p",[t._v("vue-router全局有三个路由钩子;")]),t._v(" "),s("ul",[s("li",[t._v("router.beforeEach 全局前置守卫 进入路由之前")]),t._v(" "),s("li",[t._v("router.beforeResolve 全局解析守卫（2.5.0+）在 beforeRouteEnter 调用之后调用")]),t._v(" "),s("li",[t._v("router.afterEach 全局后置钩子 进入路由之后")])]),t._v(" "),s("p",[t._v("具体使用∶")]),t._v(" "),s("ul",[s("li",[t._v("beforeEach（判断是否登录了，没登录就跳转到登录页）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71c9b894026e42ef806ba50492c7eb49~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"112.png"}})]),t._v(" "),s("ul",[s("li",[t._v("afterEach （跳转之后滚动条回到顶部）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e923f83b50294e8782fd7c2513fbc27d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"113.png"}})]),t._v(" "),s("p",[s("strong",[t._v("2. 单个路由独享钩子")])]),t._v(" "),s("p",[s("strong",[t._v("beforeEnter")]),t._v(" 如果不想全局配置守卫的话，可以为某些路由单独配置守卫，有三个参数∶ to、from、next")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bc782aef20148688e75213be98b95e7~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"114.png"}})]),t._v(" "),s("p",[s("strong",[t._v("3. 组件内钩子")])]),t._v(" "),s("p",[t._v("beforeRouteUpdate、beforeRouteEnter、beforeRouteLeave")]),t._v(" "),s("p",[t._v("这三个钩子都有三个参数∶to、from、next")]),t._v(" "),s("ul",[s("li",[t._v("beforeRouteEnter∶ 进入组件前触发")]),t._v(" "),s("li",[t._v("beforeRouteUpdate∶ 当前地址改变并且改组件被复用时触发，举例来说，带有动态参数的路径foo/∶id，在 /foo/1 和 /foo/2 之间跳转的时候，由于会渲染同样的foa组件，这个钩子在这种情况下就会被调用")]),t._v(" "),s("li",[t._v("beforeRouteLeave∶ 离开组件被调用")])]),t._v(" "),s("p",[t._v("注意点，beforeRouteEnter组件内还访问不到this，因为该守卫执行前组件实例还没有被创建，需要传一个回调给 next来访问，例如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b6b67980c2d483691547cb83f90f6f4~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"115.png"}})]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"vue路由钩子在生命周期函数的体现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue路由钩子在生命周期函数的体现"}},[t._v("#")]),t._v(" Vue路由钩子在生命周期函数的体现")])])]),t._v(" "),s("p",[s("strong",[t._v("1. 完整的路由导航解析流程（不包括其他生命周期）")])]),t._v(" "),s("ul",[s("li",[t._v("触发进入其他路由。")]),t._v(" "),s("li",[t._v("调用要离开路由的组件守卫beforeRouteLeave")]),t._v(" "),s("li",[t._v("调用局前置守卫∶ beforeEach")]),t._v(" "),s("li",[t._v("在重用的组件里调用 beforeRouteUpdate")]),t._v(" "),s("li",[t._v("调用路由独享守卫 beforeEnter。")]),t._v(" "),s("li",[t._v("解析异步路由组件。")]),t._v(" "),s("li",[t._v("在将要进入的路由组件中调用 beforeRouteEnter")]),t._v(" "),s("li",[t._v("调用全局解析守卫 beforeResolve")]),t._v(" "),s("li",[t._v("导航被确认。")]),t._v(" "),s("li",[t._v("调用全局后置钩子的 afterEach 钩子。")]),t._v(" "),s("li",[t._v("触发DOM更新（mounted）。")]),t._v(" "),s("li",[t._v("执行beforeRouteEnter 守卫中传给 next 的回调函数")])]),t._v(" "),s("p",[s("strong",[t._v("2. 触发钩子的完整顺序")])]),t._v(" "),s("p",[t._v("路由导航、keep-alive、和组件生命周期钩子结合起来的，触发顺序，假设是从a组件离开，第一次进入b组件∶")]),t._v(" "),s("ul",[s("li",[t._v("beforeRouteLeave：路由组件的组件离开路由前钩子，可取消路由离开。")]),t._v(" "),s("li",[t._v("beforeEach：路由全局前置守卫，可用于登录验证、全局路由loading等。")]),t._v(" "),s("li",[t._v("beforeEnter：路由独享守卫")]),t._v(" "),s("li",[t._v("beforeRouteEnter：路由组件的组件进入路由前钩子。")]),t._v(" "),s("li",[t._v("beforeResolve：路由全局解析守卫")]),t._v(" "),s("li",[t._v("afterEach：路由全局后置钩子")]),t._v(" "),s("li",[t._v("beforeCreate：组件生命周期，不能访问this。")]),t._v(" "),s("li",[t._v("created;组件生命周期，可以访问this，不能访问dom。")]),t._v(" "),s("li",[t._v("beforeMount：组件生命周期")]),t._v(" "),s("li",[t._v("deactivated：离开缓存组件a，或者触发a的beforeDestroy和destroyed组件销毁钩子。")]),t._v(" "),s("li",[t._v("mounted：访问/操作dom。")]),t._v(" "),s("li",[t._v("activated：进入缓存组件，进入a的嵌套子组件（如果有的话）。")]),t._v(" "),s("li",[t._v("执行beforeRouteEnter回调函数next。")])]),t._v(" "),s("p",[s("strong",[t._v("3. 导航行为被触发到导航完成的整个过程")])]),t._v(" "),s("ul",[s("li",[t._v("导航行为被触发，此时导航未被确认。")]),t._v(" "),s("li",[t._v("在失活的组件里调用离开守卫 beforeRouteLeave。")]),t._v(" "),s("li",[t._v("调用全局的 beforeEach守卫。")]),t._v(" "),s("li",[t._v("在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。")]),t._v(" "),s("li",[t._v("在路由配置里调用 beforeEnteY。")]),t._v(" "),s("li",[t._v("解析异步路由组件（如果有）。")]),t._v(" "),s("li",[t._v("在被激活的组件里调用 beforeRouteEnter。")]),t._v(" "),s("li",[t._v("调用全局的 beforeResolve 守卫（2.5+），标示解析阶段完成。")]),t._v(" "),s("li",[t._v("导航被确认。")]),t._v(" "),s("li",[t._v("调用全局的 afterEach 钩子。")]),t._v(" "),s("li",[t._v("非重用组件，开始组件实例的生命周期：beforeCreate&created、beforeMount&mounted")]),t._v(" "),s("li",[t._v("触发 DOM 更新。")]),t._v(" "),s("li",[t._v("用创建好的实例调用 beforeRouteEnter守卫中传给 next 的回调函数。")]),t._v(" "),s("li",[t._v("导航完成")])]),t._v(" "),s("h2",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),s("h2",{attrs:{id:"_1-什么vuex-谈谈你对它的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么vuex-谈谈你对它的理解"}},[t._v("#")]),t._v(" 1. 什么Vuex ,谈谈你对它的理解？")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("首先vuex的出现是为了解决web组件化开发的过程中，各组件之间传值的复杂和混乱的问题")]),t._v(" "),s("li",[t._v("将我们在多个组件中需要共享的数据放到state中，")]),t._v(" "),s("li",[t._v("要获取或格式化数据需要使用getters，")]),t._v(" "),s("li",[t._v("改变state中的数据，可以使用mutation，但是只能包含同步的操作，在具体组件里面调用的方式"),s("code",[t._v("this.$store.commit('xxxx')")])]),t._v(" "),s("li",[t._v("Action也是改变state中的数据，不过是提交的mutation，并且可以包含异步操作，在组件中的调用方式"),s("code",[t._v("this.$store.dispatch('xxx')")]),t._v("； 在actions里面使用的commit('调用mutation')")])]),t._v(" "),s("p",[s("strong",[t._v("Vuex")]),t._v(" 是一个专为 Vue.js应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。")]),t._v(" "),s("h2",{attrs:{id:"_2-vuex各模块在核心流程中的主要功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vuex各模块在核心流程中的主要功能"}},[t._v("#")]),t._v(" 2. Vuex"),s("strong",[t._v("各模块在核心流程中的主要功能：")])]),t._v(" "),s("p",[s("code",[t._v("Vue Components")]),t._v("∶ Vue组件。HTML页面上，负责接收用户操作等交互行为，执行dispatch方法触发对应action进行回应。")]),t._v(" "),s("p",[s("code",[t._v("dispatch")]),t._v("∶操作行为触发方法，是唯一能执行action的方法。")]),t._v(" "),s("p",[s("code",[t._v("actions")]),t._v("∶ 操作行为处理模块。负责处理Vue Components接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台API请求的操作就在这个模块中进行，包括触发其他action以及提交mutation的操作。该模块提供了Promise的封装，以支持action的链式触发。")]),t._v(" "),s("p",[s("code",[t._v("commit")]),t._v("∶状态改变提交操作方法。对mutation进行提交，是唯一能执行mutation的方法。")]),t._v(" "),s("p",[s("code",[t._v("mutations")]),t._v("∶状态改变操作方法。是Vuex修改state的唯一推荐方法，其他修改方式在严格模式下将会报错。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些hook暴露出来，以进行state的监控等。")]),t._v(" "),s("p",[s("code",[t._v("state")]),t._v("∶ 页面状态管理容器对象。集中存储Vuecomponents中data对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用Vue的细粒度数据响应机制来进行高效的状态更新。")]),t._v(" "),s("p",[s("code",[t._v("getters")]),t._v("∶ state对象读取方法。图中没有单独列出该模块，应该被包含在了render中，Vue Components通过该方法读取全局state对象。")]),t._v(" "),s("h2",{attrs:{id:"_2-1-简述vuex的数据传输流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-简述vuex的数据传输流程"}},[t._v("#")]),t._v(" 2.1 简述Vuex的数据传输流程")]),t._v(" "),s("p",[t._v("当组件进行数据修改的时候我们需要调"),s("strong",[t._v("用dispatch来触发actions里面的方法")]),t._v("。actions里面的每个方法中都会有一个commit方法，当方法执行的时候会通过"),s("strong",[t._v("commit来触发mutations里面的方法进行数据的修改")]),t._v("。mutations里面的每个函数都会有一个state参数，这样就可以在"),s("strong",[t._v("mutations里面进行state的数据修改")]),t._v("，当数据修改完毕后，会传导给页面。页面的数据也会发生改变")]),t._v(" "),s("h2",{attrs:{id:"_3-vuex中有几个核心属性-分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-vuex中有几个核心属性-分别是什么"}},[t._v("#")]),t._v(" 3. vuex中有几个核心属性，分别是什么？")]),t._v(" "),s("p",[t._v("一共有5个核心属性，分别是:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("state")]),t._v("唯一数据源,Vue 实例中的 data 遵循相同的规则")]),t._v(" "),s("li",[s("code",[t._v("mutation")]),t._v("更改 Vuex 的 store 中的状态的唯一方法是提交 mutation,非常类似于事件,通过store.commit 方法触发")]),t._v(" "),s("li",[s("code",[t._v("action")]),t._v("action 类似于 mutation，不同在于action 提交的是 mutation，而不是直接变更状态，action 可以包含任意异步操作")]),t._v(" "),s("li",[s("code",[t._v("module")]),t._v(" 由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。")])]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("const moduleA =")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("state: () => (")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("),\n  mutations:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(",\n  actions:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(",\n  getters:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("​\nconst moduleB =")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("state: () => (")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("),\n  mutations:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(",\n  actions:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("​\nconst store = new Vuex.Store(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("modules:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" moduleA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" moduleB\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​\nstore.state.a // -> moduleA 的状态\nstore.state.b // -> moduleB 的状态\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("getters")]),t._v(" 可以认为是 store 的计算属性,就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。Getter 会暴露为 store.getters 对象，你可以以属性的形式访问这些值.")])]),t._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Store")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    todos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token argument-name"}},[t._v("getters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    doneTodos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("todos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("todo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" todo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​\nstore"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("getters"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("doneTodos "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> [{ id: 1, text: '...', done: true }]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"_4-vuex中action和mutation的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-vuex中action和mutation的区别"}},[t._v("#")]),t._v(" 4. Vuex中action和mutation的区别")]),t._v(" "),s("p",[s("code",[t._v("mutation")]),t._v("中的操作是一系列的同步函数，用于修改state中的变量的的状态。当使用vuex时需要通过commit来提交需要操作的内容。mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是实际进行状态更改的地方，并且它会接受 state 作为第一个参数：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9dd15a982994d2592ddd126acccebff~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"221.png"}})]),t._v(" "),s("p",[t._v("当触发一个类型为 increment 的 mutation 时，需要调用此函数：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03c650fd2cf646a2b38035694aed0cd6~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"222.png"}})]),t._v(" "),s("p",[t._v("而"),s("code",[t._v("action")]),t._v("类似于mutation，不同点在于：")]),t._v(" "),s("ul",[s("li",[t._v("action 可以包含任意异步操作。")]),t._v(" "),s("li",[t._v("action 提交的是 mutation，而不是直接变更状态。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54727d1d6a70479abec170367d52e8bc~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"223.png"}})]),t._v(" "),s("p",[s("code",[t._v("action")]),t._v("函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation，或者通过 context.state 和 context.getters 来获取 state 和 getters。 所以，两者的不同点如下：")]),t._v(" "),s("ul",[s("li",[t._v("mutation专注于修改State，理论上是修改State的唯一途径；action 用来处理业务代码、异步请求。")]),t._v(" "),s("li",[t._v("mutation：必须同步执行；action ：可以异步，但不能直接操作State。")]),t._v(" "),s("li",[t._v("在视图更新时，先触发actions，actions再触发mutation")]),t._v(" "),s("li",[t._v("mutation的参数是state，它包含store中的数据；store的参数是context，它是 state 的父级，包含 state、getters")])]),t._v(" "),s("h2",{attrs:{id:"_5-vuex的getter的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vuex的getter的作用"}},[t._v("#")]),t._v(" 5. vuex的getter的作用")]),t._v(" "),s("p",[s("code",[t._v("getter")]),t._v("有点类似 Vue.js 的"),s("strong",[t._v("计算属性")]),t._v("，当我们需要从 store 的 state 中派生出一些状态，那么我们就需要使用 getter，getter 会接收 state 作为第 一个参数，而且 getter 的返回值会根据它的依赖被缓存起来，只有 getter 中的依赖值（state 中的某个需要派生状态的值）发生改变的时候才会被重新计算。")]),t._v(" "),s("h2",{attrs:{id:"_6-vuex-和-localstorage-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vuex-和-localstorage-的区别"}},[t._v("#")]),t._v(" 6. Vuex 和 localStorage 的区别")]),t._v(" "),s("p",[s("strong",[t._v("（1）")]),t._v(" "),s("strong",[t._v("最重要的区别")])]),t._v(" "),s("ul",[s("li",[t._v("vuex存储在"),s("strong",[t._v("内存")]),t._v("中")]),t._v(" "),s("li",[t._v("localstorage 则以"),s("strong",[t._v("文件")]),t._v("的方式存储在"),s("strong",[t._v("本地")]),t._v("，只能存储字符串类型的数据，存储对象需要 JSON的stringify和parse方法进行处理。 读取内存比读取硬盘速度要快")])]),t._v(" "),s("p",[s("strong",[t._v("（2）应用场景")])]),t._v(" "),s("ul",[s("li",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。vuex用于组件之间的传值。")]),t._v(" "),s("li",[t._v("localstorage是本地存储，是将数据存储到浏览器的方法，一般是在跨页面传递数据时使用 。")]),t._v(" "),s("li",[t._v("Vuex能做到数据的响应式，localstorage不能")])]),t._v(" "),s("p",[s("strong",[t._v("（3）永久性")])]),t._v(" "),s("p",[s("strong",[t._v("刷新页面时vuex存储的值会丢失，localstorage不会。")])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 对于不变的数据确实可以用localstorage可以代替vuex，但是当两个组件共用一个数据源（对象或数组）时，如果其中一个组件改变了该数据源，希望另一个组件响应该变化时，localstorage无法做到，原因就是上面的最重要的区别。")]),t._v(" "),s("h2",{attrs:{id:"_7-vuex页面刷新时丢失怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-vuex页面刷新时丢失怎么处理"}},[t._v("#")]),t._v(" 7. Vuex页面刷新时丢失怎么处理")]),t._v(" "),s("p",[t._v("用sessionstorage 或者 localstorage 存储数据")]),t._v(" "),s("p",[t._v("存储： sessionStorage.setItem( '名', JSON.stringify(值) ) 使用： sessionStorage.getItem('名') ---得到的值为字符串类型，用JSON.parse()去引号；")]),t._v(" "),s("h2",{attrs:{id:"_8-vuex和单纯的全局对象有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-vuex和单纯的全局对象有什么区别"}},[t._v("#")]),t._v(" 8. Vuex和单纯的全局对象有什么区别？")]),t._v(" "),s("ul",[s("li",[t._v("Vuex 的状态存储是"),s("strong",[t._v("响应式")]),t._v("的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),s("li",[t._v("不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。这样可以方便地跟踪每一个状态的变化，从而能够实现一些工具帮助更好地了解我们的应用。")])]),t._v(" "),s("h2",{attrs:{id:"_9-redux-react的-和-vuex-有什么区别-它们的共同思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-redux-react的-和-vuex-有什么区别-它们的共同思想"}},[t._v("#")]),t._v(" 9. Redux(react的) 和 Vuex 有什么区别，它们的共同思想")]),t._v(" "),s("p",[s("strong",[t._v("（1）Redux 和 Vuex区别")])]),t._v(" "),s("ul",[s("li",[t._v("Vuex改进了Redux中的Action和Reducer函数，以mutations变化函数取代Reducer，无需switch，只需在对应的mutation函数里改变state值即可")]),t._v(" "),s("li",[t._v("Vuex由于Vue自动重新渲染的特性，无需订阅重新渲染函数，只要生成新的State即可")]),t._v(" "),s("li",[t._v("Vuex数据流的顺序是∶View调用store.commit提交对应的请求到Store中对应的mutation函数->store改变（vue检测到数据变化自动渲染）")])]),t._v(" "),s("p",[t._v("通俗点理解就是，vuex 弱化 dispatch，通过commit进行 store状态的一次更变;取消了action概念，不必传入特定的 action形式进行指定变更;弱化reducer，基于commit参数直接对数据进行转变，使得框架更加简易;")]),t._v(" "),s("p",[s("strong",[t._v("（2）共同思想")])]),t._v(" "),s("ul",[s("li",[t._v("单—的数据源")]),t._v(" "),s("li",[t._v("变化可以预测")])]),t._v(" "),s("p",[t._v("本质上：redux与vuex都是对mvvm思想的服务，将数据从视图中抽离的一种方案; 形式上：vuex借鉴了redux，将store作为全局的数据中心，进行mode管理;")]),t._v(" "),s("h2",{attrs:{id:"_10-为什么要用-vuex-或者-redux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-为什么要用-vuex-或者-redux"}},[t._v("#")]),t._v(" 10. 为什么要用 Vuex 或者 Redux")]),t._v(" "),s("p",[t._v("由于传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致代码无法维护。")]),t._v(" "),s("p",[t._v("所以需要把组件的"),s("strong",[t._v("共享")]),t._v('状态抽取出来，以一个全局单例模式管理。在这种模式下，组件树构成了一个巨大的"视图"，不管在树的哪个位置，任何组件都能获取状态或者触发行为。')]),t._v(" "),s("p",[t._v("另外，通过定义和隔离状态管理中的各种概念并强制遵守一定的规则，代码将会变得更结构化且易维护。")]),t._v(" "),s("h2",{attrs:{id:"_11-为什么-vuex-的-mutation-中不能做异步操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-为什么-vuex-的-mutation-中不能做异步操作"}},[t._v("#")]),t._v(" 11. 为什么 Vuex 的 mutation 中不能做异步操作？")]),t._v(" "),s("ul",[s("li",[t._v("Vuex中所有的状态更新的唯一途径都是mutation，异步操作通过 Action 来提交 mutation实现，这样可以方便地跟踪每一个状态的变化，从而能够实现一些工具帮助更好地了解我们的应用。")]),t._v(" "),s("li",[t._v("每个mutation执行完成后都会对应到一个新的状态变更，这样devtools就可以打个快照存下来，然后就可以实现 time-travel 了。如果mutation支持异步操作，就没有办法知道状态是何时更新的，无法很好的进行状态的追踪，给调试带来困难。")])]),t._v(" "),s("h2",{attrs:{id:"_12-vuex的严格模式是什么-有什么作用-如何开启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-vuex的严格模式是什么-有什么作用-如何开启"}},[t._v("#")]),t._v(" 12. Vuex的严格模式是什么,有什么作用，如何开启？")]),t._v(" "),s("p",[t._v("在严格模式下，无论何时发生了状态变更且不是由mutation函数引起的，将会抛出错误。这能保证所有的状态变更都能被调试工具跟踪到。")]),t._v(" "),s("p",[t._v("在Vuex.Store 构造器选项中开启,如下")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49de6f4128c6475aa2d9d596b5378c08~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"224.png"}})]),t._v(" "),s("h2",{attrs:{id:"_13-如何在组件中批量使用vuex的getter属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-如何在组件中批量使用vuex的getter属性"}},[t._v("#")]),t._v(" 13. 如何在组件中批量使用Vuex的getter属性")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("mapGetters")]),t._v("辅助函数, 利用对象展开运算符将getter混入computed 对象中")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8ab1d1eb07b74f2ab5ce4eba357bfc4d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"225.png"}})]),t._v(" "),s("h2",{attrs:{id:"_14-如何在组件中重复使用vuex的mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-如何在组件中重复使用vuex的mutation"}},[t._v("#")]),t._v(" 14. 如何在组件中重复使用Vuex的mutation")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("mapMutations")]),t._v("辅助函数,在组件中这么使用")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/96b565782e5648f58c65a7c97e678438~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"226.png"}})]),t._v(" "),s("p",[t._v("然后调用"),s("code",[t._v("this.setNumber(10)")]),t._v("相当调用"),s("code",[t._v("this.$store.commit('SET_NUMBER',10)")])]),t._v(" "),s("h2",{attrs:{id:"_15-vuex的辅助函数怎么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-vuex的辅助函数怎么用"}},[t._v("#")]),t._v(" 15. Vuex的辅助函数怎么用")]),t._v(" "),s("p",[t._v("比如当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。为了解决这个问题，我们可以使用 "),s("code",[t._v("mapState")]),t._v("辅助函数帮助我们生成计算属性，让你少按几次键。")]),t._v(" "),s("h3",{attrs:{id:"mapstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapstate"}},[t._v("#")]),t._v(" mapState")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 箭头函数可使代码更简练")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传字符串参数 'count' 等同于 `state => state.count`")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("countAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n \n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为了能够使用 `this` 获取局部状态，必须使用常规函数")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countPlusLocalState")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localCount\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("定义的属性名与state中的名称相同时，可以传入一个数组")]),t._v(" "),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义state")]),t._v("\nconst state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在组件中使用辅助函数")]),t._v("\ncomputed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"mapgetters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapgetters"}},[t._v("#")]),t._v(" mapGetters")]),t._v(" "),s("div",{staticClass:"language-perl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-perl"}},[s("code",[t._v("computed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("mapGetters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 把 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.doneCount`")]),t._v(" 映射为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.$store.getters.doneTodosCount`")]),t._v("\n      doneCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doneTodosCount'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("当属性名与getters中定义的相同时，可以传入一个数组")]),t._v(" "),s("p",[t._v("总结：")]),t._v(" "),s("ul",[s("li",[t._v("mapState与mapGetters都用computed来进行映射")]),t._v(" "),s("li",[t._v("在组件中映射完成后，通过this.映射属性名进行使用")])]),t._v(" "),s("h3",{attrs:{id:"mapmutations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapmutations"}},[t._v("#")]),t._v(" mapMutations")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("methods:")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("...mapMutations(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),t._v(" // 将 `this."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("` 映射为 `this.$store."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("`\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("当属性名与mapMutatios中定义的相同时，可以传入一个数组")]),t._v(" "),s("div",{staticClass:"language-perl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-perl"}},[s("code",[t._v("methods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("mapMutations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 将 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.increment()`")]),t._v(" 映射为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.$store.commit('increment')`")]),t._v("\n \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`mapMutations`")]),t._v(" 也支持载荷：\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incrementBy'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 将 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.incrementBy(amount)`")]),t._v(" 映射为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.$store.commit('incrementBy', amount)`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"mapactions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapactions"}},[t._v("#")]),t._v(" mapActions")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("mathods:")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("...mapActions(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),t._v(" // 将 `this."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("` 映射为 `this.$store."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("`\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("当属性名与mapActios中定义的相同时，可以传入一个数组")]),t._v(" "),s("div",{staticClass:"language-perl line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-perl"}},[s("code",[t._v("methods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("mapActions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 将 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.increment()`")]),t._v(" 映射为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.$store.dispatch('increment')`")]),t._v("\t\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`mapActions`")]),t._v(" 也支持载荷：\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incrementBy'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 将 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.incrementBy(amount)`")]),t._v(" 映射为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`this.$store.dispatch('incrementBy', amount)`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("总结")]),t._v(" "),s("ul",[s("li",[t._v("mapMutations与mapActios都在methods中进行映射")]),t._v(" "),s("li",[t._v("映射之后变成一个方法")])]),t._v(" "),s("h2",{attrs:{id:"vue面试题补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue面试题补充"}},[t._v("#")]),t._v(" Vue面试题补充")]),t._v(" "),s("h2",{attrs:{id:"_1-怎样理解-vue-的单向数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-怎样理解-vue-的单向数据流"}},[t._v("#")]),t._v(" 1.怎样理解 Vue 的单向数据流？")]),t._v(" "),s("p",[t._v("所有的 prop 都使得其父子 prop 之间形成了一个"),s("strong",[t._v("单向下行绑定")]),t._v("：父级 prop 的更新会向下流动到子组件中，但是反过来则不行。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。")]),t._v(" "),s("p",[t._v("额外的，每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值。这意味着你不应该在一个子组件内部改变 prop。如果你这样做了，Vue 会在浏览器的控制台中发出警告。子组件想修改时，只能通过 $emit 派发一个自定义事件，父组件接收到后，由父组件修改。")]),t._v(" "),s("p",[t._v("有两种常见的试图改变一个 prop 的情形 :")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("这个 prop 用来传递一个初始值；这个子组件接下来希望将其作为一个本地的 prop 数据来使用。")]),t._v(" 在这种情况下，最好定义一个本地的 data 属性并将这个 prop 用作其初始值：")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("'initialCounter'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initialCounter\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("这个 prop 以一种原始的值传入且需要进行转换。")]),t._v(" 在这种情况下，最好使用这个 prop 的值来定义一个计算属性")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'size'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("normalizedSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"_2-在什么阶段才能访问操作dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-在什么阶段才能访问操作dom"}},[t._v("#")]),t._v(" 2.在什么阶段才能访问操作DOM？")]),t._v(" "),s("p",[t._v("在钩子函数 mounted 被调用前，Vue 已经将编译好的模板挂载到页面上，所以在 mounted 中可以访问操作 DOM。")]),t._v(" "),s("h2",{attrs:{id:"_3-父组件可以监听到子组件的生命周期吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-父组件可以监听到子组件的生命周期吗"}},[t._v("#")]),t._v(" 3. 父组件可以监听到子组件的生命周期吗？")]),t._v(" "),s("p",[t._v("比如有父组件 Parent 和子组件 Child，如果父组件监听到子组件挂载 mounted 就做一些逻辑处理，可以通过以下写法实现：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Parent.vue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Child "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Child.vue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mounted"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("以上需要手动通过 $emit 触发父组件的事件，更简单的方式可以在父组件引用子组件时通过 @hook 来监听即可，如下所示：")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Parent.vue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Child "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hook")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("mounted"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Child"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父组件监听到 mounted 钩子函数 ...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Child.vue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子组件触发 mounted 钩子函数 ...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上输出顺序为：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件触发 mounted 钩子函数 ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件监听到 mounted 钩子函数 ...     ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("当然 @hook 方法不仅仅是可以监听 mounted，其它的生命周期事件，例如：created，updated 等都可以监听。")]),t._v(" "),s("h2",{attrs:{id:"_4-vue-怎么用-vm-set-解决对象新增属性不能响应的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-怎么用-vm-set-解决对象新增属性不能响应的问题"}},[t._v("#")]),t._v(" 4.Vue 怎么用 vm.$set() 解决对象新增属性不能响应的问题 ？")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("export function "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" | Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target 为数组  ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidArrayIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改数组的长度, 避免索引>数组长度导致splcie()执行有误")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用数组的splice变异方法触发响应式  ")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key 已经存在，直接修改属性值  ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target 本身就不是响应式数据, 直接赋值")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对属性进行响应式处理")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])]),s("p",[t._v("我们阅读以上源码可知，vm.$set 的实现原理是：")]),t._v(" "),s("ul",[s("li",[t._v("如果目标是数组，直接使用数组的 splice 方法触发相应式；")]),t._v(" "),s("li",[t._v("如果目标是对象，会先判读属性是否存在、对象是否是响应式，最终如果要对属性进行响应式处理，则是通过调用 defineReactive 方法进行响应式处理（ defineReactive 方法就是 Vue 在初始化对象时，给对象属性采用 Object.defineProperty 动态添加 getter 和 setter 的功能所调用的方法）")])]),t._v(" "),s("h2",{attrs:{id:"_5-请说下封装-vue-组件的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-请说下封装-vue-组件的过程"}},[t._v("#")]),t._v(" 5. 请说下封装 vue 组件的过程")]),t._v(" "),s("blockquote",[s("p",[t._v("有复用的地方就有封装")]),t._v(" "),s("p",[t._v("（js如此，vue也是如此）")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1.先分析需求：确定业务需求，把页面中可以复用的结构，样式以及功能")]),t._v(" "),s("ul",[s("li",[t._v("找出业务需求中存在复用的地方")])])]),t._v(" "),s("li",[s("p",[t._v("2.具体步骤：Vue.component 或者在new Vue配置项components中, 定义组件名, 可以在props中接受给组件传的参数和值，子组件修改好数据后，想把数据传递给父组件。可以采用$emit方法")])])]),t._v(" "),s("h2",{attrs:{id:"_6-讲一下组件的命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-讲一下组件的命名规范"}},[t._v("#")]),t._v(" 6. 讲一下组件的命名规范")]),t._v(" "),s("ul",[s("li",[t._v('给组件命名有两种方式(在Vue.Component/components时)，一种是使用链式命名"my-component"，一种是使用大驼峰命名"MyComponent"，')]),t._v(" "),s("li",[t._v("因为要遵循W3C规范中的自定义组件名 (字母全小写且必须包含一个连字符)，避免和当前以及未来的 HTML 元素相冲突")])]),t._v(" "),s("h2",{attrs:{id:"_7-scoped作用与原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-scoped作用与原理"}},[t._v("#")]),t._v(" 7.scoped作用与原理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用：组件css作用域，避免"),s("code",[t._v("子组件")]),t._v("内部的css样式被"),s("code",[t._v("父组件")]),t._v("覆盖")]),t._v(" "),s("ul",[s("li",[t._v("默认情况下，如果子组件和父组件css选择器权重相同，优先加载父组件css样式")])])]),t._v(" "),s("li",[s("p",[t._v("原理：给元素添加一个自定义属性 v-data-xxxxx")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("一针见血答案")]),t._v("： 通过属性选择题来提高css权重值")])])])]),t._v(" "),s("h2",{attrs:{id:"_8-第一次加载页面会触发哪几个钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-第一次加载页面会触发哪几个钩子函数"}},[t._v("#")]),t._v(" 8. 第一次加载页面会触发哪几个钩子函数？")]),t._v(" "),s("p",[t._v("四个钩子")]),t._v(" "),s("ul",[s("li",[t._v("beforeCreate,")]),t._v(" "),s("li",[t._v("created,")]),t._v(" "),s("li",[t._v("beforeMount,")]),t._v(" "),s("li",[t._v("mounted 这几个钩子函数")])]),t._v(" "),s("h2",{attrs:{id:"_9-vue中如何扩展一个组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-vue中如何扩展一个组件"}},[t._v("#")]),t._v(" 9. Vue中如何扩展一个组件")]),t._v(" "),s("ol",[s("li",[t._v("常见的组件扩展方法有：mixins，slots，extends等")]),t._v(" "),s("li",[t._v("混入mixins是分发 Vue 组件中可复用功能的非常灵活的方式。混入对象可以包含任意组件选项。当组件使用混入对象时，所有混入对象的选项将被混入该组件本身的选项。")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复用代码：它是一个配置对象，选项和组件里面一样")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mymixin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   methods"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dosomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局混入：将混入对象传入")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mymixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部混入：做数组项设置到mixins选项，仅作用于当前组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Comp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   mixins"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mymixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("插槽主要用于vue组件中的内容分发，也可以用于组件扩展。如果要精确分发到不同位置可以使用具名插槽，如果要使用子组件中的数据可以使用作用域插槽。")]),t._v(" "),s("li",[t._v("组件选项中还有一个不太常用的选项extends，也可以起到扩展组件的目的")]),t._v(" "),s("li",[t._v("混入的数据和方法"),s("strong",[t._v("不能明确判断来源")]),t._v("且可能和当前组件内变量"),s("strong",[t._v("产生命名冲突")]),t._v("，vue3中引入的composition api，可以很好解决这些问题，利用独立出来的响应式模块可以很方便的编写独立逻辑并提供响应式的数据，然后在setup选项中组合使用，增强代码的可读性和维护性")])]),t._v(" "),s("h2",{attrs:{id:"_10-如果让你从零开始写一个vue路由-说说你的思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-如果让你从零开始写一个vue路由-说说你的思路"}},[t._v("#")]),t._v(" 10. 如果让你从零开始写一个vue路由，说说你的思路")]),t._v(" "),s("p",[t._v("一个SPA应用的路由需要解决的问题是"),s("strong",[t._v("页面跳转内容改变同时不刷新")]),t._v("，同时路由还需要以插件形式存在，所以：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先我会定义一个"),s("code",[t._v("createRouter")]),t._v("函数，返回路由器实例，实例内部做几件事：")]),t._v(" "),s("ul",[s("li",[t._v("保存用户传入的配置项")]),t._v(" "),s("li",[t._v("监听hash或者popstate事件")]),t._v(" "),s("li",[t._v("回调里根据path匹配对应路由")])])]),t._v(" "),s("li",[s("p",[t._v("将router定义成一个Vue插件，即实现install方法，内部做两件事：")]),t._v(" "),s("ul",[s("li",[t._v("实现两个全局组件：router-link和router-view，分别实现页面跳转和内容显示")]),t._v(" "),s("li",[t._v("定义两个全局变量：route和route和router，组件内可以访问当前路由和路由器实例")])])])]),t._v(" "),s("h2",{attrs:{id:"_11-从0到1自己构架一个vue项目-说说有哪些步骤、哪些重要插件、目录结构你会怎么组织"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-从0到1自己构架一个vue项目-说说有哪些步骤、哪些重要插件、目录结构你会怎么组织"}},[t._v("#")]),t._v(" 11. 从0到1自己构架一个vue项目，说说有哪些步骤、哪些重要插件、目录结构你会怎么组织")]),t._v(" "),s("ol",[s("li",[t._v("从0创建一个项目我大致会做以下事情：项目构建、引入必要插件、代码规范、提交规范、常用库和组件")]),t._v(" "),s("li",[t._v("目前vue3项目我会用vite或者create-vue创建项目")]),t._v(" "),s("li",[t._v("接下来引入必要插件：路由插件vue-router、状态管理vuex/pinia、ui库我比较喜欢element-plus和antd-vue、http工具我会选axios")]),t._v(" "),s("li",[t._v("其他比较常用的库有vueuse，nprogress，图标可以使用vite-svg-loader")]),t._v(" "),s("li",[t._v("下面是代码规范：结合prettier和eslint即可")]),t._v(" "),s("li",[t._v("最后是提交规范，可以使用husky，lint-staged，commitlint")])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[s("p",[t._v("目录结构我有如下习惯： "),s("code",[t._v(".vscode")]),t._v("：用来放项目中的 vscode 配置")]),t._v(" "),s("p",[s("code",[t._v("plugins")]),t._v("：用来放 vite 插件的 plugin 配置")]),t._v(" "),s("p",[s("code",[t._v("public")]),t._v("：用来放一些诸如 页头icon 之类的公共文件，会被打包到dist根目录下")]),t._v(" "),s("p",[s("code",[t._v("src")]),t._v("：用来放项目代码文件")]),t._v(" "),s("p",[s("code",[t._v("api")]),t._v("：用来放http的一些接口配置")]),t._v(" "),s("p",[s("code",[t._v("assets")]),t._v("：用来放一些 CSS 之类的静态资源")]),t._v(" "),s("p",[s("code",[t._v("components")]),t._v("：用来放项目通用组件")]),t._v(" "),s("p",[s("code",[t._v("layout")]),t._v("：用来放项目的布局")]),t._v(" "),s("p",[s("code",[t._v("router")]),t._v("：用来放项目的路由配置")]),t._v(" "),s("p",[s("code",[t._v("store")]),t._v("：用来放状态管理Pinia的配置")]),t._v(" "),s("p",[s("code",[t._v("utils")]),t._v("：用来放项目中的工具方法类")]),t._v(" "),s("p",[s("code",[t._v("views")]),t._v("：用来放项目的页面文件")])])]),t._v(" "),s("h2",{attrs:{id:"_12-实际工作中-你总结的vue最佳实践有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-实际工作中-你总结的vue最佳实践有哪些"}},[t._v("#")]),t._v(" 12. 实际工作中，你总结的vue最佳实践有哪些？")]),t._v(" "),s("h3",{attrs:{id:"编码风格方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码风格方面"}},[t._v("#")]),t._v(" 编码风格方面：")]),t._v(" "),s("ul",[s("li",[t._v("命名组件时使用“多词”风格避免和HTML元素冲突")]),t._v(" "),s("li",[t._v("使用“细节化”方式定义属性而不是只有一个属性名")]),t._v(" "),s("li",[t._v("属性名声明时使用“驼峰命名”，模板或jsx中使用“肉串命名”")]),t._v(" "),s("li",[t._v("使用v-for时务必加上key，且不要跟v-if写在一起")])]),t._v(" "),s("h3",{attrs:{id:"性能方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能方面"}},[t._v("#")]),t._v(" 性能方面：")]),t._v(" "),s("ul",[s("li",[t._v("路由懒加载减少应用尺寸")]),t._v(" "),s("li",[t._v("利用SSR减少首屏加载时间")]),t._v(" "),s("li",[t._v("利用v-once渲染那些不需要更新的内容")]),t._v(" "),s("li",[t._v("一些长列表可以利用虚拟滚动技术避免内存过度占用")]),t._v(" "),s("li",[t._v("对于深层嵌套对象的大数组可以使用shallowRef或shallowReactive降低开销")]),t._v(" "),s("li",[t._v("避免不必要的组件抽象")])]),t._v(" "),s("h3",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全：")]),t._v(" "),s("ul",[s("li",[t._v("不使用不可信模板，例如使用用户输入拼接模板："),s("code",[t._v("template: <div> + userProvidedString + </div>")])]),t._v(" "),s("li",[t._v("小心使用v-html，:url，:style等，避免html、url、样式等注入")])]),t._v(" "),s("h2",{attrs:{id:"_13-说说从-template-到-render-处理过程-compiler的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-说说从-template-到-render-处理过程-compiler的工作原理"}},[t._v("#")]),t._v(" 13. 说说从 template 到 render 处理过程(compiler的工作原理)")]),t._v(" "),s("ol",[s("li",[t._v("Vue中有个独特的编译器模块，称为“compiler”，它的主要作用是将用户编写的template编译为js中可执行的render函数。")]),t._v(" "),s("li",[t._v("之所以需要这个编译过程是为了便于前端程序员能高效的编写视图模板。相比而言，我们还是更愿意用HTML来编写视图，直观且高效。手写render函数不仅效率底下，而且失去了编译期的优化能力。")]),t._v(" "),s("li",[t._v("在Vue中编译器会先对template进行解析，这一步称为parse，结束之后会得到一个JS对象，我们成为抽象语法树AST，然后是对AST进行深加工的转换过程，这一步成为transform，最后将前面得到的AST生成为JS代码，也就是render函数。")])]),t._v(" "),s("h2",{attrs:{id:"_14-vue实例挂载的过程中发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue实例挂载的过程中发生了什么"}},[t._v("#")]),t._v(" 14. Vue实例挂载的过程中发生了什么?")]),t._v(" "),s("ol",[s("li",[t._v("挂载过程指的是app.mount()过程，这个过程中整体上做了两件事："),s("strong",[t._v("初始化")]),t._v("和"),s("strong",[t._v("建立更新机制")])]),t._v(" "),s("li",[t._v("初始化会创建组件实例、初始化组件状态，创建各种响应式数据")]),t._v(" "),s("li",[t._v("建立更新机制这一步会立即执行一次组件更新函数，这会首次执行组件渲染函数并执行patch将前面获得vnode转换为dom；同时首次执行渲染函数会创建它内部响应式数据之间和组件更新函数之间的依赖关系，这使得以后数据变化时会执行对应的更新函数。")])]),t._v(" "),s("h2",{attrs:{id:"_15-组件中的name属性有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-组件中的name属性有什么用"}},[t._v("#")]),t._v(" 15. 组件中的name属性有什么用？")]),t._v(" "),s("ol",[s("li",[t._v("项目使用keep-alive时，可搭配组件name进行缓存过滤")]),t._v(" "),s("li",[t._v("DOM做递归组件时需要调用自身name")]),t._v(" "),s("li",[t._v("Vue-devtools调试工具里显示的组见名称是由Vue中组件name决定的")]),t._v(" "),s("li",[t._v("动态切换组件")])]),t._v(" "),s("h2",{attrs:{id:"_16-怎么在组件中监听路由参数的变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-怎么在组件中监听路由参数的变化"}},[t._v("#")]),t._v(" 16 . 怎么在组件中监听路由参数的变化？")]),t._v(" "),s("p",[t._v("有两种方法可以监听路由参数的变化，但是只能用在包含的组件内。")]),t._v(" "),s("p",[s("strong",[t._v("1. 侦听器")]),t._v(" watch:{'this.$route'，(to,from){ //在此处监听 }, },")]),t._v(" "),s("p",[s("strong",[t._v("2. 前置路由守卫")]),t._v(" beforeRouteUpdate(to,from,next){ //这里监听 },")]),t._v(" "),s("h2",{attrs:{id:"_17-beforedestroy钩子的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-beforedestroy钩子的作用"}},[t._v("#")]),t._v(" 17. beforeDestroy钩子的作用")]),t._v(" "),s("p",[t._v("如果页面上有很多定时器，可以在data选项中创建一个对象timer，给每个定时器取个名字一一映射在对象timer中，在beforeDestroy构造函数中循环遍历所有定时器 ，一次性取消")]),t._v(" "),s("div",{staticClass:"language-scss line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("let k in this.timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("如果页面只有单个定时器，可以这么做。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hook:beforeDestroy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_18-说说在vue中踩过的坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-说说在vue中踩过的坑"}},[t._v("#")]),t._v(" 18. 说说在vue中踩过的坑")]),t._v(" "),s("p",[s("strong",[t._v("1.")]),t._v(" 给对象添加属性或者数组通过下标修改值的时候，直接通过给data里面的对象添加属性然后赋值，新添加的属性不是响应式的。")]),t._v(" "),s("p",[s("strong",[t._v("原因：")]),t._v(" Object.definepropety方法拦截不到这些操作，")]),t._v(" "),s("p",[t._v("【解决办法】通过Vue.set(对象，属性，值)这种方式就可以达到，对象新添加的属性是响应式的。数组也可以用splice()方法修改值")]),t._v(" "),s("p",[s("strong",[t._v("2.")]),t._v(" 在created操作dom的时候，是报错的，获取不到dom，这个时候实例Vue实例没有挂载 【解决办法】通过：Vue.nextTick(回调函数进行获取) ， 或者在mounted钩子里获取dom")]),t._v(" "),s("p",[s("strong",[t._v("3.")]),t._v(" 父组件调用子组件的方法，发送请求，修改子组件数据 ，子组件的视图没有更新。")]),t._v(" "),s("p",[s("strong",[t._v("原因")]),t._v("：由于Vue的DOM操作是异步的，修改数据的时候子组件的DOM还没生成，this.$refs获取不到。")]),t._v(" "),s("p",[t._v("【解决办法】通过：Vue.nextTick() , 在nextTick里面去发送请求修改数据。")]),t._v(" "),s("h2",{attrs:{id:"_19-is这个特性你用过吗-是怎么用的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-is这个特性你用过吗-是怎么用的"}},[t._v("#")]),t._v(" 19. is这个特性你用过吗？是怎么用的？")]),t._v(" "),s("p",[s("strong",[t._v("is的作用")])]),t._v(" "),s("p",[s("strong",[t._v("解决html模板的限制")])]),t._v(" "),s("p",[t._v("比如ul里面嵌套li的写法是html语法的固定写法，如果想在ul里面嵌套自己的组件，但是html在渲染dom的时候，组件对ul来说并不是有效的dom。")]),t._v(" "),s("p",[t._v("解决办法")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("my-component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("动态组件(组件切换)")])]),t._v(" "),s("p",[t._v("componentName可以是在本页面已经注册的局部组件名和全局组件名, 也可以是一个组件的选项对象。当控制 componentName改变时就可以动态切换选择组件。")]),t._v(" "),s("div",{staticClass:"language-ruby line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":is")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"componentName"')])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_20-vue-项目进行-seo-优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-vue-项目进行-seo-优化"}},[t._v("#")]),t._v(" 20. Vue 项目进行 SEO 优化")]),t._v(" "),s("p",[t._v("Vue SPA单页面应用对SEO不太友好，当然也有相应的解决方案，下面列出几种SEO方案")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("SSR服务器渲染")])]),t._v(" "),s("p",[t._v("服务端渲染, 在服务端html页面节点, 已经解析创建完了, 浏览器直接拿到的是解析完成的页面解构")]),t._v(" "),s("p",[t._v("关于服务器渲染："),s("a",{attrs:{href:"https://ssr.vuejs.org/zh/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93-ssr-%EF%BC%9F",title:"https://ssr.vuejs.org/zh/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93-ssr-%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue官网介绍"),s("OutboundLink")],1),t._v(" ，对Vue版本有要求，对服务器也有一定要求，需要支持nodejs环境。")]),t._v(" "),s("p",[t._v("优势: 更好的 SEO，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面")]),t._v(" "),s("p",[t._v("缺点: 服务器nodejs环境的要求, 且对原代码的改造成本高! "),s("code",[t._v("nuxt.js")]),t._v(" (坑比较多, 做好踩坑的准备)")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("静态化 (博客, 介绍性官网)")])]),t._v(" "),s("p",[t._v("Nuxt.js 可以进行 generate 静态化打包, 缺点: 动态路由会被忽略。 "),s("code",[t._v("/users/:id")])]),t._v(" "),s("p",[t._v("优势：")]),t._v(" "),s("ul",[s("li",[t._v("编译打包时, 就会帮你处理, 纯静态文件，访问速度超快；")]),t._v(" "),s("li",[t._v("对比SSR，不涉及到服务器负载方面问题；")]),t._v(" "),s("li",[t._v("静态网页不宜遭到黑客攻击，安全性更高。")])]),t._v(" "),s("p",[t._v("不足：")]),t._v(" "),s("ul",[s("li",[t._v("如果动态路由参数多的话不适用。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("预渲染 prerender-spa-plugin (插件)")])]),t._v(" "),s("p",[t._v("如果你只是对少数页面需要做SEO处理（例如 / 首页, /about 关于等页面）")]),t._v(" "),s("p",[t._v("预渲染是一个非常好的方式, 预渲染会在构建时, 简单的针对特定路由, 生成静态 HTML 文件 (打包时可以帮你解析静态化)")]),t._v(" "),s("p",[t._v("优势: 设置预渲染简单, 对代码的改动小")]),t._v(" "),s("p",[t._v("缺点: 只适合于做少数页面进行SEO的情况, 如果页面几百上千, 就不推荐了 (会打包很慢)")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("使用Phantomjs "),s("code",[t._v("针对爬虫")]),t._v(" 做处理")])]),t._v(" "),s("p",[t._v("Phantomjs是一个基于webkit内核的无头浏览器，没有UI界面，就是一个浏览器，")]),t._v(" "),s("p",[t._v("其内的点击、翻页等人为相关操作需要程序设计实现。")]),t._v(" "),s("p",[t._v("这种解决方案其实是一种旁路机制，原理就是通过Nginx配置， 判断访问的来源UA是否是爬虫访问，")]),t._v(" "),s("p",[t._v("如果是则将搜索引擎的爬虫请求转发到一个node server，再通过PhantomJS来解析完整的HTML，返回给爬虫")]),t._v(" "),s("p",[t._v("优势：")]),t._v(" "),s("ul",[s("li",[t._v("完全不用改动项目代码，按原本的SPA开发即可，对比开发SSR成本小太多了；")]),t._v(" "),s("li",[t._v("对已用SPA开发完成的项目，这是不二之选。")])]),t._v(" "),s("p",[t._v("不足：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("部署需要node服务器支持；")])]),t._v(" "),s("li",[s("p",[t._v("爬虫访问比网页访问要慢一些，因为定时要定时资源加载完成才返回给爬虫；(不影响用户的访问)")])]),t._v(" "),s("li",[s("p",[t._v("如果被恶意模拟百度爬虫大量循环爬取，会造成服务器负载方面问题，")]),t._v(" "),s("p",[t._v("解决方法是判断访问的IP，是否是百度官方爬虫的IP。")])])])])]),t._v(" "),s("p",[s("strong",[t._v("小结:")])]),t._v(" "),s("ul",[s("li",[t._v("如果构建大型网站，如商城类 => SSR服务器渲染")]),t._v(" "),s("li",[t._v("如果只是正常公司官网, 博客网站等 => 预渲染/静态化/Phantomjs 都比较方便")]),t._v(" "),s("li",[t._v("如果是已用SPA开发完成的项目进行SEO优化，而且部署环境支持node服务器，使用 Phantomjs")])]),t._v(" "),s("h2",{attrs:{id:"_21-后端接口还没有开发好-怎么使用mock数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-后端接口还没有开发好-怎么使用mock数据"}},[t._v("#")]),t._v(" 21. 后端接口还没有开发好，怎么使用mock数据")]),t._v(" "),s("p",[t._v("Mock: 模拟数据；拦截请求；")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mock/index.js")]),t._v("\nMock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 req 拿到前端的信息")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据此信息返回对应的数据（Mock 的数据）")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mock 的数据 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("div",{staticClass:"language-arduino line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-arduino"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\nimport "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'./mock'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"_22-vue动画怎么实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-vue动画怎么实现"}},[t._v("#")]),t._v(" 22. vue动画怎么实现")]),t._v(" "),s("p",[t._v("当vue中，显示隐藏，创建移除，一个元素或者一个组件的时候，可以通过transition实现动画。")]),t._v(" "),s("ul",[s("li",[t._v("进入（显示，创建）")]),t._v(" "),s("li",[s("ul",[s("li",[t._v("v-enter-from 进入前")]),t._v(" "),s("li",[t._v("v-enter-active 进入中")]),t._v(" "),s("li",[t._v("v-enter-to 进入后")])])]),t._v(" "),s("li",[t._v("离开（隐藏，移除）")]),t._v(" "),s("li",[s("ul",[s("li",[t._v("v-leave-from 进入前")]),t._v(" "),s("li",[t._v("v-leave-active 进入中")]),t._v(" "),s("li",[t._v("v-leave-to 进入后")])])])]),t._v(" "),s("p",[t._v("两个步骤")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("给要加动画的盒子,包裹一个transition标签")]),t._v(" "),s("li",[t._v("在动画类名中写样式")])]),t._v(" "),s("p",[t._v("多个transition使用不同动画，可以添加nam属性，name属性的值替换v即可。")]),t._v(" "),s("h2",{attrs:{id:"_23-vue初始化过程中-new-vue-options-都做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-vue初始化过程中-new-vue-options-都做了什么"}},[t._v("#")]),t._v(" 23. Vue初始化过程中（new Vue(options)）都做了什么？")]),t._v(" "),s("ul",[s("li",[t._v("处理组件配置项；初始化根组件时进行了选项合并操作，将全局配置合并到根组件的局部配置上；初始化每个子组件时做了一些性能优化，将组件配置对象上的一些深层次属性放到 vm.$options 选项中，以提高代码的执行效率；")]),t._v(" "),s("li",[t._v("初始化组件实例的关系属性，比如"),s("code",[t._v("$parent、 $children、 $root、 $refs")]),t._v("等 处理自定义事件")]),t._v(" "),s("li",[t._v("调用 beforeCreate 钩子函数")]),t._v(" "),s("li",[t._v("初始化组件的 inject 配置项，得到 ret[key] = val 形式的配置对象，然后对该配置对象进行响应式处理，并代理每个 key 到 vm 实例上")]),t._v(" "),s("li",[t._v("数据响应式，处理 props、methods、data、computed、watch 等选项")]),t._v(" "),s("li",[t._v("解析组件配置项上的 provide 对象，将其挂载到 vm._provided 属性上 调用 created 钩子函数")]),t._v(" "),s("li",[t._v("如果发现配置项上有 el 选项，则自动调用"),s("code",[t._v("$mount")]),t._v("方法，也就是说有了 el 选项，就不需要再手动调用 "),s("code",[t._v("$mount")]),t._v(" 方法，反之，没提供 el 选项则必须调用 $mount")])]),t._v(" "),s("h2",{attrs:{id:"_24-vue中data的属性可以和methods中方法同名吗-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-vue中data的属性可以和methods中方法同名吗-为什么"}},[t._v("#")]),t._v(" 24. vue中data的属性可以和methods中方法同名吗，为什么？")]),t._v(" "),s("p",[t._v("可以同名，methods的方法名会被data的属性覆盖；调试台也会出现报错信息，但是不影响执行；")]),t._v(" "),s("h2",{attrs:{id:"_25-什么是函数式组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-什么是函数式组件"}},[t._v("#")]),t._v(" 25. 什么是函数式组件？")]),t._v(" "),s("p",[t._v("函数式组件，我们可以理解为没有内部状态，没有生命周期钩子函数，没有"),s("code",[t._v("this")]),t._v("(不需要实例化的组件)。")]),t._v(" "),s("p",[s("strong",[t._v("为什么使用函数式组件")])]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("最主要最关键的原因是函数式组件不需要实例化，无状态，没有生命周期，所以渲染性能要好于普通组件")]),t._v(" "),s("li",[t._v("函数式组件结构比较简单，代码结构更清晰")])]),t._v(" "),s("p",[s("strong",[t._v("函数式组件与普通组件的区别")])]),t._v(" "),s("p",[t._v("函数式组件需要在声明组件是指定functional")]),t._v(" "),s("p",[t._v("函数式组件不需要实例化，所以没有"),s("code",[t._v("this")]),t._v(","),s("code",[t._v("this")]),t._v("通过"),s("code",[t._v("render")]),t._v("函数的第二个参数来代替")]),t._v(" "),s("p",[t._v("函数式组件没有生命周期钩子函数，不能使用计算属性，watch等等")]),t._v(" "),s("p",[t._v("函数式组件不能通过$emit对外暴露事件，调用事件只能通过"),s("code",[t._v("context.listeners.click")]),t._v("的方式调用外部传入的事件")]),t._v(" "),s("p",[t._v("因为函数式组件是没有实例化的，所以在外部通过"),s("code",[t._v("ref")]),t._v("去引用组件时，实际引用的是"),s("code",[t._v("HTMLElement")])]),t._v(" "),s("p",[t._v("函数式组件的"),s("code",[t._v("props")]),t._v("可以不用显示声明，所以没有在"),s("code",[t._v("props")]),t._v("里面声明的属性都会被自动隐式解析为"),s("code",[t._v("prop")]),t._v(",而普通组件所有未声明的属性都被解析到"),s("code",[t._v("$attrs")]),t._v("里面，并自动挂载到组件根元素上面(可以通过"),s("code",[t._v("inheritAttrs")]),t._v("属性禁止)")]),t._v(" "),s("h2",{attrs:{id:"_26-vue2怎么内部监听生命周期钩子-hook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-vue2怎么内部监听生命周期钩子-hook"}},[t._v("#")]),t._v(" 26. Vue2怎么内部监听生命周期钩子(hook)")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Vue")]),t._v("组件中，可以用过"),s("code",[t._v("$on")]),t._v(","),s("code",[t._v("$once")]),t._v("去监听所有的生命周期钩子函数，如监听组件的"),s("code",[t._v("updated")]),t._v("钩子函数可以写成 "),s("code",[t._v("this.$on('hook:updated', () => {})")])])])}),[],!1,null,null,null);s.default=n.exports}}]);