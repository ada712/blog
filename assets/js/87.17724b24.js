(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{572:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"一、vue3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、vue3"}},[s._v("#")]),s._v(" 一、Vue3")]),s._v(" "),t("h2",{attrs:{id:"_1-vue2和vue3的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue2和vue3的区别"}},[s._v("#")]),s._v(" 1. vue2和vue3的区别")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("监测机制的改变")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("vue3 中使用了ES6 的 "),t("code",[s._v("Proxy")]),s._v("API 对数据代理，监测的是整个对象，而不再是某个属性。")])]),s._v(" "),t("li",[t("p",[s._v("消除了 Vue 2 当中基于 Object.defineProperty 的实现所存在的很多限制")])]),s._v(" "),t("li",[t("p",[s._v("vue3可以监测到对象属性的添加和删除，可以监听数组的变化；")])]),s._v(" "),t("li",[t("p",[s._v("vue3支持 Map、Set、WeakMap 和 WeakSet。")])])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("Vue3支持碎片(Fragments)")])]),s._v(" "),t("ul",[t("li",[s._v("Vue2在组件中只有一个根节点。")]),s._v(" "),t("li",[s._v("Vue3在组件可以拥有多个根节点。")])])]),s._v(" "),t("li",[t("p",[s._v("API模式不同")]),s._v(" "),t("ul",[t("li",[s._v("Vue2与Vue3 "),t("code",[s._v("最大的")]),s._v("区别：Vue2使用"),t("code",[s._v("选项式")]),s._v("API（Options API）对比Vue3"),t("code",[s._v("组合式")]),s._v("API（Composition API）")])])]),s._v(" "),t("li",[t("p",[s._v("建立数据的方式不同")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Vue2：这里把数据放入data属性中")])]),s._v(" "),t("li",[t("p",[s._v("Vue3：需要使用一个新的setup()方法，此方法在组件初始化构造的时候触发。")])]),s._v(" "),t("li",[t("p",[s._v("使用以下三步来建立响应式数据:")]),s._v(" "),t("ul",[t("li",[s._v("从vue"),t("code",[s._v("引入ref或reactive")])]),s._v(" "),t("li",[s._v("简单数据类型使用"),t("code",[s._v("ref()")]),s._v("方法处理，复杂类型数据用"),t("code",[s._v("reactive()")]),s._v("处理")]),s._v(" "),t("li",[s._v("使用"),t("code",[s._v("setup()")]),s._v("方法来"),t("code",[s._v("返回")]),s._v("我们的响应性数据，从而我们的"),t("code",[s._v("template")]),s._v("可以"),t("code",[s._v("获取")]),s._v("这些响应性数据")])])])])]),s._v(" "),t("li",[t("p",[s._v("生命周期钩子不同 — "),t("code",[s._v("Lifecyle Hooks")])]),s._v(" "),t("ul",[t("li",[s._v("setup() :开始创建组件之前，在beforeCreate和created之前执行。创建的是data和method")]),s._v(" "),t("li",[s._v("onBeforeMount() : 组件挂载到节点上之前执行的函数。")]),s._v(" "),t("li",[s._v("onMounted() : 组件挂载完成后执行的函数。")]),s._v(" "),t("li",[s._v("onBeforeUpdate(): 组件更新之前执行的函数。")]),s._v(" "),t("li",[s._v("onUpdated(): 组件更新完成之后执行的函数。")]),s._v(" "),t("li",[s._v("onBeforeUnmount(): 组件卸载之前执行的函数。")]),s._v(" "),t("li",[s._v("onUnmounted(): 组件卸载完成后执行的函数")])]),s._v(" "),t("p",[s._v("若组件被"),t("code",[s._v("<keep-alive>")]),s._v("包含，则多出下面两个钩子函")]),s._v(" "),t("ul",[t("li",[s._v("onActivated(): 被包含在中的组件，会多出两个生命周期钩子函数。被激活时执行 。")]),s._v(" "),t("li",[s._v("onDeactivated(): 比如从 A组件，切换到 B 组件，A 组件消失时执行。")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("父子传参不同")]),s._v("，子组件通过"),t("code",[s._v("defineProps()")]),s._v("进行接收，并且接收这个函数的返回值进行数据操作。")])])]),s._v(" "),t("p",[t("strong",[s._v("总结： vue3 性能更高, 体积更小, 更利于复用, 代码维护更方便")])]),s._v(" "),t("h2",{attrs:{id:"_2-defineproperty和proxy的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-defineproperty和proxy的区别"}},[s._v("#")]),s._v(" 2. defineProperty和proxy的区别")]),s._v(" "),t("p",[s._v("Vue 在实例初始化时遍历 data 中的所有属性，并使用 "),t("code",[s._v("Object.defineProperty")]),s._v(" 把这些属性全部转为 getter/setter。并 劫持各个属性 getter 和 setter，在数据变化时发布消息给订阅者，触发相应的监听回调，而这之间存在几个问题")]),s._v(" "),t("ul",[t("li",[s._v("初始化时需要遍历对象所有 key，如果对象层次较深，性能不好")]),s._v(" "),t("li",[s._v("通知更新过程需要维护大量 dep 实例和 watcher 实例，额外占用内存较多")]),s._v(" "),t("li",[s._v("Object.defineProperty 无法监听到数组元素的变化，只能通过劫持重写数方法")]),s._v(" "),t("li",[s._v("动态新增，删除对象属性无法拦截，只能用特定 set/delete API 代替")]),s._v(" "),t("li",[s._v("不支持 Map、Set 等数据结构")])]),s._v(" "),t("p",[s._v("Vue3 使用 Proxy 来监控数据的变化。Proxy 是 ES6 中提供的功能，其作用为：用于定义基本操作的自定义行为（如属性查找，赋值，枚举，函数调用等）。相对于"),t("code",[s._v("Object.defineProperty()")]),s._v("，其有以下特点：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("Proxy 直接代理整个对象而非对象属性")]),s._v("，这样只需做一层代理就可以监听同级结构下的所有属性变化，包括新增属性和删除属性。")]),s._v(" "),t("li",[s._v("它的处理方式是在 getter 中去递归响应式，这样的好处是真正访问到的内部属性才会变成响应式，简单的可以说是按需实现响应式，减少性能消耗。")]),s._v(" "),t("li",[s._v("Proxy 可以监听数组的变化。")])]),s._v(" "),t("h2",{attrs:{id:"_3-vue3-diff算法和-vue2-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue3-diff算法和-vue2-的区别"}},[s._v("#")]),s._v(" 3. Vue3 Diff算法和 Vue2 的区别")]),s._v(" "),t("p",[s._v("我们知道在数据变更触发页面重新渲染，会生成虚拟 DOM 并进行 patch 过程，这一过程在 Vue3 中的优化有如下")]),s._v(" "),t("p",[t("strong",[s._v("编译阶段的优化：")])]),s._v(" "),t("ul",[t("li",[s._v("事件缓存：将事件缓存(如: @click)，可以理解为变成静态的了")]),s._v(" "),t("li",[s._v("静态提升：第一次创建静态节点时保存，后续直接复用")]),s._v(" "),t("li",[s._v("添加静态标记：给节点添加静态标记，以优化 Diff 过程")])]),s._v(" "),t("p",[s._v('由于编译阶段的优化，除了能更快的生成虚拟 DOM 以外，还使得 Diff 时可以跳过"永远不会变化的节点"，')]),s._v(" "),t("p",[t("strong",[s._v("Diff 优化如下")])]),s._v(" "),t("ul",[t("li",[s._v("Vue2 是全量 Diff，Vue3 是静态标记 + 非全量 Diff")]),s._v(" "),t("li",[s._v("使用最长递增子序列优化了对比流程")])]),s._v(" "),t("p",[s._v("根据尤大公布的数据就是 Vue3 "),t("code",[s._v("update")]),s._v(" 性能提升了 "),t("code",[s._v("1.3~2 倍")])]),s._v(" "),t("h2",{attrs:{id:"_4-composition-api-与-options-api的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-composition-api-与-options-api的区别"}},[s._v("#")]),s._v(" 4. composition API 与 options API的区别")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("vue2 采用的就是 "),t("code",[s._v("optionsAPI")])]),s._v(" "),t("p",[s._v("(1) 优点:"),t("strong",[t("code",[s._v("易于学习和使用")])]),s._v(", 每个代码有着明确的位置 (例如: 数据放 data 中, 方法放 methods中)")]),s._v(" "),t("p",[s._v("(2) 缺点: 相似的逻辑, 不容易复用, 在大项目中尤为明显")]),s._v(" "),t("p",[s._v("(3) 虽然 optionsAPI 可以通过mixins 提取相同的逻辑, 但是也并不是特别好维护")])]),s._v(" "),t("li",[t("p",[s._v("vue3 新增的就是 "),t("code",[s._v("compositionAPI")])]),s._v(" "),t("p",[s._v("(1) compositionAPI 是基于 "),t("strong",[s._v("逻辑功能")]),s._v(" 组织代码的, 一个功能 api 相关放到一起")]),s._v(" "),t("p",[s._v("(2) 即使项目大了, 功能多了, 也能快速定位功能相关的 api")]),s._v(" "),t("p",[s._v("(3) 大大的提升了 "),t("code",[s._v("代码可读性")]),s._v(" 和 "),t("code",[s._v("可维护性")])])]),s._v(" "),t("li",[t("p",[s._v("vue3 推荐使用 composition API, 也保留了options API")]),s._v(" "),t("p",[s._v("即就算不用composition API, 用 vue2 的写法也完全兼容!!")])])]),s._v(" "),t("h2",{attrs:{id:"_5-composition-api与react-hook很像-区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-composition-api与react-hook很像-区别是什么"}},[s._v("#")]),s._v(" 5. Composition API与React Hook很像，区别是什么")]),s._v(" "),t("p",[s._v("从React Hook的实现角度看，React Hook是根据useState调用的顺序来确定下一次重渲染时的state是来源于哪个useState，所以出现了以下限制")]),s._v(" "),t("ul",[t("li",[s._v("不能在循环、条件、嵌套函数中调用Hook")]),s._v(" "),t("li",[s._v("必须确保总是在你的React函数的顶层调用Hook")]),s._v(" "),t("li",[s._v("useEffect、useMemo等函数必须手动确定依赖关系")])]),s._v(" "),t("p",[s._v("而Composition API是基于Vue的响应式系统实现的，与React Hook的相比")]),s._v(" "),t("ul",[t("li",[s._v("声明在setup函数内，一次组件实例化只调用一次setup，而React Hook每次重渲染都需要调用Hook，使得React的GC比Vue更有压力，性能也相对于Vue来说也较慢")]),s._v(" "),t("li",[s._v("Compositon API的调用不需要顾虑调用顺序，也可以在循环、条件、嵌套函数中使用")]),s._v(" "),t("li",[s._v("响应式系统自动实现了依赖收集，进而组件的部分的性能优化由Vue内部自己完成，而React Hook需要手动传入依赖，而且必须必须保证依赖的顺序，让useEffect、useMemo等函数正确的捕获依赖变量，否则会由于依赖不正确使得组件性能下降。")])]),s._v(" "),t("p",[s._v("虽然Compositon API看起来比React Hook好用，但是其设计思想也是借鉴React Hook的。")]),s._v(" "),t("h2",{attrs:{id:"_6-setup-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-setup-函数"}},[s._v("#")]),s._v(" 6. setup 函数")]),s._v(" "),t("p",[t("code",[s._v("setup()")]),s._v(" 函数是 vue3 中，专门为组件提供的新属性。它为我们使用 vue3的 "),t("code",[s._v("Composition API")]),s._v(" 新特性提供了统一的入口, "),t("code",[s._v("setup")]),s._v(" 函数会在 "),t("code",[s._v("beforeCreate")]),s._v(" 、"),t("code",[s._v("created")]),s._v(" 之前执行, vue3也是取消了这两个钩子，统一用"),t("code",[s._v("setup")]),s._v("代替, 该函数相当于一个生命周期函数，vue中过去的"),t("code",[s._v("data")]),s._v("，"),t("code",[s._v("methods")]),s._v("，"),t("code",[s._v("watch")]),s._v("等全部都用对应的新增"),t("code",[s._v("api")]),s._v("写在"),t("code",[s._v("setup()")]),s._v("函数中")]),s._v(" "),t("p",[t("code",[s._v("setup()")]),s._v(" 接收两个参数 "),t("code",[s._v("props")]),s._v(" 和 "),t("code",[s._v("context")]),s._v("。它里面不能使用 "),t("code",[s._v("this")]),s._v("，而是通过 context 对象来代替当前执行上下文绑定的对象，context 对象有四个属性："),t("code",[s._v("attrs")]),s._v("、"),t("code",[s._v("slots")]),s._v("、"),t("code",[s._v("emit")]),s._v("、"),t("code",[s._v("expose")])]),s._v(" "),t("p",[s._v("里面通过 "),t("code",[s._v("ref")]),s._v(" 和 "),t("code",[s._v("reactive")]),s._v(" 代替以前的 data 语法，"),t("code",[s._v("return")]),s._v(" 出去的内容，可以在模板直接使用，包括变量和方法")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("container"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("h1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("@click")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("say()"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("{{msg}}"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("h1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\nexport default {\n  setup (props,context) {\n    console.log('setup执行了')\n    console.log(this)  // undefined\n    // 定义数据和函数\n    const msg = 'hi vue3'\n    const say = () => {\n      console.log(msg)\n    }\n    // Attribute (非响应式对象，等同于 $attrs)\n    context.attrs\n    // 插槽 (非响应式对象，等同于 $slots)\n    context.slots\n    // 触发事件 (方法，等同于 $emit)\n    context.emit\n    // 暴露公共 property (函数)\n    context.expose\n​\n    return { msg , say}\n  },\n  beforeCreate() {\n    console.log('beforeCreate执行了')\n    console.log(this)  \n  }\n}\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h2",{attrs:{id:"_7-setup语法糖-script-setup语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-setup语法糖-script-setup语法"}},[s._v("#")]),s._v(" 7. setup语法糖 （script setup语法）")]),s._v(" "),t("p",[s._v("script setup是在单文件组件 (SFC) 中使用组合式 API 的编译时语法糖。相比于普通的 script 语法更加简洁")]),s._v(" "),t("p",[s._v("要使用这个语法，需要将 "),t("code",[s._v("setup")]),s._v(" attribute 添加到 "),t("code",[s._v("<script>")]),s._v(" 代码块上：")]),s._v(" "),t("p",[s._v("格式：")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("setup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\nconsole.log('hello script setup')\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("顶层的绑定会自动暴露给模板，所以定义的变量，函数和import导入的内容都可以直接在模板中直接使用")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("h3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("根组件"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("h3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("点击次数：{{ count }}"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("button")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("@click")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("点击修改"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("button")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("setup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\nimport { ref } from 'vue'\n​\nconst count = ref(0)\nconst add = () => {\n  count.value++\n}\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("使用 "),t("code",[s._v("setup")]),s._v(" 语法糖时，不用写 "),t("code",[s._v("export default {}")]),s._v("，子组件只需要 "),t("code",[s._v("import")]),s._v(" 就直接使用，不需要像以前一样在 components 里注册，属性和方法也不用 return。")]),s._v(" "),t("p",[s._v("并且里面不需要用 "),t("code",[s._v("async")]),s._v(" 就可以直接使用 "),t("code",[s._v("await")]),s._v("，因为这样默认会把组件的 "),t("code",[s._v("setup")]),s._v(" 变为 "),t("code",[s._v("async setup")])]),s._v(" "),t("p",[s._v("用语法糖时，props、attrs、slots、emit、expose 的获取方式也不一样了")]),s._v(" "),t("p",[s._v("3.0~3.2版本变成了通过 import 引入的 API："),t("code",[s._v("defineProps")]),s._v("、"),t("code",[s._v("defineEmit")]),s._v("、"),t("code",[s._v("useContext")]),s._v("(在3.2版本已废弃)，useContext 的属性 "),t("code",[s._v("{ emit, attrs, slots, expose }")])]),s._v(" "),t("p",[s._v("3.2+版本不需要引入，而直接调用："),t("code",[s._v("defineProps")]),s._v("、"),t("code",[s._v("defineEmits")]),s._v("、"),t("code",[s._v("defineExpose")]),s._v("、"),t("code",[s._v("useSlots")]),s._v("、"),t("code",[s._v("useAttrs")])]),s._v(" "),t("h2",{attrs:{id:"_8-reactive、-shallowreactive-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-reactive、-shallowreactive-函数"}},[s._v("#")]),s._v(" 8. reactive、 shallowReactive 函数")]),s._v(" "),t("p",[t("strong",[s._v("reactive")])]),s._v(" "),t("p",[t("code",[s._v("reactive()")]),s._v(" 函数接收一个普通对象，返回一个响应式的数据对象, 相当于 "),t("code",[s._v("Vue 2.x")]),s._v(" 中的 "),t("code",[s._v("Vue.observable()")]),s._v(" API，响应式转换是“深层”的——它影响所有嵌套属性。基于proxy来实现，想要使用创建的响应式数据也很简单，创建出来之后，在"),t("code",[s._v("setup")]),s._v("中"),t("code",[s._v("return")]),s._v("出去，直接在"),t("code",[s._v("template")]),s._v("中调用即可")]),s._v(" "),t("p",[t("strong",[s._v("shallowReactive")])]),s._v(" "),t("p",[s._v("创建一个响应式代理，它跟踪其自身属性的响应性"),t("code",[s._v("shallowReactive")]),s._v("生成非递归响应数据，只监听第一层数据的变化，但不执行嵌套对象的深层响应式转换 (暴露原始值)。")]),s._v(" "),t("h2",{attrs:{id:"_9-ref、-shallowref-、isref、torefs-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-ref、-shallowref-、isref、torefs-函数"}},[s._v("#")]),s._v(" 9. ref、 shallowRef 、isRef、toRefs 函数")]),s._v(" "),t("p",[t("strong",[s._v("ref")])]),s._v(" "),t("p",[t("code",[s._v("ref()")]),s._v(" 函数用来根据给定的值创建一个响应式的数据对象，"),t("code",[s._v("ref()")]),s._v(" 函数调用的返回值是一个对象，这个对象上只包含一个 "),t("code",[s._v("value")]),s._v(" 属性, 只在setup函数内部访问"),t("code",[s._v("ref")]),s._v("函数需要加"),t("code",[s._v(".value")]),s._v("，其用途创建独立的原始值")]),s._v(" "),t("p",[t("code",[s._v("reactive")]),s._v(" 将解包所有深层的 "),t("code",[s._v("refs")]),s._v("，同时维持 ref 的响应性。当将 "),t("code",[s._v("ref")]),s._v("分配给 "),t("code",[s._v("reactive")]),s._v(" property 时，ref 将被自动解包")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c9cc17c3983d423e833219ba6a7f1b2f~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"a1.png"}})]),s._v(" "),t("p",[t("strong",[s._v("shallowRef")])]),s._v(" "),t("p",[t("code",[s._v("ref()")]),s._v(" 的浅层作用形式。"),t("code",[s._v("shallowRef()")]),s._v(" 常常用于对大型数据结构的性能优化或是与外部的状态管理系统集成")]),s._v(" "),t("p",[t("strong",[s._v("isRef")])]),s._v(" "),t("p",[t("code",[s._v("isRef()")]),s._v(" 用来判断某个值是否为 "),t("code",[s._v("ref()")]),s._v(" 创建出来的对象")]),s._v(" "),t("p",[t("strong",[s._v("toRefs")])]),s._v(" "),t("p",[t("strong",[s._v("使用场景: 如果对一个响应数据, 进行解构 或者 展开, 会丢失他的响应式特性!")])]),s._v(" "),t("p",[s._v("原因: vue3 底层是对 对象 进行监听劫持")]),s._v(" "),t("p",[s._v("作用: 对一个响应式对象的所有内部属性, 都做响应式处理")]),s._v(" "),t("ol",[t("li",[s._v("reactive/ref的响应式功能是赋值给对象的, 如果给对象解构或者展开, 会让数据丢失响应式的能力")]),s._v(" "),t("li",[t("strong",[s._v("使用 toRefs 可以保证该对象展开的每个属性都是响应式的")])])]),s._v(" "),t("h2",{attrs:{id:"_10-readonly、isreadonly、shallowreadonly函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-readonly、isreadonly、shallowreadonly函数"}},[s._v("#")]),s._v(" 10. readonly、isReadonly、shallowReadonly函数")]),s._v(" "),t("p",[t("strong",[s._v("readonly")])]),s._v(" "),t("p",[s._v("传入"),t("code",[s._v("ref")]),s._v("或 "),t("code",[s._v("reactive")]),s._v("对象,并返回一个原始对象的只读代理,对象内部任何嵌套的属性也都是只读的、 并且是递归只读。")]),s._v(" "),t("p",[t("strong",[s._v("isReadonly")])]),s._v(" "),t("p",[s._v("检查对象是否是由 "),t("code",[s._v("readonly")]),s._v(" 创建的只读对象")]),s._v(" "),t("p",[t("strong",[s._v("shallowReadonly")])]),s._v(" "),t("p",[t("code",[s._v("shallowReadonly")]),s._v(" 作用只处理对象最外层属性的响应式（浅响应式）的只读，但不执行嵌套对象的深度只读转换 (暴露原始值)")]),s._v(" "),t("h2",{attrs:{id:"readonly和const有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#readonly和const有什么区别"}},[s._v("#")]),s._v(" "),t("code",[s._v("readonly")]),s._v("和"),t("code",[s._v("const")]),s._v("有什么区别？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("const")]),s._v("是赋值保护，使用"),t("code",[s._v("const")]),s._v("定义的变量，该变量不能重新赋值。但如果"),t("code",[s._v("const")]),s._v("赋值的是对象，那么对象里面的东西是可以改的。原因是"),t("code",[s._v("const")]),s._v("定义的变量不能改说的是，对象对应的那个地址不能改变")]),s._v(" "),t("li",[s._v("而"),t("code",[s._v("readonly")]),s._v("是属性保护，不能给属性重新赋值")])]),s._v(" "),t("h2",{attrs:{id:"_11-computed、watch函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-computed、watch函数"}},[s._v("#")]),s._v(" 11.computed、watch函数")]),s._v(" "),t("p",[t("strong",[s._v("computed")])]),s._v(" "),t("p",[s._v("该函数用来创造计算属性，和过去一样，它返回的值是一个ref对象。 里面可以传方法，或者一个对象，对象中包含"),t("code",[s._v("set()")]),s._v("、"),t("code",[s._v("get()")]),s._v("方法")]),s._v(" "),t("p",[t("strong",[s._v("watch")])]),s._v(" "),t("p",[t("code",[s._v("watch")]),s._v(" 函数用来侦听特定的数据源，并在回调函数中执行副作用。默认情况是懒执行的，也就是说仅在侦听的源数据变更时才执行回调。")]),s._v(" "),t("div",{staticClass:"language-scss line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听单个ref")]),s._v("\nconst money = "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("100"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("money"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("=> ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听多个ref")]),s._v("\nconst money = "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("100"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconst count = "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("[money"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" count]"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("=> ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听ref复杂数据")]),s._v("\nconst user = "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 18"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("=> ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user变化了'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v(",\n  ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 深度监听，，，当ref的值是一个复杂数据类型，需要深度监听")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("deep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("immediate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听对象的某个属性的变化")]),s._v("\nconst user = "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 18"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" => user.value.name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("=> ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br")])]),t("h2",{attrs:{id:"_11-watch-和-watcheffect-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-watch-和-watcheffect-的区别"}},[s._v("#")]),s._v(" 11. watch 和 watchEffect 的区别")]),s._v(" "),t("p",[t("code",[s._v("watch")]),s._v(" 作用是对传入的某个或多个值的变化进行监听；触发时会返回新值和老值；也就是说第一次不会执行，只有变化时才会重新执行")]),s._v(" "),t("p",[t("code",[s._v("watchEffect")]),s._v(" 是传入一个函数,会立即执行，所以"),t("strong",[s._v("默认第一次也会执行一次")]),s._v("；不需要传入监听内容，会"),t("strong",[s._v("自动收集函数内的数据源作为依赖")]),s._v("，在依赖变化的时候又会重新执行该函数，如果没有依赖就不会执行；而且不会返回变化前后的新值和老值")]),s._v(" "),t("p",[s._v("共同点是 "),t("code",[s._v("watch")]),s._v(" 和 "),t("code",[s._v("watchEffect")]),s._v(" 会共享以下四种行为：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("停止监听")]),s._v("：组件卸载时都会自动停止监听")]),s._v(" "),t("li",[t("code",[s._v("清除副作用")]),s._v("：onInvalidate 会作为回调的第三个参数传入")]),s._v(" "),t("li",[t("code",[s._v("副作用刷新时机")]),s._v("：响应式系统会缓存副作用函数，并异步刷新，避免同一个 tick 中多个状态改变导致的重复调用")]),s._v(" "),t("li",[t("code",[s._v("监听器调试")]),s._v("：开发模式下可以用 onTrack 和 onTrigger 进行调试")])]),s._v(" "),t("h2",{attrs:{id:"_12-vue3-的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-vue3-的生命周期"}},[s._v("#")]),s._v(" 12. Vue3 的生命周期")]),s._v(" "),t("p",[s._v("基本上就是在 Vue2 生命周期钩子函数名基础上加了 "),t("code",[s._v("on")]),s._v("；beforeDestory 和 destoryed 更名为 onBeforeUnmount 和 onUnmounted；然后用setup代替了两个钩子函数 beforeCreate 和 created；新增了两个开发环境用于调试的钩子")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8832a11723a4c9e9d495fcfa336a6c9~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-18_20-03-05.jpg"}})]),s._v(" "),t("h2",{attrs:{id:"_13-setup语法下怎么设置name属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-setup语法下怎么设置name属性"}},[s._v("#")]),s._v(" 13. setup语法下怎么设置name属性")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("安装插件")]),s._v(" "),t("p",[s._v("yarn add vite-plugin-vue-setup-extend -D")])]),s._v(" "),t("li",[t("p",[s._v("配置 vite.config.ts")])])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" vueSetupExtend "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vite-plugin-vue-setup-extend'")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defineConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  plugins"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vueSetupExtend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在标签中使用")])]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("setup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("MyCom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    // 必须在script标签里面写一点类容，这个插件才会生效,哪怕是注释\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_14-vue3怎么让全局组件有提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue3怎么让全局组件有提示"}},[s._v("#")]),s._v(" 14. Vue3怎么让全局组件有提示")]),s._v(" "),t("p",[s._v("vue3中如果注册的是局部组件，那么props是有类型提示的,但是如果注册的是全局组件，props就没有类型提示了")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/37e98dc55fe7433d890be0a651120cd7~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("解决办法")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在src目录下新建一个文件 global.d.ts")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" XtxSkeleton "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@/components/XtxSkeleton/XtxSkeleton.vue'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参考：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GlobalComponents")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    XtxSkeleton"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" XtxSkeleton\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_15-vue3怎么注册全局自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-vue3怎么注册全局自定义指令"}},[s._v("#")]),s._v(" 15. Vue3怎么注册全局自定义指令")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("directive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lazy'")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.directive('指令名‘，配置对象)")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mounted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_16-vite-和webpack的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-vite-和webpack的区别"}},[s._v("#")]),s._v(" 16. Vite 和Webpack的区别")]),s._v(" "),t("ul",[t("li",[s._v("都是现代化打包工具")]),s._v(" "),t("li",[s._v("启动方式不一样。vite在启动的时候不需要打包，所以不用分析模块与模块之间的依赖关系，不用进行编译。这种方式就类似于我们在使用某个UI框架的时候，可以对其进行按需加载。同样的，vite也是这种机制，当浏览器请求某个模块时，再根据需要对模块内容进行编译。按需动态编译可以缩减编译时间，当项目越复杂，模块越多的情况下，vite明显优于webpack.")]),s._v(" "),t("li",[s._v("热更新方面，效率更高。当改动了某个模块的时候，也只用让浏览器重新请求该模块，不需要像webpack那样将模块以及模块依赖的模块全部编译一次。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("vite相关生态没有webpack完善，vite可以作为开发的辅助。")])]),s._v(" "),t("h2",{attrs:{id:"_17-pinia的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-pinia的好处"}},[s._v("#")]),s._v(" 17. pinia的好处")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("pinia和vuex4一样，也是vue "),t("strong",[s._v("官方")]),s._v(" 状态管理工具(作者是 Vue 核心团队成员）")])]),s._v(" "),t("li",[t("p",[s._v("pinia相比vuex4，对于vue3的 "),t("strong",[s._v("兼容性")]),s._v(" 更好")])]),s._v(" "),t("li",[t("p",[s._v("pinia相比vuex4，具备完善的 "),t("strong",[s._v("类型推荐")]),s._v(" => 对 TS 支持很友好")])]),s._v(" "),t("li",[t("p",[s._v("pinia同样支持vue开发者工具")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Pinia")]),s._v(" 的 API 设计非常接近 Vuex 5 的提案")]),s._v(" "),t("p",[t("strong",[s._v("pinia核心概念")])]),s._v(" "),t("ul",[t("li",[s._v("state: 状态")]),s._v(" "),t("li",[s._v("actions: 修改状态（包括同步和异步，pinia中没有mutations）")]),s._v(" "),t("li",[s._v("getters: 计算属性")])]),s._v(" "),t("p",[s._v("vuex只能有一个根级别的状态, pinia 直接就可以定义多个根级别状态")])])]),s._v(" "),t("h2",{attrs:{id:"_18-vue3的v-model语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-vue3的v-model语法"}},[s._v("#")]),s._v(" 18. Vue3的v-model语法")]),s._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[s._v("父组件给子组件传入一个modelValue的属性")]),s._v(" "),t("li",[s._v("子组件通知父组件的update:modelValue事件，将修改后的值传给父组件")]),s._v(" "),t("li",[s._v("父组件监听 update:modelValue，修改对应的值")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父组件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原生写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("son "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"money"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token decorator"}},[t("span",{pre:!0,attrs:{class:"token at operator"}},[s._v("@")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("modelValue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"val=>money = val"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// v-mode语法糖写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("son v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"money"')]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("mode"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("house"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"house"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    \n    \n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("button "),t("span",{pre:!0,attrs:{class:"token decorator"}},[t("span",{pre:!0,attrs:{class:"token at operator"}},[s._v("@")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("click")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$emit('update:modelValue',modelValue+100)\"")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("点我加钱 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("button"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("好处是什么")])]),s._v(" "),t("p",[s._v("为了整合 .sync和v-model")]),s._v(" "),t("p",[s._v("在Vue2中，v-mode只能绑定一个属性，如果需要绑定多个属性则需要借助.sync修饰符")]),s._v(" "),t("p",[s._v(".sync修饰符在Vue3中已被移除，直接被v-model取代。")]),s._v(" "),t("h2",{attrs:{id:"二、ts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、ts"}},[s._v("#")]),s._v(" 二、TS")]),s._v(" "),t("h2",{attrs:{id:"_1-typescript-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-typescript-是什么"}},[s._v("#")]),s._v(" 1. TypeScript 是什么")]),s._v(" "),t("p",[s._v("TypeScript，简称 ts，是微软开发的一种静态的编程语言，它是 JavaScript 的超集。 那么它有什么特别之处呢?")]),s._v(" "),t("ol",[t("li",[s._v("简单来说，js 有的 ts 都有，所有js 代码都可以在 ts 里面运行。")]),s._v(" "),t("li",[s._v("ts 支持类型支持，ts = type +JavaScript。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c2918a13b2f44108fc35c6033fb6577~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-18_20-15-54.jpg"}})]),s._v(" "),t("h2",{attrs:{id:"_2-typescript-与-javascript-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-typescript-与-javascript-的区别"}},[s._v("#")]),s._v(" 2. TypeScript 与 JavaScript 的区别")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70e7d666a20b42939d300e8cd1a2ef71~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-18_20-16-41.jpg"}})]),s._v(" "),t("h2",{attrs:{id:"_3-typescript的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-typescript的类型"}},[s._v("#")]),s._v(" 3.TypeScript的类型")]),s._v(" "),t("h2",{attrs:{id:"_1、-基础类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、-基础类型"}},[s._v("#")]),s._v(" ①、 基础类型")]),s._v(" "),t("h3",{attrs:{id:"_1-1-boolean-、number-、string-、symbol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-boolean-、number-、string-、symbol"}},[s._v("#")]),s._v(" 1.1 Boolean 、Number 、String 、Symbol")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let isDone: boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("false;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("// ES5：var isDone")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("false;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let count: number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("// ES5：var count")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let name: string")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"semliker";')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("// ES5：var name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("'semlinker';")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("const sym")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("Symbol();")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let obj")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("sym")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(': "semlinker",\n};\n​\nconsole.log(obj[sym]); // semlinker \n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_1-2-array、tuple-元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-array、tuple-元组"}},[s._v("#")]),s._v(" 1.2 Array、Tuple (元组)")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let list: number[]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("[1, 2, 3];")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("// ES5：var list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("[1,2,3];")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("let list: Array<number>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("[1, 2, 3]; // Array<number>泛型语法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("// ES5：var list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("[1,2,3];")]),s._v("\n​\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("Tuple")])]),s._v(" "),t("p",[t("strong",[s._v("数组一般由同种类型的值组成，但有时我们需要在单个变量中存储不同类型的值，这时候我们就可以使用元组")]),s._v("。在 JavaScript 中是没有元组的，元组是 TypeScript 中特有的类型，其工作方式类似于数组。")]),s._v(" "),t("p",[s._v("元组可用于定义具有有限数量的未命名属性的类型。每个属性都有一个关联的类型。使用元组时，必须提供每个属性的值。")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" position"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.5427")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("116.2317")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-3-undefined-、-null"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-undefined-、-null"}},[s._v("#")]),s._v(" 1.3 undefined 、 null")]),s._v(" "),t("p",[s._v("默认情况下 "),t("code",[s._v("null")]),s._v(" 和 "),t("code",[s._v("undefined")]),s._v(" 是所有类型的子类型。 就是说你可以把 null 和 undefined 赋值给 number 类型的变量。")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" realName"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_1-4-any、unknown-、never"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-any、unknown-、never"}},[s._v("#")]),s._v(" 1.4 any、unknown 、never")]),s._v(" "),t("p",[t("strong",[s._v("any")])]),s._v(" "),t("p",[s._v("在 TypeScript 中，任何类型都可以被归为 "),t("code",[s._v("any")]),s._v(" 类型。这让"),t("code",[s._v("any")]),s._v("类型成为了类型系统的顶级类型（也被称作全局超级类型）。但是不建议使用 any，不然就丧失了 TS 提供的保护机制，失去了使用TS的意义。")]),s._v(" "),t("p",[t("strong",[s._v("unknown")])]),s._v(" "),t("p",[s._v("所有类型也都可以赋值给 "),t("code",[s._v("unknown")]),s._v("。这使得 "),t("code",[s._v("unknown")]),s._v(" 成为 TypeScript 类型系统的另一种顶级类型（另一种是 "),t("code",[s._v("any")]),s._v("）。它的定义和 "),t("code",[s._v("any")]),s._v(" 定义很像，但是它是一个安全类型，使用 "),t("code",[s._v("unknown")]),s._v(" 做任何事情都是不合法的。")]),s._v(" "),t("p",[t("strong",[s._v("never")])]),s._v(" "),t("p",[t("code",[s._v("never")]),s._v("类型表示的是那些永不存在的值的类型。")]),s._v(" "),t("p",[s._v("有些情况下值会永不存在，比如，")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果一个函数执行时抛出了异常，那么这个函数永远不存在返回值，因为抛出异常会直接中断程序运行。")])]),s._v(" "),t("li",[t("p",[s._v("函数中执行无限循环的代码，使得程序永远无法运行到函数返回值那一步。")]),s._v(" "),t("p",[s._v("never 类型是任何类型的子类型，也可以赋值给任何类型。")]),s._v(" "),t("p",[t("strong",[s._v("没有类型是 never 的子类型")]),s._v("，没有类型可以赋值给 never 类型（除了 never 本身之外）。 即使 "),t("code",[s._v("any")]),s._v("也不可以赋值给 never 。")])])]),s._v(" "),t("h2",{attrs:{id:"_2、-函数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、-函数类型"}},[s._v("#")]),s._v(" ②、 函数类型")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("函数的类型实际上指的是："),t("code",[s._v("函数参数")]),s._v("和"),t("code",[s._v("返回值")]),s._v("的类型")])]),s._v(" "),t("li",[t("p",[s._v("为函数指定类型的两种方式：")]),s._v(" "),t("ol",[t("li",[s._v("单独指定参数、返回值的类型")]),s._v(" "),t("li",[s._v("同时指定参数、返回值的类型")])])])]),s._v(" "),t("p",[t("strong",[s._v("单独指定参数、返回值的类型")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数声明")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 箭头函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" add "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("同时指定参数、返回值的类型:")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddFn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" add"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("AddFn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_2-2-void-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-void-类型"}},[s._v("#")]),s._v(" 2.2 void 类型")]),s._v(" "),t("p",[s._v("如果函数没有返回值，那么，函数返回值类型为："),t("code",[s._v("void")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("function "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("greet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'Hello'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("注意：")]),s._v(" "),t("ul",[t("li",[s._v("如果一个函数没有返回值，此时，在 TS 的类型中，应该使用 "),t("code",[s._v("void")]),s._v(" 类型")])]),s._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果什么都不写，此时，add 函数的返回值类型为： void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这种写法是明确指定函数返回值类型为 void，与上面不指定返回值类型相同")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 但，如果指定 返回值类型为 undefined，此时，函数体中必须显示的 return undefined 才可以")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" undefined "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此处，返回的 undefined 是 JS 中的一个值")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" undefined\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"_2-3-可选参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-可选参数"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2.3 可选参数")])]),s._v(" "),t("ul",[t("li",[s._v("使用函数实现某个功能时，参数可以传也可以不传。这种情况下，在给函数参数指定类型时，就用到"),t("strong",[s._v("可选参数")]),s._v("了")]),s._v(" "),t("li",[s._v("比如，数组的 slice 方法，可以 "),t("code",[s._v("slice()")]),s._v(" 也可以 "),t("code",[s._v("slice(1)")]),s._v(" 还可以 "),t("code",[s._v("slice(1, 3)")])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" mySlice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v("?: number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("?: number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": void {\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'起始索引：'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'结束索引：'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("可选参数：在可传可不传的参数名称后面添加 "),t("code",[s._v("?")]),s._v("（问号）")]),s._v(" "),t("li",[s._v("注意："),t("strong",[s._v("可选参数只能出现在参数列表的最后")]),s._v("，也就是说可选参数后面不能再出现必选参数")])]),s._v(" "),t("h3",{attrs:{id:"_2-4-默认参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-默认参数"}},[s._v("#")]),s._v(" 2.4 默认参数")]),s._v(" "),t("p",[s._v("跟 JS 的写法一样，在入参里定义初始值。")]),s._v(" "),t("p",[s._v("和可选参数不同的是，默认参数可以不放在函数入参的最后面")]),s._v(" "),t("h3",{attrs:{id:"_2-5-函数重载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-函数重载"}},[s._v("#")]),s._v(" 2.5 函数重载")]),s._v(" "),t("p",[s._v("函数重载或方法重载是使用相同名称和不同参数数量或类型创建多个方法的一种能力。")]),s._v(" "),t("p",[s._v("不必太纠结函数重载，知道有这个概念即可，平时一般用泛型来解决类似问题。")]),s._v(" "),t("h2",{attrs:{id:"_3、-对象类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、-对象类型"}},[s._v("#")]),s._v(" ③、 对象类型")]),s._v(" "),t("p",[s._v("JS 中的对象是由属性和方法构成的，而 "),t("strong",[s._v("TS 对象的类型就是在描述对象的结构")]),s._v("（有什么类型的属性和方法）")]),s._v(" "),t("p",[s._v("对象类型的写法:")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 空对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有属性的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'同学'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 既有属性又有方法的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在一行代码中指定对象的多个属性类型时，使用 `;`（分号）来分隔")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象中如果有多个类型，可以换行写：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过换行来分隔多个属性类型，可以去掉 `;`")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法的类型也可以使用箭头函数形式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("greet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("greet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("h3",{attrs:{id:"_3-2-对象可选属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-对象可选属性"}},[s._v("#")]),s._v(" 3.2 对象可选属性")]),s._v(" "),t("ul",[t("li",[s._v("对象的属性或方法，也可以是可选的，此时就用到"),t("strong",[s._v("可选属性")]),s._v("了")]),s._v(" "),t("li",[s._v("比如，我们在使用 "),t("code",[s._v("axios({ ... })")]),s._v(" 时，如果发送 GET 请求，method 属性就可以省略")]),s._v(" "),t("li",[s._v("可选属性的语法与函数可选参数的语法一致，都使用 "),t("code",[s._v("?")]),s._v(" 来表示")])]),s._v(" "),t("div",{staticClass:"language-lua line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lua"}},[t("code",[s._v("type Config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string\n  method?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myAxios")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_4、-interface-接口类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、-interface-接口类型"}},[s._v("#")]),s._v(" ④、 interface 接口类型")]),s._v(" "),t("p",[s._v("当一个对象类型被多次使用时，一般会使用接口（"),t("code",[s._v("interface")]),s._v("）来描述对象的类型，达到复用的目的")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("解释：")]),s._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[s._v("使用 "),t("code",[s._v("interface")]),s._v(" 关键字来声明接口")]),s._v(" "),t("li",[s._v("接口名称(比如，此处的 IPerson)，可以是任意合法的变量名称，推荐以 "),t("code",[s._v("I")]),s._v(" 开头")]),s._v(" "),t("li",[s._v("声明接口后，直接使用接口名称作为变量的类型")]),s._v(" "),t("li",[s._v("因为每一行只有一个属性类型，因此，属性类型后没有 ;(分号)")])])])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" IPerson "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"_4-2-接口继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-接口继承"}},[s._v("#")]),s._v(" 4.2 接口继承")]),s._v(" "),t("ul",[t("li",[s._v("如果两个接口之间有相同的属性或方法，可以将"),t("strong",[s._v("公共的属性或方法抽离出来，通过继承来实现复用")])]),s._v(" "),t("li",[s._v("比如，这两个接口都有 x、y 两个属性，重复写两次，可以，但很繁琐")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Point2D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 继承 Point2D")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Point3D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Point2D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  z"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_4-3-interface-和-type的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-interface-和-type的区别"}},[s._v("#")]),s._v(" 4.3 interface 和 type的区别")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("interface（接口）和 type（类型别名）的对比：")])]),s._v(" "),t("li",[t("p",[s._v("相同点：都可以给对象指定类型")])]),s._v(" "),t("li",[t("p",[s._v("不同点:")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("interface")]),s._v(" ：")]),s._v(" "),t("ul",[t("li",[s._v("只能为对象指定类型")]),s._v(" "),t("li",[s._v("可以使用extends继承")]),s._v(" "),t("li",[s._v("多个同名的interface会合并")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("type")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("不仅可以为对象指定类型，实际上可以为任意类型指定别名")]),s._v(" "),t("li",[s._v("可以使用&运算符实现继承效果")]),s._v(" "),t("li",[s._v("多个同名的type会报错")])])])])])]),s._v(" "),t("h2",{attrs:{id:"_5、-联合类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、-联合类型"}},[s._v("#")]),s._v(" ⑤、 联合类型")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" arr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("解释："),t("code",[s._v("|")]),s._v("（竖线）在 TS 中叫做"),t("strong",[s._v("联合类型")]),s._v("，即：由两个或多个其他类型组成的类型，表示可以是这些类型中的任意一种")]),s._v(" "),t("li",[s._v("注意：这是 TS 中联合类型的语法，只有一根竖线，不要与 JS 中的或（|| 或）混淆了")])]),s._v(" "),t("h2",{attrs:{id:"_6、字面量类型、枚举-enum-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、字面量类型、枚举-enum-类型"}},[s._v("#")]),s._v(" ⑥、字面量类型、枚举(enum)类型")]),s._v(" "),t("p",[t("strong",[s._v("字面量类型")])]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("const str")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("Hello TS")]),s._v("'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("str 是一个常量(const)，它的值不能变化只能是 'Hello TS'，所以，它的类型为:'Hello TS'")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("注意：此处的 'Hello TS'，就是一个"),t("strong",[s._v("字面量类型")]),s._v("，也就是说某个特定的字符串也可以作为 TS 中的类型")])]),s._v(" "),t("li",[t("p",[s._v("任意的 JS 字面量（比如，对象、数字等）都可以作为类型使用")]),s._v(" "),t("ul",[t("li",[s._v("字面量："),t("code",[s._v("{ name: 'jack' }")]),s._v(" "),t("code",[s._v("[]")]),s._v(" "),t("code",[s._v("18")]),s._v(" "),t("code",[s._v("20")]),s._v(" "),t("code",[s._v("'abc'")]),s._v(" "),t("code",[s._v("false")]),s._v(" "),t("code",[s._v("function() {}")])])])])]),s._v(" "),t("p",[t("strong",[s._v("枚举类型")])]),s._v(" "),t("p",[s._v("在任何项目开发中，我们都会遇到定义常量的情况，常量就是指不会被改变的值。")]),s._v(" "),t("p",[s._v("TS 中我们使用 "),t("code",[s._v("const")]),s._v(" 来声明常量，但是有些取值是在一定范围内的一系列常量，比如一周有七天，比如方向分为上下左右四个方向。")]),s._v(" "),t("p",[s._v("这时就可以使用枚举（Enum）来定义。")]),s._v(" "),t("div",{staticClass:"language-scss line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建枚举")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("enum Direction ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Up"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Down"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Right "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用枚举类型")]),s._v("\nfunction "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeDirection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Direction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("direction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用函数时，需要应该传入：枚举 Direction 成员的任意一个")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类似于 JS 中的对象，直接通过 点（.）语法 访问枚举的成员")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeDirection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Direction.Up"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("枚举实现原理")])]),s._v(" "),t("ul",[t("li",[s._v("枚举是 TS 为数不多的非 JavaScript 类型级扩展(不仅仅是类型)的特性之一")]),s._v(" "),t("li",[s._v("因为：其他类型仅仅被当做类型，而枚举不仅用作类型，还提供值(枚举成员都是有值的)")]),s._v(" "),t("li",[s._v("也就是说，其他的类型会在编译为 JS 代码时自动移除。但是，"),t("strong",[s._v("枚举类型会被编译为 JS 代码")])])]),s._v(" "),t("div",{staticClass:"language-css line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("enum Direction")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  Up = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UP'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  Down = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DOWN'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  Left = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'LEFT'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  Right = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'RIGHT'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n// 会被编译为以下 JS 代码：\nvar Direction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("​\n(function (Direction)")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  Direction["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Up'")]),s._v("] = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UP'")]),s._v("\n  Direction["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Down'")]),s._v("] = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DOWN'")]),s._v("\n  Direction["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Left'")]),s._v("] = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'LEFT'")]),s._v("\n  Direction["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Right'")]),s._v("] = "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'RIGHT'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v(")(Direction || Direction =")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("说明：枚举与前面讲到的字面量类型+联合类型组合的功能类似，都用来表示一组明确的可选值列表")]),s._v(" "),t("li",[s._v("一般情况下，"),t("strong",[s._v("推荐使用字面量类型+联合类型组合的方式")]),s._v("，因为相比枚举，这种方式更加直观、简洁、高效")])]),s._v(" "),t("h2",{attrs:{id:"_4-ts中的class类的关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-ts中的class类的关键字"}},[s._v("#")]),s._v(" 4. TS中的class类的关键字")]),s._v(" "),t("p",[t("strong",[s._v("extends")])]),s._v(" "),t("p",[s._v("在 TypeScript 中，我们可以通过 "),t("code",[s._v("extends")]),s._v(" 关键字来实现继承")]),s._v(" "),t("p",[t("strong",[s._v("super")])]),s._v(" "),t("p",[s._v("子类没有定义自己的属性，可以不写 super ，但是如果子类有自己的属性，就要用到 super 关键字来把父类的属性继承过来。")]),s._v(" "),t("p",[t("strong",[s._v("public")])]),s._v(" "),t("p",[t("code",[s._v("public")]),s._v("，公有的，一个类里默认所有的方法和属性都是 public。")]),s._v(" "),t("p",[t("strong",[s._v("private")])]),s._v(" "),t("p",[t("code",[s._v("private")]),s._v("，私有的，只属于这个类自己，它的实例和继承它的子类都访问不到。")]),s._v(" "),t("p",[t("strong",[s._v("protected")])]),s._v(" "),t("p",[t("code",[s._v("protected")]),s._v(" 受保护的，继承它的子类可以访问，实例不能访问。")]),s._v(" "),t("p",[t("strong",[s._v("static")])]),s._v(" "),t("p",[t("code",[s._v("static")]),s._v(" 是静态属性，可以理解为是类上的一些常量，实例不能访问。")]),s._v(" "),t("p",[t("strong",[s._v("abstract")])]),s._v(" "),t("p",[t("code",[s._v("abstract")]),s._v(" 关键字来定义抽象类和抽象方法")]),s._v(" "),t("p",[s._v("抽象类，是指"),t("strong",[s._v("只能被继承，但不能被实例化的类")]),s._v("，就这么简单。")]),s._v(" "),t("p",[s._v("抽象类有两个特点：")]),s._v(" "),t("ul",[t("li",[s._v("抽象类不允许被实例化")]),s._v(" "),t("li",[s._v("抽象类中的抽象方法必须被子类实现")])]),s._v(" "),t("p",[t("strong",[s._v("# （私有字段）")])]),s._v(" "),t("p",[s._v("私有字段与常规属性（甚至使用 "),t("code",[s._v("private")]),s._v(" 修饰符声明的属性）不同，私有字段要牢记以下规则：")]),s._v(" "),t("ul",[t("li",[s._v("私有字段以 "),t("code",[s._v("#")]),s._v(" 字符开头，有时我们称之为私有名称；")]),s._v(" "),t("li",[s._v("每个私有字段名称都唯一地限定于其包含的类；")]),s._v(" "),t("li",[s._v("不能在私有字段上使用 TypeScript 可访问性修饰符（如 public 或 private）；")]),s._v(" "),t("li",[s._v("私有字段不能在包含的类之外访问，甚至不能被检测到。")])]),s._v(" "),t("h2",{attrs:{id:"_5-类型推断、类型断言、非空断言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-类型推断、类型断言、非空断言"}},[s._v("#")]),s._v(" 5. 类型推断、类型断言、非空断言")]),s._v(" "),t("h2",{attrs:{id:"_5-1-类型推断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-类型推断"}},[s._v("#")]),s._v(" 5.1 "),t("strong",[s._v("类型推断")])]),s._v(" "),t("p",[s._v("在 TS 中，某些没有明确指出类型的地方，"),t("strong",[s._v("TS 的类型推论机制会帮助提供类型")]),s._v(" 换句话说：由于类型推论的存在，有些场合下的类型注解可以省略不写")]),s._v(" "),t("p",[s._v("发生类型推论的 2 种常见场景:")]),s._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[s._v("声明变量并初始化时")]),s._v(" "),t("li",[s._v("决定函数返回值时")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量 age 的类型被自动推断为：number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数返回值的类型被自动推断为：number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_5-2-类型断言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-类型断言"}},[s._v("#")]),s._v(" 5.2 "),t("strong",[s._v("类型断言")])]),s._v(" "),t("p",[s._v("有时候你会比 TS 更加明确一个值的类型，此时，可以使用类型断言来指定"),t("strong",[s._v("更具体")]),s._v("的类型。")]),s._v(" "),t("p",[s._v("类型断言好比其他语言里的类型转换，但是不进行特殊的数据检查和解构。它没有运行时的影响，只是在编译阶段起作用。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" aLink "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'link'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" HTMLAnchorElement\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("另一种语法，使用 "),t("code",[s._v("<>")]),s._v(" 语法，这种语法形式不常用，知道即可:")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 尖括号语法，知道即可：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" aLink "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("HTMLAnchorElement"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'link'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_5-3-非空断言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-非空断言"}},[s._v("#")]),s._v(" 5.3 "),t("strong",[s._v("非空断言")])]),s._v(" "),t("p",[s._v("在上下文中当类型检查器无法断定类型时，一个新的后缀表达式操作符 "),t("code",[s._v("!")]),s._v(" 可以用于断言操作对象是非 null 和非 undefined 类型。"),t("strong",[s._v("具体而言，x! 将从 x 值域中排除 null 和 undefined 。")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" aLink "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'link'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" \n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果没有非空断言，使用aLink时会报错，因为页面可能没有link这个标签，得到的就是undefined")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_6-泛型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-泛型"}},[s._v("#")]),s._v(" 6. 泛型")]),s._v(" "),t("h2",{attrs:{id:"_6-1-泛型-基本介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-泛型-基本介绍"}},[s._v("#")]),s._v(" 6.1 泛型-基本介绍")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("泛型是可以在保证类型安全前提下，让函数等与多种类型一起工作，从而实现复用")]),s._v("，常用于：函数、接口、class 中")]),s._v(" "),t("li",[s._v("需求：创建一个 id 函数，传入什么数据就返回该数据本身(也就是说，参数和返回值类型相同)")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("比如，id(10) 调用以上函数就会直接返回 10 本身。但是，该函数只接收数值类型，无法用于其他类型")]),s._v(" "),t("li",[s._v("为了能让函数能够接受任意类型，可以将参数类型修改为 any。但是，这样就失去了 TS 的类型保护，类型不安全")])]),s._v(" "),t("div",{staticClass:"language-arduino line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-arduino"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" any"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" any "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("strong",[s._v("泛型在保证类型安全(不丢失类型信息)的同时，可以让函数等与多种不同的类型一起工作，灵活可复用")])]),s._v(" "),t("li",[s._v("实际上，在 C# 和 Java 等编程语言中，泛型都是用来实现可复用组件功能的主要工具之一")])]),s._v(" "),t("h2",{attrs:{id:"_6-2-泛型函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-泛型函数"}},[s._v("#")]),s._v(" 6.2 泛型函数")]),s._v(" "),t("p",[s._v("定义泛型函数")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("function "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Type "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\nfunction "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" T"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" T "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释:")]),s._v(" "),t("ol",[t("li",[s._v("语法：在函数名称的后面添加 "),t("code",[s._v("<>")]),s._v("(尖括号)，"),t("strong",[s._v("尖括号中添加类型变量")]),s._v("，比如此处的 Type")]),s._v(" "),t("li",[t("strong",[s._v("类型变量 Type，是一种特殊类型的变量，它处理类型而不是值")])]),s._v(" "),t("li",[t("strong",[s._v("该类型变量相当于一个类型容器")]),s._v("，能够捕获用户提供的类型(具体是什么类型由用户调用该函数时指定)")]),s._v(" "),t("li",[s._v("因为 Type 是类型，因此可以将其作为函数参数和返回值的类型，表示参数和返回值具有相同的类型")]),s._v(" "),t("li",[s._v("类型变量 Type，可以是任意合法的变量名称")])])])]),s._v(" "),t("p",[s._v("调用泛型函数")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("const num")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("id<number>(10)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("const str")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("id<string>('a')")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释：")]),s._v(" "),t("ol",[t("li",[s._v("语法：在函数名称的后面添加 "),t("code",[s._v("<>")]),s._v("(尖括号)，"),t("strong",[s._v("尖括号中指定具体的类型")]),s._v("，比如，此处的 number")]),s._v(" "),t("li",[s._v("当传入类型 number 后，这个类型就会被函数声明时指定的类型变量 Type 捕获到")]),s._v(" "),t("li",[s._v("此时，Type 的类型就是 number，所以，函数 id 参数和返回值的类型也都是 number")])])]),s._v(" "),t("li",[t("p",[s._v("同样，如果传入类型 string，函数 id 参数和返回值的类型就都是 string")])]),s._v(" "),t("li",[t("p",[s._v("这样，通过泛型就做到了让 id 函数与多种不同的类型一起工作，"),t("strong",[s._v("实现了复用的同时保证了类型安全")])])])]),s._v(" "),t("p",[t("strong",[s._v("简化泛型函数调用")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("// 省略 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 调用函数\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释:")]),s._v(" "),t("ol",[t("li",[s._v("在调用泛型函数时，"),t("strong",[s._v("可以省略 "),t("code",[s._v("<类型>")]),s._v(" 来简化泛型函数的调用")])]),s._v(" "),t("li",[s._v("此时，TS 内部会采用一种叫做"),t("strong",[s._v("类型参数推断")]),s._v("的机制，来根据传入的实参自动推断出类型变量 Type 的类型")]),s._v(" "),t("li",[s._v("比如，传入实参 10，TS 会自动推断出变量 num 的类型 number，并作为 Type 的类型")])])]),s._v(" "),t("li",[t("p",[s._v("推荐：使用这种简化的方式调用泛型函数，使代码更短，更易于阅读")])]),s._v(" "),t("li",[t("p",[s._v("说明："),t("strong",[s._v("当编译器无法推断类型或者推断的类型不准确时，就需要显式地传入类型参数")])])])]),s._v(" "),t("h2",{attrs:{id:"_6-3-泛型约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-泛型约束"}},[s._v("#")]),s._v(" 6.3 泛型约束")]),s._v(" "),t("ul",[t("li",[s._v("默认情况下，泛型函数的类型变量 Type 可以代表多个类型，这导致无法访问任何属性")]),s._v(" "),t("li",[s._v("比如，id('a') 调用函数时获取参数的长度：")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("function "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Type "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("解释：Type 可以代表任意类型，无法保证一定存在 length 属性，比如 number 类型就没有 length")]),s._v(" "),t("li",[s._v("此时，就需要"),t("strong",[s._v("为泛型添加约束来"),t("code",[s._v("收缩类型")]),s._v("(缩窄类型取值范围)")])]),s._v(" "),t("li",[s._v("添加泛型约束收缩类型，主要有以下两种方式：1 指定更加具体的类型 2 添加约束")])]),s._v(" "),t("p",[t("strong",[s._v("指定更加具体的类型")])]),s._v(" "),t("p",[s._v("比如，将类型修改为 "),t("code",[s._v("Type[]")]),s._v("(Type 类型的数组)，因为只要是数组就一定存在 length 属性，因此就可以访问了")]),s._v(" "),t("div",{staticClass:"language-matlab line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-matlab"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("添加约束")])]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个接口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ILength")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" length"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Type extends ILength 添加泛型约束")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 解释：表示传入的 类型 必须满足 ILength 接口的要求才行，也就是得有一个 number 类型的 length 属性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token generic-function"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token generic class-name"}},[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Type "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" ILength"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")])])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("console")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释:")]),s._v(" "),t("ol",[t("li",[s._v("创建描述约束的接口 ILength，该接口要求提供 length 属性")]),s._v(" "),t("li",[s._v("通过 "),t("code",[s._v("extends")]),s._v(" 关键字使用该接口，为泛型(类型变量)添加约束")]),s._v(" "),t("li",[s._v("该约束表示："),t("strong",[s._v("传入的类型必须具有 length 属性")])])])]),s._v(" "),t("li",[t("p",[s._v("注意:传入的实参(比如，数组)只要有 length 属性即可（类型兼容性)")])])]),s._v(" "),t("h2",{attrs:{id:"_6-4-多个类型变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-多个类型变量"}},[s._v("#")]),s._v(" 6.4 多个类型变量")]),s._v(" "),t("p",[s._v("泛型的类型变量可以有多个，并且"),t("strong",[s._v("类型变量之间还可以约束")]),s._v("(比如，第二个类型变量受第一个类型变量约束) 比如，创建一个函数来获取对象中属性的值：")]),s._v(" "),t("div",{staticClass:"language-vbnet line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vbnet"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" getProp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Key")]),s._v(" extends keyof "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" obj["),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v("]\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'jack', age: 18 }")]),s._v("\ngetProp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'name')")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释:")]),s._v(" "),t("ol",[t("li",[s._v("添加了第二个类型变量 Key，两个类型变量之间使用 "),t("code",[s._v(",")]),s._v(" 逗号分隔。")]),s._v(" "),t("li",[t("strong",[s._v("keyof 关键字接收一个对象类型，生成其键名称(可能是字符串或数字)的联合类型")]),s._v("。")]),s._v(" "),t("li",[s._v("本示例中 "),t("code",[s._v("keyof Type")]),s._v(" 实际上获取的是 person 对象所有键的联合类型，也就是："),t("code",[s._v("'name' | 'age'")])]),s._v(" "),t("li",[s._v("类型变量 Key 受 Type 约束，可以理解为：Key 只能是 Type 所有键中的任意一个，或者说只能访问对象中存在的属性")])])])]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Type extends object 表示： Type 应该是一个对象类型，如果不是 对象 类型，就会报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果要用到 对象 类型，应该用 object ，而不是 Object")]),s._v("\nfunction getProperty"),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" keyof "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_6-5-泛型接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-泛型接口"}},[s._v("#")]),s._v(" 6.5 泛型接口")]),s._v(" "),t("p",[s._v("泛型接口：接口也可以配合泛型来使用，以增加其灵活性，增强其复用性")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IdFunc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" Type\n  "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("ids")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" IdFunc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ids")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("解释:")]),s._v(" "),t("ol",[t("li",[s._v("在接口名称的后面添加 "),t("code",[s._v("<类型变量>")]),s._v("，那么，这个接口就变成了泛型接口。")]),s._v(" "),t("li",[s._v("接口的类型变量，对接口中所有其他成员可见，也就是"),t("strong",[s._v("接口中所有成员都可以使用类型变量")]),s._v("。")]),s._v(" "),t("li",[s._v("使用泛型接口时，"),t("strong",[s._v("需要显式指定具体的类型")]),s._v("(比如，此处的 IdFunc)。")]),s._v(" "),t("li",[s._v("此时，id 方法的参数和返回值类型都是 number;ids 方法的返回值类型是 number[]。")])])])]),s._v(" "),t("h2",{attrs:{id:"_7-ts内置的常用工具类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-ts内置的常用工具类型"}},[s._v("#")]),s._v(" 7. TS内置的常用工具类型")]),s._v(" "),t("h2",{attrs:{id:"_7-1-typeof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-typeof"}},[s._v("#")]),s._v(" 7.1 typeof")]),s._v(" "),t("p",[s._v("在 TypeScript 中，"),t("code",[s._v("typeof")]),s._v(" 操作符可以用来获取一个变量声明或对象的类型。")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sem"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'semlinker'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sem")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" sem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> Person")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" toArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> (x: number) => number[]")]),s._v("\n​\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h2",{attrs:{id:"_7-2-keyof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-keyof"}},[s._v("#")]),s._v(" 7.2 keyof")]),s._v(" "),t("p",[t("code",[s._v("keyof")]),s._v(" 操作符是在 TypeScript 2.1 版本引入的，该操作符可以用于获取某种类型的所有键，其返回类型是联合类型。")]),s._v(" "),t("div",{staticClass:"language-lua line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lua"}},[t("code",[s._v("interface "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\ntype K1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" keyof Person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"age"')]),s._v("\ntype K2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" keyof Person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"length"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"toString"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pop"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"push"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"concat"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"join"')]),s._v(" \ntype K3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("keyof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" number\n​\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_7-3-in"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-in"}},[s._v("#")]),s._v(" 7.3 in")]),s._v(" "),t("p",[t("code",[s._v("in")]),s._v(" 用来遍历枚举类型：")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" Keys "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" Obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" Keys"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_7-4-infer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-infer"}},[s._v("#")]),s._v(" 7.4 infer")]),s._v(" "),t("p",[s._v("在条件类型语句中，可以用 "),t("code",[s._v("infer")]),s._v(" 声明一个类型变量并且对它进行使用。")]),s._v(" "),t("div",{staticClass:"language-r line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-r"}},[t("code",[s._v("type ReturnType"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" T extends "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token ellipsis"}},[s._v("...")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" any"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" infer R ? R "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" any"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("以上代码中 "),t("code",[s._v("infer R")]),s._v(" 就是声明一个变量来承载传入函数签名的返回值类型，简单说就是用它取到函数返回值的类型方便之后使用。")]),s._v(" "),t("h2",{attrs:{id:"_7-5-extends"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-extends"}},[s._v("#")]),s._v(" 7.5 extends")]),s._v(" "),t("p",[s._v("有时候我们定义的泛型不想过于灵活或者说想继承某些类等，可以通过 extends 关键字添加泛型约束。")]),s._v(" "),t("div",{staticClass:"language-lua line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lua"}},[t("code",[s._v("interface "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Lengthwise")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" loggingIdentity"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T extends Lengthwise"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" T"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_7-6-partial、readonly、required"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-partial、readonly、required"}},[s._v("#")]),s._v(" 7.6 Partial、Readonly、Required")]),s._v(" "),t("p",[t("code",[s._v("Partial<T>")]),s._v(" 的作用就是将某个类型里的属性全部变为可选项 "),t("code",[s._v("?")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("type Partial<T>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("P in keyof T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("?: T[P];\n};\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在以上代码中，首先通过 "),t("code",[s._v("keyof T")]),s._v(" 拿到 "),t("code",[s._v("T")]),s._v(" 的所有属性名，然后使用 "),t("code",[s._v("in")]),s._v(" 进行遍历，将值赋给 "),t("code",[s._v("P")]),s._v("，最后通过 "),t("code",[s._v("T[P]")]),s._v(" 取得相应的属性值。中间的 "),t("code",[s._v("?")]),s._v(" 号，用于将所有属性变为可选。")]),s._v(" "),t("p",[t("code",[s._v("Readonly<T>")])]),s._v(" "),t("p",[s._v("将 T 中的所有属性设置为只读")]),s._v(" "),t("p",[t("code",[s._v("Required<T>")])]),s._v(" "),t("p",[s._v("将 T 中的所有属性设置为必须")]),s._v(" "),t("h2",{attrs:{id:"_7-7-omit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-omit"}},[s._v("#")]),s._v(" 7.7 Omit")]),s._v(" "),t("p",[t("code",[s._v("Omit<T, U>")]),s._v("从类型 "),t("code",[s._v("T")]),s._v(" 中剔除 "),t("code",[s._v("U")]),s._v(" 中的所有属性")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n    age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOmit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Omit"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("IPerson"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这样就剔除了 IPerson 上的 age 属性。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_8-vue3中父子传值-用ts怎么写-怎么设置默认值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-vue3中父子传值-用ts怎么写-怎么设置默认值"}},[s._v("#")]),s._v(" 8. Vue3中父子传值 , 用TS怎么写，怎么设置默认值")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用泛型来约束收到的数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TS的defineProps写法 , defineProps<....>()")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("msg"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'123'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("defineProps"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置默认值需要解构，并且添加全局配置")]),s._v("\n  msg？"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  arr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用TS来子传父  defineEmits<(...):void>()")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" emit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" defineEmits"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'changeMsg'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'addMsg'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("默认值的全局配置")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49e51ed60ae145ee916b2ca490a293ef~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?",alt:"Snipaste_2022-08-23_14-52-51.jpg"}})]),s._v(" "),t("h2",{attrs:{id:"_9-ts怎么给引入的第三方库设置类型声明文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-ts怎么给引入的第三方库设置类型声明文件"}},[s._v("#")]),s._v(" 9. TS怎么给引入的第三方库设置类型声明文件")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("目前，几乎所有常用的第三方库都有相应的类型声明文件")])]),s._v(" "),t("li",[t("p",[s._v("第三方库的类型声明文件有两种存在形式：")]),s._v(" "),t("ul",[t("li",[s._v("1 、库自带类型声明文件")]),s._v(" "),t("li",[s._v("2、 由 TS官方给它写的（DefinitelyTyped 提供）")])])])]),s._v(" "),t("p",[t("strong",[s._v("库自带类型声明文件")]),s._v("：比如，axios")]),s._v(" "),t("p",[s._v("这种情况下，正常导入该库，"),t("strong",[s._v("TS 就会自动加载库自己的类型声明文件")]),s._v("，以提供该库的类型声明。")]),s._v(" "),t("p",[t("strong",[s._v("由 DefinitelyTyped 提供")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("DefinitelyTyped 是一个 github 仓库，用来提供高质量 TypeScript 类型声明")]),s._v(" "),t("li",[s._v("可以通过 npm/yarn 来下载该仓库提供的 TS 类型声明包，这些包的名称格式为:"),t("code",[s._v("@types/*")]),s._v("比如，@types/react、@types/lodash 等")]),s._v(" "),t("li",[s._v("在实际项目开发时，如果你使用的第三方库没有自带的声明文件，VSCode 会给出明确的提示")])]),s._v(" "),t("h2",{attrs:{id:"_10-说说你对-typescript-装饰器的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-说说你对-typescript-装饰器的理解"}},[s._v("#")]),s._v(" 10. 说说你对 TypeScript 装饰器的理解？")]),s._v(" "),t("p",[s._v("装饰器是一种特殊类型的声明，它能够被附加到类声明，方法， 访问符，属性或参数上")]),s._v(" "),t("p",[s._v("是一种在不改变原类和使用继承的情况下，动态地扩展对象功能")]),s._v(" "),t("p",[s._v("同样的，本质也不是什么高大上的结构，就是一个普通的函数，"),t("code",[s._v("@expression")]),s._v(" 的形式其实是"),t("code",[s._v("Object.defineProperty")]),s._v("的语法糖")]),s._v(" "),t("p",[t("code",[s._v("expression")]),s._v("求值后必须也是一个函数，它会在运行时被调用，被装饰的声明信息做为参数传入")]),s._v(" "),t("h2",{attrs:{id:"_11-说说对-typescript-中命名空间与模块的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-说说对-typescript-中命名空间与模块的理解"}},[s._v("#")]),s._v(" 11. 说说对 TypeScript 中命名空间与模块的理解")]),s._v(" "),t("p",[t("strong",[s._v("模块")])]),s._v(" "),t("p",[t("code",[s._v("TypeScript")]),s._v(" 与"),t("code",[s._v("ECMAScript")]),s._v(" 2015 一样，任何包含顶级 "),t("code",[s._v("import")]),s._v(" 或者 "),t("code",[s._v("export")]),s._v(" 的文件都被当成一个模块")]),s._v(" "),t("p",[s._v("相反地，如果一个文件不带有顶级的"),t("code",[s._v("import")]),s._v("或者"),t("code",[s._v("export")]),s._v("声明，那么它的内容被视为全局可见的")]),s._v(" "),t("p",[t("strong",[s._v("命名空间")])]),s._v(" "),t("p",[s._v("命名空间一个最明确的目的就是解决重名问题")]),s._v(" "),t("p",[s._v("命名空间定义了标识符的可见范围，一个标识符可在多个名字空间中定义，它在不同名字空间中的含义是互不相干的")]),s._v(" "),t("p",[s._v("这样，在一个新的名字空间中可定义任何标识符，它们不会与任何已有的标识符发生冲突，因为已有的定义都处于其他名字空间中")]),s._v(" "),t("h2",{attrs:{id:"_12-ts怎么自定义类型声明文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-ts怎么自定义类型声明文件"}},[s._v("#")]),s._v(" 12. TS怎么自定义类型声明文件")]),s._v(" "),t("p",[t("strong",[s._v("如下两种场景需要提供类型声明文件")])]),s._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[s._v("项目内共享类型")]),s._v(" "),t("li",[s._v("为已有 JS 文件提供类型声明")])]),s._v(" "),t("h2",{attrs:{id:"_12-1-项目内共享类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-项目内共享类型"}},[s._v("#")]),s._v(" 12.1 项目内共享类型")]),s._v(" "),t("p",[s._v("将公共的类型定义提取出来，写在index.d.ts文件中 , 并导出")]),s._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Token")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n  refreshToken"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("导入接口并使用")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("setup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("'")]),s._v("ts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("'")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\nimport {Token} from '.' \nfunction fn(token:Token){\n  \n}\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_12-2-为已有-js-文件提供类型声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-为已有-js-文件提供类型声明"}},[s._v("#")]),s._v(" 12.2 为已有 JS 文件提供类型声明")]),s._v(" "),t("p",[t("strong",[s._v("编写同名的.d.ts文件")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("demo.ts\nutils/index.js\nutils/index.d.ts // 这里是重点\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("定义类型声明文件")])]),s._v(" "),t("ol",[t("li",[s._v("它的作用是提供声明，不需要提供逻辑代码；")]),s._v(" "),t("li",[s._v("declare 关键字:用于类型声明，为其他地方(比如，.js 文件)已存在的变量声明类型，而不是创建一个新的变量。")]),s._v(" "),t("li",[t("ul",[t("li",[s._v("对于 type、interface 等这些明确就是 TS 类型的(只能在 TS 中使用的)，可以省略 declare 关键字。")]),s._v(" "),t("li",[s._v("对于 let、function 等具有双重含义(在 JS、TS 中都能用)，应该使用 declare 关键字，明确指定此处用于类型声明。")])])]),s._v(" "),t("li",[t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" songName "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" position "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  y"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n​\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" Direction "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'top'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'right'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bottom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'left'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeDirection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("direction"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Direction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FomatPoint")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("point"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fomatPoint"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" FomatPoint\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);